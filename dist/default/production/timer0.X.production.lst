

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jul 13 20:09:01 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114                           
   115 ;; Function _timer0_interrupt_ovfRoutine is unused but had its address taken
   116  0000                     
   117                           	psect	idataBANK0
   118  0466                     __pidataBANK0:
   119                           
   120                           ;initializer for _Timer_Configuration0
   121  0466  3400               	retlw	0
   122  0467  34C7               	retlw	199
   123  0468  34A0               	retlw	160
   124  0469  3400               	retlw	0
   125  046A  3400               	retlw	0
   126                           
   127                           ;initializer for _Dio_configutation_A
   128  046B  3400               	retlw	0
   129  046C  3420               	retlw	32
   130  046D  3400               	retlw	0
   131  046E  34FF               	retlw	255
   132                           
   133                           ;initializer for _Dio_configutation_C
   134  046F  3402               	retlw	2
   135  0470  34FF               	retlw	255
   136  0471  3400               	retlw	0
   137  0472  3400               	retlw	0
   138                           
   139                           ;initializer for _Dio_configutation_B
   140  0473  3401               	retlw	1
   141  0474  34FF               	retlw	255
   142  0475  34FF               	retlw	255
   143  0476  3400               	retlw	0
   144                           
   145                           	psect	nvCOMMON
   146  007C                     __pnvCOMMON:
   147  007C                     _ret:
   148  007C                     	ds	1
   149                           
   150                           	psect	cinit
   151  07E0                     start_initialization:	
   152                           ; #config settings
   153                           
   154  07E0                     __initialization:
   155                           
   156                           ; Initialize objects allocated to BANK0
   157  07E0  1383               	bcf	3,7	;select IRP bank0
   158  07E1  3052               	movlw	low (__pdataBANK0+17)
   159  07E2  00FD               	movwf	btemp+-1
   160  07E3  3004               	movlw	high __pidataBANK0
   161  07E4  00FE               	movwf	btemp
   162  07E5  3066               	movlw	low __pidataBANK0
   163  07E6  00FF               	movwf	btemp+1
   164  07E7  3041               	movlw	low __pdataBANK0
   165  07E8  0084               	movwf	4
   166  07E9  120A  118A  247B  120A  118A  	fcall	init_ram0
   167                           
   168                           ; Clear objects allocated to BANK0
   169  07EE  3020               	movlw	low __pbssBANK0
   170  07EF  0084               	movwf	4
   171  07F0  3041               	movlw	low (__pbssBANK0+33)
   172  07F1  120A  118A  245E  120A  118A  	fcall	clear_ram0
   173                           
   174                           ; Clear objects allocated to COMMON
   175  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   176  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   177  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   178  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   179  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   180  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   181  07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184  07FC                     __end_of__initialization:
   185  07FC  0183               	clrf	3
   186  07FD  120A  118A  2CEA   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMMON
   189  0070                     __pbssCOMMON:
   190  0070                     DIO_Write@first_powerup:
   191  0070                     	ds	1
   192  0071                     DIO_init@first_powerup_init:
   193  0071                     	ds	1
   194  0072                     _is_init:
   195  0072                     	ds	1
   196  0073                     _TIMER0OVF_INT:
   197  0073                     	ds	1
   198  0074                     _data2:
   199  0074                     	ds	1
   200  0075                     _data:
   201  0075                     	ds	1
   202                           
   203                           	psect	bssBANK0
   204  0020                     __pbssBANK0:
   205  0020                     _Timer_Deinit_Configuration2:
   206  0020                     	ds	5
   207  0025                     _Timer_Deinit_Configuration1:
   208  0025                     	ds	5
   209  002A                     _Timer_Deinit_Configuration0:
   210  002A                     	ds	5
   211  002F                     _Timer_Configuration2:
   212  002F                     	ds	5
   213  0034                     _Timer_Configuration1:
   214  0034                     	ds	5
   215  0039                     _Dio_configutation_E:
   216  0039                     	ds	4
   217  003D                     _Dio_configutation_D:
   218  003D                     	ds	4
   219                           
   220                           	psect	dataBANK0
   221  0041                     __pdataBANK0:
   222  0041                     _Timer_Configuration0:
   223  0041                     	ds	5
   224  0046                     _Dio_configutation_A:
   225  0046                     	ds	4
   226  004A                     _Dio_configutation_C:
   227  004A                     	ds	4
   228  004E                     _Dio_configutation_B:
   229  004E                     	ds	4
   230                           
   231                           	psect	inittext
   232  0477                     init_fetch0:	
   233                           ;	Called with low address in FSR and high address in W
   234                           
   235  0477  087E               	movf	btemp,w
   236  0478  008A               	movwf	10
   237  0479  087F               	movf	btemp+1,w
   238  047A  0082               	movwf	2
   239  047B                     init_ram0:	
   240                           ;Called with:
   241                           ;	high address of idata address in btemp 
   242                           ;	low address of idata address in btemp+1 
   243                           ;	low address of data in FSR
   244                           ;	high address + 1 of data in btemp-1
   245                           
   246  047B  120A  118A  2477  120A  118A  	fcall	init_fetch0
   247  0480  0080               	movwf	0
   248  0481  0A84               	incf	4,f
   249  0482  0804               	movf	4,w
   250  0483  067D               	xorwf	btemp+-1,w
   251  0484  1903               	btfsc	3,2
   252  0485  3400               	retlw	0
   253  0486  0AFF               	incf	btemp+1,f
   254  0487  1903               	btfsc	3,2
   255  0488  0AFE               	incf	btemp,f
   256  0489  2C7B               	goto	init_ram0
   257                           
   258                           	psect	clrtext
   259  045E                     clear_ram0:	
   260                           ;	Called with FSR containing the base address, and
   261                           ;	W with the last address+1
   262                           
   263  045E  0064               	clrwdt	;clear the watchdog before getting into this loop
   264  045F                     clrloop0:
   265  045F  0180               	clrf	0	;clear RAM location pointed to by FSR
   266  0460  0A84               	incf	4,f	;increment pointer
   267  0461  0604               	xorwf	4,w	;XOR with final address
   268  0462  1903               	btfsc	3,2	;have we reached the end yet?
   269  0463  3400               	retlw	0	;all done for this memory range, return
   270  0464  0604               	xorwf	4,w	;XOR again to restore value
   271  0465  2C5F               	goto	clrloop0	;do the next byte
   272                           
   273                           	psect	cstackCOMMON
   274  0076                     __pcstackCOMMON:
   275  0076                     ?_DIO_Write:
   276  0076                     ?_Timer_Init:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0076                     ??_Timer_Init:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0076                     ?_DIO_init:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0076                     ??_DIO_init:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0076                     ?_DIO_Read:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0076                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0076                     DIO_Write@pins:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0076                     DIO_Read@pins:	
   298                           ; 1 bytes @ 0x0
   299                           
   300                           
   301                           ; 1 bytes @ 0x0
   302  0076                     	ds	1
   303  0077                     DIO_Write@value:
   304  0077                     DIO_Read@data:	
   305                           ; 1 bytes @ 0x1
   306                           
   307                           
   308                           ; 1 bytes @ 0x1
   309  0077                     	ds	1
   310  0078                     ??_DIO_Write:
   311  0078                     ??_DIO_Read:	
   312                           ; 1 bytes @ 0x2
   313                           
   314  0078                     Timer_Init@ret_error:	
   315                           ; 1 bytes @ 0x2
   316                           
   317  0078                     DIO_init@ret_error:	
   318                           ; 1 bytes @ 0x2
   319                           
   320                           
   321                           ; 1 bytes @ 0x2
   322  0078                     	ds	1
   323  0079                     Timer_Init@Timer_cfg:
   324  0079                     DIO_init@DIO_info:	
   325                           ; 1 bytes @ 0x3
   326                           
   327                           
   328                           ; 1 bytes @ 0x3
   329  0079                     	ds	1
   330  007A                     DIO_Write@ret_error:
   331  007A                     DIO_Read@GPIO:	
   332                           ; 1 bytes @ 0x4
   333                           
   334                           
   335                           ; 1 bytes @ 0x4
   336  007A                     	ds	1
   337  007B                     DIO_Write@GPIO:
   338  007B                     DIO_Read@ret_error:	
   339                           ; 1 bytes @ 0x5
   340                           
   341                           
   342                           ; 1 bytes @ 0x5
   343  007B                     	ds	1
   344  007C                     ??_main:
   345                           
   346                           	psect	maintext
   347  04EA                     __pmaintext:	
   348                           ; 1 bytes @ 0x6
   349 ;;
   350 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   351 ;;
   352 ;; *************** function _main *****************
   353 ;; Defined at:
   354 ;;		line 13 in file "main.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   363 ;; Tracked objects:
   364 ;;		On entry : B00/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   368 ;;      Params:         0       0       0       0       0
   369 ;;      Locals:         0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0
   371 ;;      Totals:         0       0       0       0       0
   372 ;;Total ram usage:        0 bytes
   373 ;; Hardware stack levels required when called:    1
   374 ;; This function calls:
   375 ;;		_DIO_Read
   376 ;;		_DIO_Write
   377 ;;		_DIO_init
   378 ;;		_Timer_Init
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _main
   386  04EA                     _main:
   387  04EA                     l2612:	
   388                           ;incstack = 0
   389                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   390                           
   391                           
   392                           ;main.c: 15:     ret=Timer_Init(&Timer_Configuration0);
   393  04EA  3041               	movlw	(low (_Timer_Configuration0| 0))& (0+255)
   394  04EB  120A  118A  255E  120A  118A  	fcall	_Timer_Init
   395  04F0  00FF               	movwf	btemp+1
   396  04F1  087F               	movf	btemp+1,w
   397  04F2  00FC               	movwf	_ret
   398                           
   399                           ;main.c: 16:    ret= DIO_init (&Dio_configutation_B);
   400  04F3  304E               	movlw	(low (_Dio_configutation_B| 0))& (0+255)
   401  04F4  120A  118A  26EA  120A  118A  	fcall	_DIO_init
   402  04F9  00FF               	movwf	btemp+1
   403  04FA  087F               	movf	btemp+1,w
   404  04FB  00FC               	movwf	_ret
   405                           
   406                           ;main.c: 17:    ret= DIO_init (&Dio_configutation_C);
   407  04FC  304A               	movlw	(low (_Dio_configutation_C| 0))& (0+255)
   408  04FD  120A  118A  26EA  120A  118A  	fcall	_DIO_init
   409  0502  00FF               	movwf	btemp+1
   410  0503  087F               	movf	btemp+1,w
   411  0504  00FC               	movwf	_ret
   412                           
   413                           ;main.c: 18:    ret= DIO_init (&Dio_configutation_A);
   414  0505  3046               	movlw	(low (_Dio_configutation_A| 0))& (0+255)
   415  0506  120A  118A  26EA  120A  118A  	fcall	_DIO_init
   416  050B  00FF               	movwf	btemp+1
   417  050C  087F               	movf	btemp+1,w
   418  050D  00FC               	movwf	_ret
   419  050E                     l194:	
   420                           ;main.c: 20:    while (1)
   421                           
   422                           
   423                           ;main.c: 21:     {;main.c: 23:     ret=DIO_Read (2,0x10, &data);
   424  050E  3010               	movlw	16
   425  050F  00FF               	movwf	btemp+1
   426  0510  087F               	movf	btemp+1,w
   427  0511  00F6               	movwf	DIO_Read@pins
   428  0512  3075               	movlw	(low (_data| 0))& (0+255)
   429  0513  00FF               	movwf	btemp+1
   430  0514  087F               	movf	btemp+1,w
   431  0515  00F7               	movwf	DIO_Read@data
   432  0516  3002               	movlw	2
   433  0517  120A  118A  248A  120A  118A  	fcall	_DIO_Read
   434  051C  00FF               	movwf	btemp+1
   435  051D  087F               	movf	btemp+1,w
   436  051E  00FC               	movwf	_ret
   437                           
   438                           ;main.c: 24:     ret=DIO_Read (0,0x20, &data2);
   439  051F  3020               	movlw	32
   440  0520  00FF               	movwf	btemp+1
   441  0521  087F               	movf	btemp+1,w
   442  0522  00F6               	movwf	DIO_Read@pins
   443  0523  3074               	movlw	(low (_data2| 0))& (0+255)
   444  0524  00FF               	movwf	btemp+1
   445  0525  087F               	movf	btemp+1,w
   446  0526  00F7               	movwf	DIO_Read@data
   447  0527  3000               	movlw	0
   448  0528  120A  118A  248A  120A  118A  	fcall	_DIO_Read
   449  052D  00FF               	movwf	btemp+1
   450  052E  087F               	movf	btemp+1,w
   451  052F  00FC               	movwf	_ret
   452  0530                     l2614:
   453                           
   454                           ;main.c: 25:     if ((data == 1) &&(data2 == 1)) {
   455  0530  0375               	decf	_data,w
   456  0531  1D03               	btfss	3,2
   457  0532  2D34               	goto	u191
   458  0533  2D35               	goto	u190
   459  0534                     u191:
   460  0534  2D4C               	goto	l2620
   461  0535                     u190:
   462  0535                     l2616:
   463  0535  0374               	decf	_data2,w
   464  0536  1D03               	btfss	3,2
   465  0537  2D39               	goto	u201
   466  0538  2D3A               	goto	u200
   467  0539                     u201:
   468  0539  2D4C               	goto	l2620
   469  053A                     u200:
   470  053A                     l2618:
   471                           
   472                           ;main.c: 26:     ret = DIO_Write (1,0x04|0x08,0xFF);
   473  053A  300C               	movlw	12
   474  053B  00FF               	movwf	btemp+1
   475  053C  087F               	movf	btemp+1,w
   476  053D  00F6               	movwf	DIO_Write@pins
   477  053E  30FF               	movlw	255
   478  053F  00FF               	movwf	btemp+1
   479  0540  087F               	movf	btemp+1,w
   480  0541  00F7               	movwf	DIO_Write@value
   481  0542  3001               	movlw	1
   482  0543  120A  118A  261C  120A  118A  	fcall	_DIO_Write
   483  0548  00FF               	movwf	btemp+1
   484  0549  087F               	movf	btemp+1,w
   485  054A  00FC               	movwf	_ret
   486                           
   487                           ;main.c: 27:     }else{
   488  054B  2D0E               	goto	l194
   489  054C                     l2620:
   490                           
   491                           ;main.c: 28:       ret = DIO_Write (1,0x04|0x08,0);
   492  054C  300C               	movlw	12
   493  054D  00FF               	movwf	btemp+1
   494  054E  087F               	movf	btemp+1,w
   495  054F  00F6               	movwf	DIO_Write@pins
   496  0550  01F7               	clrf	DIO_Write@value
   497  0551  3001               	movlw	1
   498  0552  120A  118A  261C  120A  118A  	fcall	_DIO_Write
   499  0557  00FF               	movwf	btemp+1
   500  0558  087F               	movf	btemp+1,w
   501  0559  00FC               	movwf	_ret
   502  055A  2D0E               	goto	l194
   503  055B  120A  118A  2800   	ljmp	start
   504  055E                     __end_of_main:
   505                           
   506                           	psect	text1
   507  055E                     __ptext1:	
   508 ;; *************** function _Timer_Init *****************
   509 ;; Defined at:
   510 ;;		line 14 in file "timer.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  Timer_cfg       1    wreg     PTR struct Timer_cfg_s
   513 ;;		 -> Timer_Configuration0(5), 
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  Timer_cfg       1    3[COMMON] PTR struct Timer_cfg_s
   516 ;;		 -> Timer_Configuration0(5), 
   517 ;;  ret_error       1    2[COMMON] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      unsigned char 
   520 ;; Registers used:
   521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         2       0       0       0       0
   529 ;;      Temps:          2       0       0       0       0
   530 ;;      Totals:         4       0       0       0       0
   531 ;;Total ram usage:        4 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           
   541                           ;psect for function _Timer_Init
   542  055E                     _Timer_Init:
   543                           
   544                           ;incstack = 0
   545                           ; Regs used in _Timer_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
   546                           ;Timer_Init@Timer_cfg stored from wreg
   547  055E  00F9               	movwf	Timer_Init@Timer_cfg
   548  055F                     l1678:
   549                           
   550                           ;timer.c: 14: ERROR_STATUS Timer_Init(Timer_cfg_s* Timer_cfg);timer.c: 15: {;timer.c: 16
      +                          : uint8_t ret_error = 0;
   551  055F  01F8               	clrf	Timer_Init@ret_error
   552                           
   553                           ;timer.c: 18: switch (Timer_cfg->Timer_CH_NO)
   554  0560  2E04               	goto	l1718
   555  0561                     l1680:
   556                           
   557                           ;timer.c: 21:     *((reg_type8_t)(0x0081)) = (Timer_cfg -> Timer_Mode);
   558  0561  0A79               	incf	Timer_Init@Timer_cfg,w
   559  0562  0084               	movwf	4
   560  0563  0800               	movf	0,w
   561  0564  00FF               	movwf	btemp+1
   562  0565  087F               	movf	btemp+1,w
   563  0566  1683               	bsf	3,5	;RP0=1, select bank1
   564  0567  1303               	bcf	3,6	;RP1=0, select bank1
   565  0568  0081               	movwf	1	;volatile
   566                           
   567                           ;timer.c: 22:         switch (Timer_cfg->Timer_Polling_Or_Interrupt)
   568  0569  2D81               	goto	l1690
   569  056A                     l10:	
   570                           ;timer.c: 23:         {;timer.c: 24:             case 0xA0:
   571                           
   572                           
   573                           ;timer.c: 25:             *((reg_type8_t)(0x000B)) |= 0x80;
   574  056A  178B               	bsf	11,7	;volatile
   575  056B                     l1682:
   576                           
   577                           ;timer.c: 26:             *((reg_type8_t)(0x000B)) |=0xA0;
   578  056B  30A0               	movlw	160
   579  056C  00FF               	movwf	btemp+1
   580  056D  087F               	movf	btemp+1,w
   581  056E  048B               	iorwf	11,f	;volatile
   582  056F                     l1684:
   583                           
   584                           ;timer.c: 27:             TIMER0OVF_INT = ( Timer_cfg -> Timer_Cbk_ptr);
   585  056F  0879               	movf	Timer_Init@Timer_cfg,w
   586  0570  3E04               	addlw	4
   587  0571  0084               	movwf	4
   588  0572  0800               	movf	0,w
   589  0573  00FF               	movwf	btemp+1
   590  0574  087F               	movf	btemp+1,w
   591  0575  00F3               	movwf	_TIMER0OVF_INT
   592                           
   593                           ;timer.c: 28:             break;
   594  0576  2E1A               	goto	l1720
   595  0577                     l1686:
   596                           
   597                           ;timer.c: 30:             *((reg_type8_t)(0x000B)) &= 0xDF;
   598  0577  30DF               	movlw	223
   599  0578  00FF               	movwf	btemp+1
   600  0579  087F               	movf	btemp+1,w
   601  057A  058B               	andwf	11,f	;volatile
   602                           
   603                           ;timer.c: 31:             break;
   604  057B  2E1A               	goto	l1720
   605  057C                     l1688:
   606                           
   607                           ;timer.c: 33:             ret_error += 1 +24;
   608  057C  3019               	movlw	25
   609  057D  00FF               	movwf	btemp+1
   610  057E  087F               	movf	btemp+1,w
   611  057F  07F8               	addwf	Timer_Init@ret_error,f
   612                           
   613                           ;timer.c: 35:         }
   614  0580  2E1A               	goto	l1720
   615  0581                     l1690:
   616  0581  0879               	movf	Timer_Init@Timer_cfg,w
   617  0582  3E02               	addlw	2
   618  0583  0084               	movwf	4
   619  0584  0800               	movf	0,w
   620  0585  00F6               	movwf	??_Timer_Init
   621  0586  01F7               	clrf	??_Timer_Init+1
   622                           
   623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   624                           ; Switch size 1, requested type "simple"
   625                           ; Number of cases is 1, Range of values is 0 to 0
   626                           ; switch strategies available:
   627                           ; Name         Instructions Cycles
   628                           ; simple_byte            4     3 (average)
   629                           ; direct_byte           11     8 (fixed)
   630                           ; jumptable            260     6 (fixed)
   631                           ;	Chosen strategy is simple_byte
   632  0587  0877               	movf	??_Timer_Init+1,w
   633  0588  3A00               	xorlw	0	; case 0
   634  0589  1903               	skipnz
   635  058A  2D8C               	goto	l3122
   636  058B  2D7C               	goto	l1688
   637  058C                     l3122:
   638                           
   639                           ; Switch size 1, requested type "simple"
   640                           ; Number of cases is 2, Range of values is 160 to 223
   641                           ; switch strategies available:
   642                           ; Name         Instructions Cycles
   643                           ; simple_byte            7     4 (average)
   644                           ; direct_byte          203    11 (fixed)
   645                           ; jumptable            263     9 (fixed)
   646                           ;	Chosen strategy is simple_byte
   647  058C  0876               	movf	??_Timer_Init,w
   648  058D  3AA0               	xorlw	160	; case 160
   649  058E  1903               	skipnz
   650  058F  2D6A               	goto	l10
   651  0590  3A7F               	xorlw	127	; case 223
   652  0591  1903               	skipnz
   653  0592  2D77               	goto	l1686
   654  0593  2D7C               	goto	l1688
   655  0594                     l1694:
   656  0594  0879               	movf	Timer_Init@Timer_cfg,w
   657  0595  3E02               	addlw	2
   658  0596  0084               	movwf	4
   659  0597  0800               	movf	0,w
   660  0598  00F6               	movwf	??_Timer_Init
   661  0599  01F7               	clrf	??_Timer_Init+1
   662                           
   663                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   664                           ; Switch size 1, requested type "simple"
   665                           ; Number of cases is 1, Range of values is 0 to 0
   666                           ; switch strategies available:
   667                           ; Name         Instructions Cycles
   668                           ; simple_byte            4     3 (average)
   669                           ; direct_byte           11     8 (fixed)
   670                           ; jumptable            260     6 (fixed)
   671                           ;	Chosen strategy is simple_byte
   672  059A  0877               	movf	??_Timer_Init+1,w
   673  059B  3A00               	xorlw	0	; case 0
   674  059C  1903               	skipnz
   675  059D  2D9F               	goto	l3124
   676  059E  2E1A               	goto	l1720
   677  059F                     l3124:
   678                           
   679                           ; Switch size 1, requested type "simple"
   680                           ; Number of cases is 2, Range of values is 160 to 223
   681                           ; switch strategies available:
   682                           ; Name         Instructions Cycles
   683                           ; simple_byte            7     4 (average)
   684                           ; direct_byte          203    11 (fixed)
   685                           ; jumptable            263     9 (fixed)
   686                           ;	Chosen strategy is simple_byte
   687  059F  0876               	movf	??_Timer_Init,w
   688  05A0  3AA0               	xorlw	160	; case 160
   689  05A1  1903               	skipnz
   690  05A2  2E1A               	goto	l1720
   691  05A3  3A7F               	xorlw	127	; case 223
   692  05A4  1903               	skipnz
   693  05A5  2E1A               	goto	l1720
   694  05A6  2E1A               	goto	l1720
   695  05A7                     l1698:
   696  05A7  0879               	movf	Timer_Init@Timer_cfg,w
   697  05A8  3E02               	addlw	2
   698  05A9  0084               	movwf	4
   699  05AA  0800               	movf	0,w
   700  05AB  00F6               	movwf	??_Timer_Init
   701  05AC  01F7               	clrf	??_Timer_Init+1
   702                           
   703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   704                           ; Switch size 1, requested type "simple"
   705                           ; Number of cases is 1, Range of values is 0 to 0
   706                           ; switch strategies available:
   707                           ; Name         Instructions Cycles
   708                           ; simple_byte            4     3 (average)
   709                           ; direct_byte           11     8 (fixed)
   710                           ; jumptable            260     6 (fixed)
   711                           ;	Chosen strategy is simple_byte
   712  05AD  0877               	movf	??_Timer_Init+1,w
   713  05AE  3A00               	xorlw	0	; case 0
   714  05AF  1903               	skipnz
   715  05B0  2DB2               	goto	l3126
   716  05B1  2E1A               	goto	l1720
   717  05B2                     l3126:
   718                           
   719                           ; Switch size 1, requested type "simple"
   720                           ; Number of cases is 2, Range of values is 160 to 223
   721                           ; switch strategies available:
   722                           ; Name         Instructions Cycles
   723                           ; simple_byte            7     4 (average)
   724                           ; direct_byte          203    11 (fixed)
   725                           ; jumptable            263     9 (fixed)
   726                           ;	Chosen strategy is simple_byte
   727  05B2  0876               	movf	??_Timer_Init,w
   728  05B3  3AA0               	xorlw	160	; case 160
   729  05B4  1903               	skipnz
   730  05B5  2E1A               	goto	l1720
   731  05B6  3A7F               	xorlw	127	; case 223
   732  05B7  1903               	skipnz
   733  05B8  2E1A               	goto	l1720
   734  05B9  2E1A               	goto	l1720
   735  05BA                     l1702:
   736  05BA  0A79               	incf	Timer_Init@Timer_cfg,w
   737  05BB  0084               	movwf	4
   738  05BC  0800               	movf	0,w
   739  05BD  00F6               	movwf	??_Timer_Init
   740  05BE  01F7               	clrf	??_Timer_Init+1
   741                           
   742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   743                           ; Switch size 1, requested type "simple"
   744                           ; Number of cases is 1, Range of values is 0 to 0
   745                           ; switch strategies available:
   746                           ; Name         Instructions Cycles
   747                           ; simple_byte            4     3 (average)
   748                           ; direct_byte           11     8 (fixed)
   749                           ; jumptable            260     6 (fixed)
   750                           ;	Chosen strategy is simple_byte
   751  05BF  0877               	movf	??_Timer_Init+1,w
   752  05C0  3A00               	xorlw	0	; case 0
   753  05C1  1903               	skipnz
   754  05C2  2DC4               	goto	l3128
   755  05C3  2E1A               	goto	l1720
   756  05C4                     l3128:
   757                           
   758                           ; Switch size 1, requested type "simple"
   759                           ; Number of cases is 2, Range of values is 0 to 1
   760                           ; switch strategies available:
   761                           ; Name         Instructions Cycles
   762                           ; simple_byte            7     4 (average)
   763                           ; direct_byte           14     8 (fixed)
   764                           ; jumptable            260     6 (fixed)
   765                           ;	Chosen strategy is simple_byte
   766  05C4  0876               	movf	??_Timer_Init,w
   767  05C5  3A00               	xorlw	0	; case 0
   768  05C6  1903               	skipnz
   769  05C7  2D94               	goto	l1694
   770  05C8  3A01               	xorlw	1	; case 1
   771  05C9  1903               	skipnz
   772  05CA  2DA7               	goto	l1698
   773  05CB  2E1A               	goto	l1720
   774  05CC                     l1706:
   775  05CC  0879               	movf	Timer_Init@Timer_cfg,w
   776  05CD  3E02               	addlw	2
   777  05CE  0084               	movwf	4
   778  05CF  0800               	movf	0,w
   779  05D0  00F6               	movwf	??_Timer_Init
   780  05D1  01F7               	clrf	??_Timer_Init+1
   781                           
   782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   783                           ; Switch size 1, requested type "simple"
   784                           ; Number of cases is 1, Range of values is 0 to 0
   785                           ; switch strategies available:
   786                           ; Name         Instructions Cycles
   787                           ; simple_byte            4     3 (average)
   788                           ; direct_byte           11     8 (fixed)
   789                           ; jumptable            260     6 (fixed)
   790                           ;	Chosen strategy is simple_byte
   791  05D2  0877               	movf	??_Timer_Init+1,w
   792  05D3  3A00               	xorlw	0	; case 0
   793  05D4  1903               	skipnz
   794  05D5  2DD7               	goto	l3130
   795  05D6  2E1A               	goto	l1720
   796  05D7                     l3130:
   797                           
   798                           ; Switch size 1, requested type "simple"
   799                           ; Number of cases is 2, Range of values is 160 to 223
   800                           ; switch strategies available:
   801                           ; Name         Instructions Cycles
   802                           ; simple_byte            7     4 (average)
   803                           ; direct_byte          203    11 (fixed)
   804                           ; jumptable            263     9 (fixed)
   805                           ;	Chosen strategy is simple_byte
   806  05D7  0876               	movf	??_Timer_Init,w
   807  05D8  3AA0               	xorlw	160	; case 160
   808  05D9  1903               	skipnz
   809  05DA  2E1A               	goto	l1720
   810  05DB  3A7F               	xorlw	127	; case 223
   811  05DC  1903               	skipnz
   812  05DD  2E1A               	goto	l1720
   813  05DE  2E1A               	goto	l1720
   814  05DF                     l1710:
   815  05DF  0879               	movf	Timer_Init@Timer_cfg,w
   816  05E0  3E02               	addlw	2
   817  05E1  0084               	movwf	4
   818  05E2  0800               	movf	0,w
   819  05E3  00F6               	movwf	??_Timer_Init
   820  05E4  01F7               	clrf	??_Timer_Init+1
   821                           
   822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   823                           ; Switch size 1, requested type "simple"
   824                           ; Number of cases is 1, Range of values is 0 to 0
   825                           ; switch strategies available:
   826                           ; Name         Instructions Cycles
   827                           ; simple_byte            4     3 (average)
   828                           ; direct_byte           11     8 (fixed)
   829                           ; jumptable            260     6 (fixed)
   830                           ;	Chosen strategy is simple_byte
   831  05E5  0877               	movf	??_Timer_Init+1,w
   832  05E6  3A00               	xorlw	0	; case 0
   833  05E7  1903               	skipnz
   834  05E8  2DEA               	goto	l3132
   835  05E9  2E1A               	goto	l1720
   836  05EA                     l3132:
   837                           
   838                           ; Switch size 1, requested type "simple"
   839                           ; Number of cases is 2, Range of values is 160 to 223
   840                           ; switch strategies available:
   841                           ; Name         Instructions Cycles
   842                           ; simple_byte            7     4 (average)
   843                           ; direct_byte          203    11 (fixed)
   844                           ; jumptable            263     9 (fixed)
   845                           ;	Chosen strategy is simple_byte
   846  05EA  0876               	movf	??_Timer_Init,w
   847  05EB  3AA0               	xorlw	160	; case 160
   848  05EC  1903               	skipnz
   849  05ED  2E1A               	goto	l1720
   850  05EE  3A7F               	xorlw	127	; case 223
   851  05EF  1903               	skipnz
   852  05F0  2E1A               	goto	l1720
   853  05F1  2E1A               	goto	l1720
   854  05F2                     l1714:
   855  05F2  0A79               	incf	Timer_Init@Timer_cfg,w
   856  05F3  0084               	movwf	4
   857  05F4  0800               	movf	0,w
   858  05F5  00F6               	movwf	??_Timer_Init
   859  05F6  01F7               	clrf	??_Timer_Init+1
   860                           
   861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   862                           ; Switch size 1, requested type "simple"
   863                           ; Number of cases is 1, Range of values is 0 to 0
   864                           ; switch strategies available:
   865                           ; Name         Instructions Cycles
   866                           ; simple_byte            4     3 (average)
   867                           ; direct_byte           11     8 (fixed)
   868                           ; jumptable            260     6 (fixed)
   869                           ;	Chosen strategy is simple_byte
   870  05F7  0877               	movf	??_Timer_Init+1,w
   871  05F8  3A00               	xorlw	0	; case 0
   872  05F9  1903               	skipnz
   873  05FA  2DFC               	goto	l3134
   874  05FB  2E1A               	goto	l1720
   875  05FC                     l3134:
   876                           
   877                           ; Switch size 1, requested type "simple"
   878                           ; Number of cases is 2, Range of values is 0 to 1
   879                           ; switch strategies available:
   880                           ; Name         Instructions Cycles
   881                           ; simple_byte            7     4 (average)
   882                           ; direct_byte           14     8 (fixed)
   883                           ; jumptable            260     6 (fixed)
   884                           ;	Chosen strategy is simple_byte
   885  05FC  0876               	movf	??_Timer_Init,w
   886  05FD  3A00               	xorlw	0	; case 0
   887  05FE  1903               	skipnz
   888  05FF  2DCC               	goto	l1706
   889  0600  3A01               	xorlw	1	; case 1
   890  0601  1903               	skipnz
   891  0602  2DDF               	goto	l1710
   892  0603  2E1A               	goto	l1720
   893  0604                     l1718:
   894  0604  0879               	movf	Timer_Init@Timer_cfg,w
   895  0605  0084               	movwf	4
   896  0606  1383               	bcf	3,7	;select IRP bank0
   897  0607  0800               	movf	0,w
   898  0608  00F6               	movwf	??_Timer_Init
   899  0609  01F7               	clrf	??_Timer_Init+1
   900                           
   901                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   902                           ; Switch size 1, requested type "simple"
   903                           ; Number of cases is 1, Range of values is 0 to 0
   904                           ; switch strategies available:
   905                           ; Name         Instructions Cycles
   906                           ; simple_byte            4     3 (average)
   907                           ; direct_byte           11     8 (fixed)
   908                           ; jumptable            260     6 (fixed)
   909                           ;	Chosen strategy is simple_byte
   910  060A  0877               	movf	??_Timer_Init+1,w
   911  060B  3A00               	xorlw	0	; case 0
   912  060C  1903               	skipnz
   913  060D  2E0F               	goto	l3136
   914  060E  2E1A               	goto	l1720
   915  060F                     l3136:
   916                           
   917                           ; Switch size 1, requested type "simple"
   918                           ; Number of cases is 3, Range of values is 0 to 2
   919                           ; switch strategies available:
   920                           ; Name         Instructions Cycles
   921                           ; simple_byte           10     6 (average)
   922                           ; direct_byte           17     8 (fixed)
   923                           ; jumptable            260     6 (fixed)
   924                           ;	Chosen strategy is simple_byte
   925  060F  0876               	movf	??_Timer_Init,w
   926  0610  3A00               	xorlw	0	; case 0
   927  0611  1903               	skipnz
   928  0612  2D61               	goto	l1680
   929  0613  3A01               	xorlw	1	; case 1
   930  0614  1903               	skipnz
   931  0615  2DBA               	goto	l1702
   932  0616  3A03               	xorlw	3	; case 2
   933  0617  1903               	skipnz
   934  0618  2DF2               	goto	l1714
   935  0619  2E1A               	goto	l1720
   936  061A                     l1720:
   937                           
   938                           ;timer.c: 109: return ret_error;
   939  061A  0878               	movf	Timer_Init@ret_error,w
   940  061B                     l44:
   941  061B  0008               	return
   942  061C                     __end_of_Timer_Init:
   943                           
   944                           	psect	text2
   945  06EA                     __ptext2:	
   946 ;; *************** function _DIO_init *****************
   947 ;; Defined at:
   948 ;;		line 11 in file "DIO.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  DIO_info        1    wreg     PTR struct DIO_Cfg_s
   951 ;;		 -> Dio_configutation_A(4), Dio_configutation_C(4), Dio_configutation_B(4), 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;  DIO_info        1    3[COMMON] PTR struct DIO_Cfg_s
   954 ;;		 -> Dio_configutation_A(4), Dio_configutation_C(4), Dio_configutation_B(4), 
   955 ;;  ret_error       1    2[COMMON] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      unsigned char 
   958 ;; Registers used:
   959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         0       0       0       0       0
   966 ;;      Locals:         2       0       0       0       0
   967 ;;      Temps:          2       0       0       0       0
   968 ;;      Totals:         4       0       0       0       0
   969 ;;Total ram usage:        4 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _DIO_init
   980  06EA                     _DIO_init:
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _DIO_init: [wreg-fsr0h+status,2+status,0+btemp+1]
   984                           ;DIO_init@DIO_info stored from wreg
   985  06EA  00F9               	movwf	DIO_init@DIO_info
   986  06EB                     l2506:
   987                           
   988                           ;DIO.c: 11: ERROR_STATUS DIO_init (DIO_Cfg_s *DIO_info);DIO.c: 12: {;DIO.c: 13: uint8_t 
      +                          ret_error=0;
   989  06EB  01F8               	clrf	DIO_init@ret_error
   990  06EC                     l2508:
   991                           
   992                           ;DIO.c: 14: static uint8_t first_powerup_init = 0;;DIO.c: 15: is_init=1;
   993  06EC  01F2               	clrf	_is_init
   994  06ED  0AF2               	incf	_is_init,f
   995  06EE                     l2510:
   996                           
   997                           ;DIO.c: 16:  if (first_powerup_init == 0) {
   998  06EE  0871               	movf	DIO_init@first_powerup_init,w
   999  06EF  1D03               	btfss	3,2
  1000  06F0  2EF2               	goto	u171
  1001  06F1  2EF3               	goto	u170
  1002  06F2                     u171:
  1003  06F2  2F28               	goto	l2530
  1004  06F3                     u170:
  1005  06F3  2F08               	goto	l2526
  1006  06F4                     l2514:
  1007                           
  1008                           ;DIO.c: 20:   *((reg_type8_t)(0x0085))=0x00;
  1009  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  1010  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  1011  06F6  0185               	clrf	5	;volatile
  1012                           
  1013                           ;DIO.c: 21:       break;
  1014  06F7  2F24               	goto	l2528
  1015  06F8                     l2516:
  1016                           
  1017                           ;DIO.c: 23:   *((reg_type8_t)(0x0086))=0x00;
  1018  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  1019  06F9  1303               	bcf	3,6	;RP1=0, select bank1
  1020  06FA  0186               	clrf	6	;volatile
  1021                           
  1022                           ;DIO.c: 24:       break;
  1023  06FB  2F24               	goto	l2528
  1024  06FC                     l2518:
  1025                           
  1026                           ;DIO.c: 26:   *((reg_type8_t)(0x0087))=0x00;
  1027  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  1028  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  1029  06FE  0187               	clrf	7	;volatile
  1030                           
  1031                           ;DIO.c: 27:       break;
  1032  06FF  2F24               	goto	l2528
  1033  0700                     l2520:
  1034                           
  1035                           ;DIO.c: 29:   *((reg_type8_t)(0x0088))=0x00;
  1036  0700  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0701  1303               	bcf	3,6	;RP1=0, select bank1
  1038  0702  0188               	clrf	8	;volatile
  1039                           
  1040                           ;DIO.c: 30:       break;
  1041  0703  2F24               	goto	l2528
  1042  0704                     l2522:
  1043                           
  1044                           ;DIO.c: 32:   *((reg_type8_t)(0x0089))=0x00;
  1045  0704  1683               	bsf	3,5	;RP0=1, select bank1
  1046  0705  1303               	bcf	3,6	;RP1=0, select bank1
  1047  0706  0189               	clrf	9	;volatile
  1048                           
  1049                           ;DIO.c: 33:       break;
  1050  0707  2F24               	goto	l2528
  1051  0708                     l2526:
  1052  0708  0879               	movf	DIO_init@DIO_info,w
  1053  0709  0084               	movwf	4
  1054  070A  1383               	bcf	3,7	;select IRP bank0
  1055  070B  0800               	movf	0,w
  1056  070C  00F6               	movwf	??_DIO_init
  1057  070D  01F7               	clrf	??_DIO_init+1
  1058                           
  1059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1060                           ; Switch size 1, requested type "simple"
  1061                           ; Number of cases is 1, Range of values is 0 to 0
  1062                           ; switch strategies available:
  1063                           ; Name         Instructions Cycles
  1064                           ; simple_byte            4     3 (average)
  1065                           ; direct_byte           11     8 (fixed)
  1066                           ; jumptable            260     6 (fixed)
  1067                           ;	Chosen strategy is simple_byte
  1068  070E  0877               	movf	??_DIO_init+1,w
  1069  070F  3A00               	xorlw	0	; case 0
  1070  0710  1903               	skipnz
  1071  0711  2F13               	goto	l3138
  1072  0712  2F24               	goto	l2528
  1073  0713                     l3138:
  1074                           
  1075                           ; Switch size 1, requested type "simple"
  1076                           ; Number of cases is 5, Range of values is 0 to 4
  1077                           ; switch strategies available:
  1078                           ; Name         Instructions Cycles
  1079                           ; simple_byte           16     9 (average)
  1080                           ; direct_byte           23     8 (fixed)
  1081                           ; jumptable            260     6 (fixed)
  1082                           ;	Chosen strategy is simple_byte
  1083  0713  0876               	movf	??_DIO_init,w
  1084  0714  3A00               	xorlw	0	; case 0
  1085  0715  1903               	skipnz
  1086  0716  2EF4               	goto	l2514
  1087  0717  3A01               	xorlw	1	; case 1
  1088  0718  1903               	skipnz
  1089  0719  2EF8               	goto	l2516
  1090  071A  3A03               	xorlw	3	; case 2
  1091  071B  1903               	skipnz
  1092  071C  2EFC               	goto	l2518
  1093  071D  3A01               	xorlw	1	; case 3
  1094  071E  1903               	skipnz
  1095  071F  2F00               	goto	l2520
  1096  0720  3A07               	xorlw	7	; case 4
  1097  0721  1903               	skipnz
  1098  0722  2F04               	goto	l2522
  1099  0723  2F24               	goto	l2528
  1100  0724                     l2528:
  1101                           
  1102                           ;DIO.c: 35:   first_powerup_init++;
  1103  0724  3001               	movlw	1
  1104  0725  00FF               	movwf	btemp+1
  1105  0726  087F               	movf	btemp+1,w
  1106  0727  07F1               	addwf	DIO_init@first_powerup_init,f
  1107  0728                     l2530:
  1108                           
  1109                           ;DIO.c: 37:  *((reg_type8_t)(0x009F)) =( DIO_info -> operation_mode) ;
  1110  0728  0879               	movf	DIO_init@DIO_info,w
  1111  0729  3E03               	addlw	3
  1112  072A  0084               	movwf	4
  1113  072B  1383               	bcf	3,7	;select IRP bank0
  1114  072C  0800               	movf	0,w
  1115  072D  00FF               	movwf	btemp+1
  1116  072E  087F               	movf	btemp+1,w
  1117  072F  1683               	bsf	3,5	;RP0=1, select bank1
  1118  0730  1303               	bcf	3,6	;RP1=0, select bank1
  1119  0731  009F               	movwf	31	;volatile
  1120  0732                     l2532:
  1121                           
  1122                           ;DIO.c: 38: if(DIO_info != ((void *)0)){
  1123  0732  0879               	movf	DIO_init@DIO_info,w
  1124  0733  1903               	btfsc	3,2
  1125  0734  2F36               	goto	u181
  1126  0735  2F37               	goto	u180
  1127  0736                     u181:
  1128  0736  2FDA               	goto	l2574
  1129  0737                     u180:
  1130  0737  2FC8               	goto	l2572
  1131  0738                     l2536:
  1132                           
  1133                           ;DIO.c: 47:            *((reg_type8_t)(0x0085)) |=(DIO_info-> pin) ;
  1134  0738  0879               	movf	DIO_init@DIO_info,w
  1135  0739  3E02               	addlw	2
  1136  073A  0084               	movwf	4
  1137  073B  0800               	movf	0,w
  1138  073C  00FF               	movwf	btemp+1
  1139  073D  087F               	movf	btemp+1,w
  1140  073E  0485               	iorwf	5,f	;volatile
  1141                           
  1142                           ;DIO.c: 48:             break;
  1143  073F  2FDE               	goto	l2576
  1144  0740                     l2538:
  1145                           
  1146                           ;DIO.c: 51:                 *((reg_type8_t)(0x0086)) |=(DIO_info->pin) ;
  1147  0740  0879               	movf	DIO_init@DIO_info,w
  1148  0741  3E02               	addlw	2
  1149  0742  0084               	movwf	4
  1150  0743  0800               	movf	0,w
  1151  0744  00FF               	movwf	btemp+1
  1152  0745  087F               	movf	btemp+1,w
  1153  0746  0486               	iorwf	6,f	;volatile
  1154                           
  1155                           ;DIO.c: 52:             break;
  1156  0747  2FDE               	goto	l2576
  1157  0748                     l2540:
  1158                           
  1159                           ;DIO.c: 55:                 *((reg_type8_t)(0x0087)) |=(DIO_info->pin) ;
  1160  0748  0879               	movf	DIO_init@DIO_info,w
  1161  0749  3E02               	addlw	2
  1162  074A  0084               	movwf	4
  1163  074B  0800               	movf	0,w
  1164  074C  00FF               	movwf	btemp+1
  1165  074D  087F               	movf	btemp+1,w
  1166  074E  0487               	iorwf	7,f	;volatile
  1167                           
  1168                           ;DIO.c: 56:             break;
  1169  074F  2FDE               	goto	l2576
  1170  0750                     l2542:
  1171                           
  1172                           ;DIO.c: 59:                 *((reg_type8_t)(0x0088)) |=(DIO_info->pin) ;
  1173  0750  0879               	movf	DIO_init@DIO_info,w
  1174  0751  3E02               	addlw	2
  1175  0752  0084               	movwf	4
  1176  0753  0800               	movf	0,w
  1177  0754  00FF               	movwf	btemp+1
  1178  0755  087F               	movf	btemp+1,w
  1179  0756  0488               	iorwf	8,f	;volatile
  1180                           
  1181                           ;DIO.c: 60:             break;
  1182  0757  2FDE               	goto	l2576
  1183  0758                     l2544:
  1184                           
  1185                           ;DIO.c: 63:             *((reg_type8_t)(0x0089)) |=(DIO_info->pin) ;
  1186  0758  0879               	movf	DIO_init@DIO_info,w
  1187  0759  3E02               	addlw	2
  1188  075A  0084               	movwf	4
  1189  075B  0800               	movf	0,w
  1190  075C  00FF               	movwf	btemp+1
  1191  075D  087F               	movf	btemp+1,w
  1192  075E  0489               	iorwf	9,f	;volatile
  1193                           
  1194                           ;DIO.c: 64:             break;
  1195  075F  2FDE               	goto	l2576
  1196  0760                     l2546:
  1197                           
  1198                           ;DIO.c: 66:             ret_error += 1 +14;
  1199  0760  300F               	movlw	15
  1200  0761  00FF               	movwf	btemp+1
  1201  0762  087F               	movf	btemp+1,w
  1202  0763  07F8               	addwf	DIO_init@ret_error,f
  1203                           
  1204                           ;DIO.c: 67:             break;
  1205  0764  2FDE               	goto	l2576
  1206  0765                     l2550:
  1207  0765  0879               	movf	DIO_init@DIO_info,w
  1208  0766  0084               	movwf	4
  1209  0767  0800               	movf	0,w
  1210  0768  00F6               	movwf	??_DIO_init
  1211  0769  01F7               	clrf	??_DIO_init+1
  1212                           
  1213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1214                           ; Switch size 1, requested type "simple"
  1215                           ; Number of cases is 1, Range of values is 0 to 0
  1216                           ; switch strategies available:
  1217                           ; Name         Instructions Cycles
  1218                           ; simple_byte            4     3 (average)
  1219                           ; direct_byte           11     8 (fixed)
  1220                           ; jumptable            260     6 (fixed)
  1221                           ;	Chosen strategy is simple_byte
  1222  076A  0877               	movf	??_DIO_init+1,w
  1223  076B  3A00               	xorlw	0	; case 0
  1224  076C  1903               	skipnz
  1225  076D  2F6F               	goto	l3140
  1226  076E  2F60               	goto	l2546
  1227  076F                     l3140:
  1228                           
  1229                           ; Switch size 1, requested type "simple"
  1230                           ; Number of cases is 5, Range of values is 0 to 4
  1231                           ; switch strategies available:
  1232                           ; Name         Instructions Cycles
  1233                           ; simple_byte           16     9 (average)
  1234                           ; direct_byte           23     8 (fixed)
  1235                           ; jumptable            260     6 (fixed)
  1236                           ;	Chosen strategy is simple_byte
  1237  076F  0876               	movf	??_DIO_init,w
  1238  0770  3A00               	xorlw	0	; case 0
  1239  0771  1903               	skipnz
  1240  0772  2F38               	goto	l2536
  1241  0773  3A01               	xorlw	1	; case 1
  1242  0774  1903               	skipnz
  1243  0775  2F40               	goto	l2538
  1244  0776  3A03               	xorlw	3	; case 2
  1245  0777  1903               	skipnz
  1246  0778  2F48               	goto	l2540
  1247  0779  3A01               	xorlw	1	; case 3
  1248  077A  1903               	skipnz
  1249  077B  2F50               	goto	l2542
  1250  077C  3A07               	xorlw	7	; case 4
  1251  077D  1903               	skipnz
  1252  077E  2F58               	goto	l2544
  1253  077F  2F60               	goto	l2546
  1254  0780                     l2552:
  1255                           
  1256                           ;DIO.c: 74:         *((reg_type8_t)(0x0085)) &=(~(DIO_info->pin)) ;
  1257  0780  0879               	movf	DIO_init@DIO_info,w
  1258  0781  3E02               	addlw	2
  1259  0782  0084               	movwf	4
  1260  0783  0900               	comf	0,w
  1261  0784  00FF               	movwf	btemp+1
  1262  0785  087F               	movf	btemp+1,w
  1263  0786  0585               	andwf	5,f	;volatile
  1264                           
  1265                           ;DIO.c: 75:       break;
  1266  0787  2FDE               	goto	l2576
  1267  0788                     l2554:
  1268                           
  1269                           ;DIO.c: 77:         *((reg_type8_t)(0x0086)) &=(~(DIO_info->pin)) ;
  1270  0788  0879               	movf	DIO_init@DIO_info,w
  1271  0789  3E02               	addlw	2
  1272  078A  0084               	movwf	4
  1273  078B  0900               	comf	0,w
  1274  078C  00FF               	movwf	btemp+1
  1275  078D  087F               	movf	btemp+1,w
  1276  078E  0586               	andwf	6,f	;volatile
  1277                           
  1278                           ;DIO.c: 78:       break;
  1279  078F  2FDE               	goto	l2576
  1280  0790                     l2556:
  1281                           
  1282                           ;DIO.c: 80:         *((reg_type8_t)(0x0087)) &=(~(DIO_info->pin)) ;
  1283  0790  0879               	movf	DIO_init@DIO_info,w
  1284  0791  3E02               	addlw	2
  1285  0792  0084               	movwf	4
  1286  0793  0900               	comf	0,w
  1287  0794  00FF               	movwf	btemp+1
  1288  0795  087F               	movf	btemp+1,w
  1289  0796  0587               	andwf	7,f	;volatile
  1290                           
  1291                           ;DIO.c: 81:       break;
  1292  0797  2FDE               	goto	l2576
  1293  0798                     l2558:
  1294                           
  1295                           ;DIO.c: 83:         *((reg_type8_t)(0x0088)) &=(~(DIO_info->pin)) ;
  1296  0798  0879               	movf	DIO_init@DIO_info,w
  1297  0799  3E02               	addlw	2
  1298  079A  0084               	movwf	4
  1299  079B  0900               	comf	0,w
  1300  079C  00FF               	movwf	btemp+1
  1301  079D  087F               	movf	btemp+1,w
  1302  079E  0588               	andwf	8,f	;volatile
  1303                           
  1304                           ;DIO.c: 84:       break;
  1305  079F  2FDE               	goto	l2576
  1306  07A0                     l2560:
  1307                           
  1308                           ;DIO.c: 86:         *((reg_type8_t)(0x0089)) &=(~(DIO_info->pin)) ;
  1309  07A0  0879               	movf	DIO_init@DIO_info,w
  1310  07A1  3E02               	addlw	2
  1311  07A2  0084               	movwf	4
  1312  07A3  0900               	comf	0,w
  1313  07A4  00FF               	movwf	btemp+1
  1314  07A5  087F               	movf	btemp+1,w
  1315  07A6  0589               	andwf	9,f	;volatile
  1316                           
  1317                           ;DIO.c: 87:       break;
  1318  07A7  2FDE               	goto	l2576
  1319  07A8                     l2566:
  1320  07A8  0879               	movf	DIO_init@DIO_info,w
  1321  07A9  0084               	movwf	4
  1322  07AA  0800               	movf	0,w
  1323  07AB  00F6               	movwf	??_DIO_init
  1324  07AC  01F7               	clrf	??_DIO_init+1
  1325                           
  1326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1327                           ; Switch size 1, requested type "simple"
  1328                           ; Number of cases is 1, Range of values is 0 to 0
  1329                           ; switch strategies available:
  1330                           ; Name         Instructions Cycles
  1331                           ; simple_byte            4     3 (average)
  1332                           ; direct_byte           11     8 (fixed)
  1333                           ; jumptable            260     6 (fixed)
  1334                           ;	Chosen strategy is simple_byte
  1335  07AD  0877               	movf	??_DIO_init+1,w
  1336  07AE  3A00               	xorlw	0	; case 0
  1337  07AF  1903               	skipnz
  1338  07B0  2FB2               	goto	l3142
  1339  07B1  2F60               	goto	l2546
  1340  07B2                     l3142:
  1341                           
  1342                           ; Switch size 1, requested type "simple"
  1343                           ; Number of cases is 5, Range of values is 0 to 4
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte           16     9 (average)
  1347                           ; direct_byte           23     8 (fixed)
  1348                           ; jumptable            260     6 (fixed)
  1349                           ;	Chosen strategy is simple_byte
  1350  07B2  0876               	movf	??_DIO_init,w
  1351  07B3  3A00               	xorlw	0	; case 0
  1352  07B4  1903               	skipnz
  1353  07B5  2F80               	goto	l2552
  1354  07B6  3A01               	xorlw	1	; case 1
  1355  07B7  1903               	skipnz
  1356  07B8  2F88               	goto	l2554
  1357  07B9  3A03               	xorlw	3	; case 2
  1358  07BA  1903               	skipnz
  1359  07BB  2F90               	goto	l2556
  1360  07BC  3A01               	xorlw	1	; case 3
  1361  07BD  1903               	skipnz
  1362  07BE  2F98               	goto	l2558
  1363  07BF  3A07               	xorlw	7	; case 4
  1364  07C0  1903               	skipnz
  1365  07C1  2FA0               	goto	l2560
  1366  07C2  2F60               	goto	l2546
  1367  07C3                     l2568:
  1368                           
  1369                           ;DIO.c: 94: ret_error +=1 + 18;
  1370  07C3  3013               	movlw	19
  1371  07C4  00FF               	movwf	btemp+1
  1372  07C5  087F               	movf	btemp+1,w
  1373  07C6  07F8               	addwf	DIO_init@ret_error,f
  1374                           
  1375                           ;DIO.c: 95: break;
  1376  07C7  2FDE               	goto	l2576
  1377  07C8                     l2572:
  1378  07C8  0A79               	incf	DIO_init@DIO_info,w
  1379  07C9  0084               	movwf	4
  1380  07CA  0800               	movf	0,w
  1381  07CB  00F6               	movwf	??_DIO_init
  1382  07CC  01F7               	clrf	??_DIO_init+1
  1383                           
  1384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1385                           ; Switch size 1, requested type "simple"
  1386                           ; Number of cases is 1, Range of values is 0 to 0
  1387                           ; switch strategies available:
  1388                           ; Name         Instructions Cycles
  1389                           ; simple_byte            4     3 (average)
  1390                           ; direct_byte           11     8 (fixed)
  1391                           ; jumptable            260     6 (fixed)
  1392                           ;	Chosen strategy is simple_byte
  1393  07CD  0877               	movf	??_DIO_init+1,w
  1394  07CE  3A00               	xorlw	0	; case 0
  1395  07CF  1903               	skipnz
  1396  07D0  2FD2               	goto	l3144
  1397  07D1  2FC3               	goto	l2568
  1398  07D2                     l3144:
  1399                           
  1400                           ; Switch size 1, requested type "simple"
  1401                           ; Number of cases is 2, Range of values is 0 to 255
  1402                           ; switch strategies available:
  1403                           ; Name         Instructions Cycles
  1404                           ; simple_byte            7     4 (average)
  1405                           ; jumptable            260     6 (fixed)
  1406                           ;	Chosen strategy is simple_byte
  1407  07D2  0876               	movf	??_DIO_init,w
  1408  07D3  3A00               	xorlw	0	; case 0
  1409  07D4  1903               	skipnz
  1410  07D5  2F65               	goto	l2550
  1411  07D6  3AFF               	xorlw	255	; case 255
  1412  07D7  1903               	skipnz
  1413  07D8  2FA8               	goto	l2566
  1414  07D9  2FC3               	goto	l2568
  1415  07DA                     l2574:
  1416                           
  1417                           ;DIO.c: 98: {;DIO.c: 99: ret_error +=1 +16;
  1418  07DA  3011               	movlw	17
  1419  07DB  00FF               	movwf	btemp+1
  1420  07DC  087F               	movf	btemp+1,w
  1421  07DD  07F8               	addwf	DIO_init@ret_error,f
  1422  07DE                     l2576:
  1423                           
  1424                           ;DIO.c: 101: return ret_error;
  1425  07DE  0878               	movf	DIO_init@ret_error,w
  1426  07DF                     l111:
  1427  07DF  0008               	return
  1428  07E0                     __end_of_DIO_init:
  1429                           
  1430                           	psect	text3
  1431  061C                     __ptext3:	
  1432 ;; *************** function _DIO_Write *****************
  1433 ;; Defined at:
  1434 ;;		line 131 in file "DIO.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  GPIO            1    wreg     unsigned char 
  1437 ;;  pins            1    0[COMMON] unsigned char 
  1438 ;;  value           1    1[COMMON] unsigned char 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  GPIO            1    5[COMMON] unsigned char 
  1441 ;;  ret_error       1    4[COMMON] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      unsigned char 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         2       0       0       0       0
  1452 ;;      Locals:         2       0       0       0       0
  1453 ;;      Temps:          2       0       0       0       0
  1454 ;;      Totals:         6       0       0       0       0
  1455 ;;Total ram usage:        6 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;;		_timer0_interrupt_ovfRoutine
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _DIO_Write
  1467  061C                     _DIO_Write:
  1468                           
  1469                           ;incstack = 0
  1470                           ; Regs used in _DIO_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  1471                           ;DIO_Write@GPIO stored from wreg
  1472  061C  00FB               	movwf	DIO_Write@GPIO
  1473  061D                     l1772:
  1474                           
  1475                           ;DIO.c: 131: ERROR_STATUS DIO_Write (uint8_t GPIO, uint8_t pins, uint8_t value);DIO.c: 1
      +                          32: { uint8_t ret_error=0;
  1476  061D  01FA               	clrf	DIO_Write@ret_error
  1477  061E                     l1774:
  1478                           
  1479                           ;DIO.c: 134:   static uint8_t first_powerup = 0;;DIO.c: 135: if (first_powerup == 0) {
  1480  061E  0870               	movf	DIO_Write@first_powerup,w
  1481  061F  1D03               	btfss	3,2
  1482  0620  2E22               	goto	u91
  1483  0621  2E23               	goto	u90
  1484  0622                     u91:
  1485  0622  2ED8               	goto	l1830
  1486  0623                     u90:
  1487  0623  2E38               	goto	l1790
  1488  0624                     l1778:
  1489                           
  1490                           ;DIO.c: 138:   *((reg_type8_t)(0x0005))=0x00;
  1491  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0626  0185               	clrf	5	;volatile
  1494                           
  1495                           ;DIO.c: 139:   break;
  1496  0627  2E51               	goto	l1792
  1497  0628                     l1780:
  1498                           
  1499                           ;DIO.c: 141:   *((reg_type8_t)(0x0006))=0x00;
  1500  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1502  062A  0186               	clrf	6	;volatile
  1503                           
  1504                           ;DIO.c: 142:   break;
  1505  062B  2E51               	goto	l1792
  1506  062C                     l1782:
  1507                           
  1508                           ;DIO.c: 144:   *((reg_type8_t)(0x0007))=0x00;
  1509  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1510  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1511  062E  0187               	clrf	7	;volatile
  1512                           
  1513                           ;DIO.c: 145:   break;
  1514  062F  2E51               	goto	l1792
  1515  0630                     l1784:
  1516                           
  1517                           ;DIO.c: 147:   *((reg_type8_t)(0x0008))=0x00;
  1518  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0632  0188               	clrf	8	;volatile
  1521                           
  1522                           ;DIO.c: 148:   break;
  1523  0633  2E51               	goto	l1792
  1524  0634                     l1786:
  1525                           
  1526                           ;DIO.c: 150:   *((reg_type8_t)(0x0009))=0x00;
  1527  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1529  0636  0189               	clrf	9	;volatile
  1530                           
  1531                           ;DIO.c: 151:   break;
  1532  0637  2E51               	goto	l1792
  1533  0638                     l1790:
  1534  0638  087B               	movf	DIO_Write@GPIO,w
  1535  0639  00F8               	movwf	??_DIO_Write
  1536  063A  01F9               	clrf	??_DIO_Write+1
  1537                           
  1538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1539                           ; Switch size 1, requested type "simple"
  1540                           ; Number of cases is 1, Range of values is 0 to 0
  1541                           ; switch strategies available:
  1542                           ; Name         Instructions Cycles
  1543                           ; simple_byte            4     3 (average)
  1544                           ; direct_byte           11     8 (fixed)
  1545                           ; jumptable            260     6 (fixed)
  1546                           ;	Chosen strategy is simple_byte
  1547  063B  0879               	movf	??_DIO_Write+1,w
  1548  063C  3A00               	xorlw	0	; case 0
  1549  063D  1903               	skipnz
  1550  063E  2E40               	goto	l3146
  1551  063F  2E51               	goto	l1792
  1552  0640                     l3146:
  1553                           
  1554                           ; Switch size 1, requested type "simple"
  1555                           ; Number of cases is 5, Range of values is 0 to 4
  1556                           ; switch strategies available:
  1557                           ; Name         Instructions Cycles
  1558                           ; simple_byte           16     9 (average)
  1559                           ; direct_byte           23     8 (fixed)
  1560                           ; jumptable            260     6 (fixed)
  1561                           ;	Chosen strategy is simple_byte
  1562  0640  0878               	movf	??_DIO_Write,w
  1563  0641  3A00               	xorlw	0	; case 0
  1564  0642  1903               	skipnz
  1565  0643  2E24               	goto	l1778
  1566  0644  3A01               	xorlw	1	; case 1
  1567  0645  1903               	skipnz
  1568  0646  2E28               	goto	l1780
  1569  0647  3A03               	xorlw	3	; case 2
  1570  0648  1903               	skipnz
  1571  0649  2E2C               	goto	l1782
  1572  064A  3A01               	xorlw	1	; case 3
  1573  064B  1903               	skipnz
  1574  064C  2E30               	goto	l1784
  1575  064D  3A07               	xorlw	7	; case 4
  1576  064E  1903               	skipnz
  1577  064F  2E34               	goto	l1786
  1578  0650  2E51               	goto	l1792
  1579  0651                     l1792:
  1580                           
  1581                           ;DIO.c: 153:   first_powerup++;
  1582  0651  3001               	movlw	1
  1583  0652  00FF               	movwf	btemp+1
  1584  0653  087F               	movf	btemp+1,w
  1585  0654  07F0               	addwf	DIO_Write@first_powerup,f
  1586  0655  2ED8               	goto	l1830
  1587  0656                     l1794:
  1588                           
  1589                           ;DIO.c: 159:       *((reg_type8_t)(0x0005)) |= pins;
  1590  0656  0876               	movf	DIO_Write@pins,w
  1591  0657  00FF               	movwf	btemp+1
  1592  0658  087F               	movf	btemp+1,w
  1593  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1594  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1595  065B  0485               	iorwf	5,f	;volatile
  1596                           
  1597                           ;DIO.c: 160:       break;
  1598  065C  2EE8               	goto	l1832
  1599  065D                     l1796:
  1600                           
  1601                           ;DIO.c: 162:       *((reg_type8_t)(0x0006)) |= pins;
  1602  065D  0876               	movf	DIO_Write@pins,w
  1603  065E  00FF               	movwf	btemp+1
  1604  065F  087F               	movf	btemp+1,w
  1605  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0662  0486               	iorwf	6,f	;volatile
  1608                           
  1609                           ;DIO.c: 163:       break;
  1610  0663  2EE8               	goto	l1832
  1611  0664                     l1798:
  1612                           
  1613                           ;DIO.c: 165:       *((reg_type8_t)(0x0007)) |= pins;
  1614  0664  0876               	movf	DIO_Write@pins,w
  1615  0665  00FF               	movwf	btemp+1
  1616  0666  087F               	movf	btemp+1,w
  1617  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0669  0487               	iorwf	7,f	;volatile
  1620                           
  1621                           ;DIO.c: 166:       break;
  1622  066A  2EE8               	goto	l1832
  1623  066B                     l1800:
  1624                           
  1625                           ;DIO.c: 168:       *((reg_type8_t)(0x0008)) |= pins;
  1626  066B  0876               	movf	DIO_Write@pins,w
  1627  066C  00FF               	movwf	btemp+1
  1628  066D  087F               	movf	btemp+1,w
  1629  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1630  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1631  0670  0488               	iorwf	8,f	;volatile
  1632                           
  1633                           ;DIO.c: 169:       break;
  1634  0671  2EE8               	goto	l1832
  1635  0672                     l1802:
  1636                           
  1637                           ;DIO.c: 171:       *((reg_type8_t)(0x0009)) |= pins;
  1638  0672  0876               	movf	DIO_Write@pins,w
  1639  0673  00FF               	movwf	btemp+1
  1640  0674  087F               	movf	btemp+1,w
  1641  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0677  0489               	iorwf	9,f	;volatile
  1644                           
  1645                           ;DIO.c: 172:       break;
  1646  0678  2EE8               	goto	l1832
  1647  0679                     l1804:
  1648                           
  1649                           ;DIO.c: 174:       ret_error +=1 +14;
  1650  0679  300F               	movlw	15
  1651  067A  00FF               	movwf	btemp+1
  1652  067B  087F               	movf	btemp+1,w
  1653  067C  07FA               	addwf	DIO_Write@ret_error,f
  1654                           
  1655                           ;DIO.c: 175:       break;
  1656  067D  2EE8               	goto	l1832
  1657  067E                     l1808:
  1658  067E  087B               	movf	DIO_Write@GPIO,w
  1659  067F  00F8               	movwf	??_DIO_Write
  1660  0680  01F9               	clrf	??_DIO_Write+1
  1661                           
  1662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1663                           ; Switch size 1, requested type "simple"
  1664                           ; Number of cases is 1, Range of values is 0 to 0
  1665                           ; switch strategies available:
  1666                           ; Name         Instructions Cycles
  1667                           ; simple_byte            4     3 (average)
  1668                           ; direct_byte           11     8 (fixed)
  1669                           ; jumptable            260     6 (fixed)
  1670                           ;	Chosen strategy is simple_byte
  1671  0681  0879               	movf	??_DIO_Write+1,w
  1672  0682  3A00               	xorlw	0	; case 0
  1673  0683  1903               	skipnz
  1674  0684  2E86               	goto	l3148
  1675  0685  2E79               	goto	l1804
  1676  0686                     l3148:
  1677                           
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 5, Range of values is 0 to 4
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte           16     9 (average)
  1683                           ; direct_byte           23     8 (fixed)
  1684                           ; jumptable            260     6 (fixed)
  1685                           ;	Chosen strategy is simple_byte
  1686  0686  0878               	movf	??_DIO_Write,w
  1687  0687  3A00               	xorlw	0	; case 0
  1688  0688  1903               	skipnz
  1689  0689  2E56               	goto	l1794
  1690  068A  3A01               	xorlw	1	; case 1
  1691  068B  1903               	skipnz
  1692  068C  2E5D               	goto	l1796
  1693  068D  3A03               	xorlw	3	; case 2
  1694  068E  1903               	skipnz
  1695  068F  2E64               	goto	l1798
  1696  0690  3A01               	xorlw	1	; case 3
  1697  0691  1903               	skipnz
  1698  0692  2E6B               	goto	l1800
  1699  0693  3A07               	xorlw	7	; case 4
  1700  0694  1903               	skipnz
  1701  0695  2E72               	goto	l1802
  1702  0696  2E79               	goto	l1804
  1703  0697                     l1810:
  1704                           
  1705                           ;DIO.c: 182:       *((reg_type8_t)(0x0005)) &= (~pins);
  1706  0697  0976               	comf	DIO_Write@pins,w
  1707  0698  00FF               	movwf	btemp+1
  1708  0699  087F               	movf	btemp+1,w
  1709  069A  1283               	bcf	3,5	;RP0=0, select bank0
  1710  069B  1303               	bcf	3,6	;RP1=0, select bank0
  1711  069C  0585               	andwf	5,f	;volatile
  1712                           
  1713                           ;DIO.c: 183:       break;
  1714  069D  2EE8               	goto	l1832
  1715  069E                     l1812:
  1716                           
  1717                           ;DIO.c: 185:       *((reg_type8_t)(0x0006)) &= (~pins);
  1718  069E  0976               	comf	DIO_Write@pins,w
  1719  069F  00FF               	movwf	btemp+1
  1720  06A0  087F               	movf	btemp+1,w
  1721  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1722  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1723  06A3  0586               	andwf	6,f	;volatile
  1724                           
  1725                           ;DIO.c: 186:       break;
  1726  06A4  2EE8               	goto	l1832
  1727  06A5                     l1814:
  1728                           
  1729                           ;DIO.c: 188:       *((reg_type8_t)(0x0007)) &= (~pins);
  1730  06A5  0976               	comf	DIO_Write@pins,w
  1731  06A6  00FF               	movwf	btemp+1
  1732  06A7  087F               	movf	btemp+1,w
  1733  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1734  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1735  06AA  0587               	andwf	7,f	;volatile
  1736                           
  1737                           ;DIO.c: 189:       break;
  1738  06AB  2EE8               	goto	l1832
  1739  06AC                     l1816:
  1740                           
  1741                           ;DIO.c: 191:       *((reg_type8_t)(0x0008)) &= (~pins);
  1742  06AC  0976               	comf	DIO_Write@pins,w
  1743  06AD  00FF               	movwf	btemp+1
  1744  06AE  087F               	movf	btemp+1,w
  1745  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1746  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1747  06B1  0588               	andwf	8,f	;volatile
  1748                           
  1749                           ;DIO.c: 192:       break;
  1750  06B2  2EE8               	goto	l1832
  1751  06B3                     l1818:
  1752                           
  1753                           ;DIO.c: 194:       *((reg_type8_t)(0x0009)) &= (~pins);
  1754  06B3  0976               	comf	DIO_Write@pins,w
  1755  06B4  00FF               	movwf	btemp+1
  1756  06B5  087F               	movf	btemp+1,w
  1757  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1758  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1759  06B8  0589               	andwf	9,f	;volatile
  1760                           
  1761                           ;DIO.c: 195:       break;
  1762  06B9  2EE8               	goto	l1832
  1763  06BA                     l1824:
  1764  06BA  087B               	movf	DIO_Write@GPIO,w
  1765  06BB  00F8               	movwf	??_DIO_Write
  1766  06BC  01F9               	clrf	??_DIO_Write+1
  1767                           
  1768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1769                           ; Switch size 1, requested type "simple"
  1770                           ; Number of cases is 1, Range of values is 0 to 0
  1771                           ; switch strategies available:
  1772                           ; Name         Instructions Cycles
  1773                           ; simple_byte            4     3 (average)
  1774                           ; direct_byte           11     8 (fixed)
  1775                           ; jumptable            260     6 (fixed)
  1776                           ;	Chosen strategy is simple_byte
  1777  06BD  0879               	movf	??_DIO_Write+1,w
  1778  06BE  3A00               	xorlw	0	; case 0
  1779  06BF  1903               	skipnz
  1780  06C0  2EC2               	goto	l3150
  1781  06C1  2E79               	goto	l1804
  1782  06C2                     l3150:
  1783                           
  1784                           ; Switch size 1, requested type "simple"
  1785                           ; Number of cases is 5, Range of values is 0 to 4
  1786                           ; switch strategies available:
  1787                           ; Name         Instructions Cycles
  1788                           ; simple_byte           16     9 (average)
  1789                           ; direct_byte           23     8 (fixed)
  1790                           ; jumptable            260     6 (fixed)
  1791                           ;	Chosen strategy is simple_byte
  1792  06C2  0878               	movf	??_DIO_Write,w
  1793  06C3  3A00               	xorlw	0	; case 0
  1794  06C4  1903               	skipnz
  1795  06C5  2E97               	goto	l1810
  1796  06C6  3A01               	xorlw	1	; case 1
  1797  06C7  1903               	skipnz
  1798  06C8  2E9E               	goto	l1812
  1799  06C9  3A03               	xorlw	3	; case 2
  1800  06CA  1903               	skipnz
  1801  06CB  2EA5               	goto	l1814
  1802  06CC  3A01               	xorlw	1	; case 3
  1803  06CD  1903               	skipnz
  1804  06CE  2EAC               	goto	l1816
  1805  06CF  3A07               	xorlw	7	; case 4
  1806  06D0  1903               	skipnz
  1807  06D1  2EB3               	goto	l1818
  1808  06D2  2E79               	goto	l1804
  1809  06D3                     l1826:
  1810                           
  1811                           ;DIO.c: 203: ret_error +=1 +18;
  1812  06D3  3013               	movlw	19
  1813  06D4  00FF               	movwf	btemp+1
  1814  06D5  087F               	movf	btemp+1,w
  1815  06D6  07FA               	addwf	DIO_Write@ret_error,f
  1816                           
  1817                           ;DIO.c: 204:   break;
  1818  06D7  2EE8               	goto	l1832
  1819  06D8                     l1830:
  1820  06D8  0877               	movf	DIO_Write@value,w
  1821  06D9  00F8               	movwf	??_DIO_Write
  1822  06DA  01F9               	clrf	??_DIO_Write+1
  1823                           
  1824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1825                           ; Switch size 1, requested type "simple"
  1826                           ; Number of cases is 1, Range of values is 0 to 0
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte            4     3 (average)
  1830                           ; direct_byte           11     8 (fixed)
  1831                           ; jumptable            260     6 (fixed)
  1832                           ;	Chosen strategy is simple_byte
  1833  06DB  0879               	movf	??_DIO_Write+1,w
  1834  06DC  3A00               	xorlw	0	; case 0
  1835  06DD  1903               	skipnz
  1836  06DE  2EE0               	goto	l3152
  1837  06DF  2ED3               	goto	l1826
  1838  06E0                     l3152:
  1839                           
  1840                           ; Switch size 1, requested type "simple"
  1841                           ; Number of cases is 2, Range of values is 0 to 255
  1842                           ; switch strategies available:
  1843                           ; Name         Instructions Cycles
  1844                           ; simple_byte            7     4 (average)
  1845                           ; jumptable            260     6 (fixed)
  1846                           ;	Chosen strategy is simple_byte
  1847  06E0  0878               	movf	??_DIO_Write,w
  1848  06E1  3A00               	xorlw	0	; case 0
  1849  06E2  1903               	skipnz
  1850  06E3  2EBA               	goto	l1824
  1851  06E4  3AFF               	xorlw	255	; case 255
  1852  06E5  1903               	skipnz
  1853  06E6  2E7E               	goto	l1808
  1854  06E7  2ED3               	goto	l1826
  1855  06E8                     l1832:
  1856                           
  1857                           ;DIO.c: 206: return ret_error;
  1858  06E8  087A               	movf	DIO_Write@ret_error,w
  1859  06E9                     l145:
  1860  06E9  0008               	return
  1861  06EA                     __end_of_DIO_Write:
  1862                           
  1863                           	psect	text4
  1864  048A                     __ptext4:	
  1865 ;; *************** function _DIO_Read *****************
  1866 ;; Defined at:
  1867 ;;		line 235 in file "DIO.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  GPIO            1    wreg     unsigned char 
  1870 ;;  pins            1    0[COMMON] unsigned char 
  1871 ;;  data            1    1[COMMON] PTR unsigned char 
  1872 ;;		 -> data2(1), data(1), 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  GPIO            1    4[COMMON] unsigned char 
  1875 ;;  ret_error       1    5[COMMON] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      unsigned char 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         2       0       0       0       0
  1886 ;;      Locals:         2       0       0       0       0
  1887 ;;      Temps:          2       0       0       0       0
  1888 ;;      Totals:         6       0       0       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _DIO_Read
  1900  048A                     _DIO_Read:
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in _DIO_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  1904                           ;DIO_Read@GPIO stored from wreg
  1905  048A  00FA               	movwf	DIO_Read@GPIO
  1906  048B                     l1958:
  1907                           
  1908                           ;DIO.c: 235: ERROR_STATUS DIO_Read (uint8_t GPIO,uint8_t pins, uint8_t *data);DIO.c: 236
      +                          : {;DIO.c: 237:   uint8_t ret_error=0;
  1909  048B  01FB               	clrf	DIO_Read@ret_error
  1910                           
  1911                           ;DIO.c: 238:   switch (GPIO)
  1912  048C  2CC4               	goto	l1974
  1913  048D                     l1960:
  1914                           
  1915                           ;DIO.c: 240:     *data=(*((reg_type8_t)(0x0005)) & pins);
  1916  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1917  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1918  048F  0805               	movf	5,w	;volatile
  1919  0490  0576               	andwf	DIO_Read@pins,w
  1920  0491  00FF               	movwf	btemp+1
  1921  0492  0877               	movf	DIO_Read@data,w
  1922  0493  0084               	movwf	4
  1923  0494  087F               	movf	btemp+1,w
  1924  0495  0080               	movwf	0
  1925                           
  1926                           ;DIO.c: 241:     break;
  1927  0496  2CDD               	goto	l1976
  1928  0497                     l1962:
  1929                           
  1930                           ;DIO.c: 243:     *data=(*((reg_type8_t)(0x0006)) & pins);
  1931  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0499  0806               	movf	6,w	;volatile
  1934  049A  0576               	andwf	DIO_Read@pins,w
  1935  049B  00FF               	movwf	btemp+1
  1936  049C  0877               	movf	DIO_Read@data,w
  1937  049D  0084               	movwf	4
  1938  049E  087F               	movf	btemp+1,w
  1939  049F  0080               	movwf	0
  1940                           
  1941                           ;DIO.c: 244:     break;
  1942  04A0  2CDD               	goto	l1976
  1943  04A1                     l1964:
  1944                           
  1945                           ;DIO.c: 246:     *data=(*((reg_type8_t)(0x0007)) & pins);
  1946  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  1947  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  1948  04A3  0807               	movf	7,w	;volatile
  1949  04A4  0576               	andwf	DIO_Read@pins,w
  1950  04A5  00FF               	movwf	btemp+1
  1951  04A6  0877               	movf	DIO_Read@data,w
  1952  04A7  0084               	movwf	4
  1953  04A8  087F               	movf	btemp+1,w
  1954  04A9  0080               	movwf	0
  1955                           
  1956                           ;DIO.c: 247:     break;
  1957  04AA  2CDD               	goto	l1976
  1958  04AB                     l1966:
  1959                           
  1960                           ;DIO.c: 249:     *data=(*((reg_type8_t)(0x0008)) & pins);
  1961  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1962  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1963  04AD  0808               	movf	8,w	;volatile
  1964  04AE  0576               	andwf	DIO_Read@pins,w
  1965  04AF  00FF               	movwf	btemp+1
  1966  04B0  0877               	movf	DIO_Read@data,w
  1967  04B1  0084               	movwf	4
  1968  04B2  087F               	movf	btemp+1,w
  1969  04B3  0080               	movwf	0
  1970                           
  1971                           ;DIO.c: 250:                 break;
  1972  04B4  2CDD               	goto	l1976
  1973  04B5                     l1968:
  1974                           
  1975                           ;DIO.c: 252:     *data=(*((reg_type8_t)(0x0009)) & pins);
  1976  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1977  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1978  04B7  0809               	movf	9,w	;volatile
  1979  04B8  0576               	andwf	DIO_Read@pins,w
  1980  04B9  00FF               	movwf	btemp+1
  1981  04BA  0877               	movf	DIO_Read@data,w
  1982  04BB  0084               	movwf	4
  1983  04BC  087F               	movf	btemp+1,w
  1984  04BD  0080               	movwf	0
  1985                           
  1986                           ;DIO.c: 253:     break;
  1987  04BE  2CDD               	goto	l1976
  1988  04BF                     l1970:
  1989                           
  1990                           ;DIO.c: 255:     ret_error += 14;
  1991  04BF  300E               	movlw	14
  1992  04C0  00FF               	movwf	btemp+1
  1993  04C1  087F               	movf	btemp+1,w
  1994  04C2  07FB               	addwf	DIO_Read@ret_error,f
  1995                           
  1996                           ;DIO.c: 256:     break;
  1997  04C3  2CDD               	goto	l1976
  1998  04C4                     l1974:
  1999  04C4  087A               	movf	DIO_Read@GPIO,w
  2000  04C5  00F8               	movwf	??_DIO_Read
  2001  04C6  01F9               	clrf	??_DIO_Read+1
  2002                           
  2003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2004                           ; Switch size 1, requested type "simple"
  2005                           ; Number of cases is 1, Range of values is 0 to 0
  2006                           ; switch strategies available:
  2007                           ; Name         Instructions Cycles
  2008                           ; simple_byte            4     3 (average)
  2009                           ; direct_byte           11     8 (fixed)
  2010                           ; jumptable            260     6 (fixed)
  2011                           ;	Chosen strategy is simple_byte
  2012  04C7  0879               	movf	??_DIO_Read+1,w
  2013  04C8  3A00               	xorlw	0	; case 0
  2014  04C9  1903               	skipnz
  2015  04CA  2CCC               	goto	l3154
  2016  04CB  2CBF               	goto	l1970
  2017  04CC                     l3154:
  2018                           
  2019                           ; Switch size 1, requested type "simple"
  2020                           ; Number of cases is 5, Range of values is 0 to 4
  2021                           ; switch strategies available:
  2022                           ; Name         Instructions Cycles
  2023                           ; simple_byte           16     9 (average)
  2024                           ; direct_byte           23     8 (fixed)
  2025                           ; jumptable            260     6 (fixed)
  2026                           ;	Chosen strategy is simple_byte
  2027  04CC  0878               	movf	??_DIO_Read,w
  2028  04CD  3A00               	xorlw	0	; case 0
  2029  04CE  1903               	skipnz
  2030  04CF  2C8D               	goto	l1960
  2031  04D0  3A01               	xorlw	1	; case 1
  2032  04D1  1903               	skipnz
  2033  04D2  2C97               	goto	l1962
  2034  04D3  3A03               	xorlw	3	; case 2
  2035  04D4  1903               	skipnz
  2036  04D5  2CA1               	goto	l1964
  2037  04D6  3A01               	xorlw	1	; case 3
  2038  04D7  1903               	skipnz
  2039  04D8  2CAB               	goto	l1966
  2040  04D9  3A07               	xorlw	7	; case 4
  2041  04DA  1903               	skipnz
  2042  04DB  2CB5               	goto	l1968
  2043  04DC  2CBF               	goto	l1970
  2044  04DD                     l1976:
  2045                           
  2046                           ;DIO.c: 258:    if(*data > 0)
  2047  04DD  0877               	movf	DIO_Read@data,w
  2048  04DE  0084               	movwf	4
  2049  04DF  0800               	movf	0,w
  2050  04E0  1903               	btfsc	3,2
  2051  04E1  2CE3               	goto	u121
  2052  04E2  2CE4               	goto	u120
  2053  04E3                     u121:
  2054  04E3  2CE8               	goto	l1980
  2055  04E4                     u120:
  2056  04E4                     l1978:
  2057                           
  2058                           ;DIO.c: 259:    {;DIO.c: 260:     *data = 1;
  2059  04E4  0877               	movf	DIO_Read@data,w
  2060  04E5  0084               	movwf	4
  2061  04E6  0180               	clrf	0
  2062  04E7  0A80               	incf	0,f
  2063  04E8                     l1980:
  2064                           
  2065                           ;DIO.c: 263:   return ret_error;
  2066  04E8  087B               	movf	DIO_Read@ret_error,w
  2067  04E9                     l157:
  2068  04E9  0008               	return
  2069  04EA                     __end_of_DIO_Read:
  2070  007E                     btemp	set	126	;btemp
  2071  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         39
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    DIO_Read@data	PTR unsigned char  size(1) Largest target is 1
		 -> data2(COMMON[1]), data(COMMON[1]), 

    DIO_init@DIO_info	PTR struct DIO_Cfg_s size(1) Largest target is 4
		 -> Dio_configutation_A(BANK0[4]), Dio_configutation_C(BANK0[4]), Dio_configutation_B(BANK0[4]), 

    Timer_Deinit_Configuration2.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Deinit_Configuration1.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Deinit_Configuration0.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Configuration2.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Configuration1.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Configuration0.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    TIMER0OVF_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), timer0_interrupt_ovfRoutine(), 

    S23Timer_cfg_s$Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Init@Timer_cfg.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Init@Timer_cfg	PTR struct Timer_cfg_s size(1) Largest target is 5
		 -> Timer_Configuration0(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_DIO_Read
    _main->_DIO_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2481
                           _DIO_Read
                          _DIO_Write
                           _DIO_init
                         _Timer_Init
 ---------------------------------------------------------------------------------
 (1) _Timer_Init                                           4     4      0     277
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DIO_init                                             4     4      0     800
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DIO_Write                                            6     4      2     790
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DIO_Read                                             6     4      2     614
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DIO_Read
   _DIO_Write
   _DIO_init
   _Timer_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3F      12        0.0%
ABS                  0      0      3F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jul 13 20:09:01 2020

                          pc 0002                           l10 056A                           l44 061B  
                         u90 0623                           u91 0622                           fsr 0004  
                        l111 07DF                          l145 06E9                          l157 04E9  
                        l194 050E                          u120 04E4                          u200 053A  
                        u121 04E3                          u201 0539                          u170 06F3  
                        u171 06F2                          u180 0737                          u181 0736  
                        u190 0535                          u191 0534                          _ret 007C  
                        fsr0 0004                          indf 0000                         l3130 05D7  
                       l3122 058C                         l3140 076F                         l3132 05EA  
                       l3124 059F                         l3150 06C2                         l3142 07B2  
                       l2510 06EE                         l3134 05FC                         l1710 05DF  
                       l1702 05BA                         l3126 05B2                         l3152 06E0  
                       l1800 066B                         l3144 07D2                         l2520 0700  
                       l3136 060F                         l3128 05C4                         l1720 061A  
                       l3154 04CC                         l1810 0697                         l1802 0672  
                       l3146 0640                         l3138 0713                         l2522 0704  
                       l2514 06F4                         l2530 0728                         l2506 06EB  
                       l1714 05F2                         l1706 05CC                         l1812 069E  
                       l3148 0686                         l1804 0679                         l2540 0748  
                       l2532 0732                         l2516 06F8                         l2508 06EC  
                       l2620 054C                         l2612 04EA                         l1814 06A5  
                       l1830 06D8                         l2550 0765                         l2542 0750  
                       l2518 06FC                         l2526 0708                         l1718 0604  
                       l2614 0530                         l1824 06BA                         l1816 06AC  
                       l1808 067E                         l1832 06E8                         l2560 07A0  
                       l2552 0780                         l2544 0758                         l2536 0738  
                       l2528 0724                         l1680 0561                         l2616 0535  
                       l1826 06D3                         l1818 06B3                         l2554 0788  
                       l2546 0760                         l2538 0740                         l1682 056B  
                       l1690 0581                         l2618 053A                         l1780 0628  
                       l1772 061D                         l2556 0790                         l2572 07C8  
                       l1684 056F                         l1782 062C                         l1790 0638  
                       l1774 061E                         l2566 07A8                         l2558 0798  
                       l2574 07DA                         l1694 0594                         l1686 0577  
                       l1678 055F                         l1960 048D                         l1784 0630  
                       l1792 0651                         l2568 07C3                         l2576 07DE  
                       l1688 057C                         l1970 04BF                         l1962 0497  
                       l1794 0656                         l1786 0634                         l1778 0624  
                       l1698 05A7                         l1980 04E8                         l1964 04A1  
                       l1796 065D                         l1966 04AB                         l1974 04C4  
                       l1958 048B                         l1798 0664                         l1968 04B5  
                       l1976 04DD                         l1978 04E4  _timer0_interrupt_ovfRoutine 0000  
         __size_of_DIO_Write 00CE                         _data 0075                         _main 04EA  
                       btemp 007E                         start 0000  _Timer_Deinit_Configuration0 002A  
_Timer_Deinit_Configuration1 0025  _Timer_Deinit_Configuration2 0020             __end_of_DIO_Read 04EA  
           __end_of_DIO_init 07E0                        ?_main 0076                DIO_Write@GPIO 007B  
              DIO_Write@pins 0076                        _data2 0074           DIO_Write@ret_error 007A  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __initialization 07E0                 __end_of_main 055E                       ??_main 007C  
          __end_of_DIO_Write 06EA               DIO_Write@value 0077       DIO_Write@first_powerup 0070  
                 _Timer_Init 055E                    ?_DIO_Read 0076      __end_of__initialization 07FC  
                  ?_DIO_init 0076               __pcstackCOMMON 0076                 __pidataBANK0 0466  
        Timer_Init@Timer_cfg 0079                   __pbssBANK0 0020                   ??_DIO_Read 0078  
                 ??_DIO_init 0076                   __pnvCOMMON 007C            DIO_Read@ret_error 007B  
                 __pmaintext 04EA                  ?_Timer_Init 0076   DIO_init@first_powerup_init 0071  
                    __ptext1 055E                      __ptext2 06EA                      __ptext3 061C  
                    __ptext4 048A                      _is_init 0072          Timer_Init@ret_error 0078  
                  _DIO_Write 061C                      clrloop0 045F         end_of_initialization 07FC  
        __size_of_Timer_Init 00BE                   ?_DIO_Write 0076            __size_of_DIO_Read 0060  
          __size_of_DIO_init 00F6                _TIMER0OVF_INT 0073          start_initialization 07E0  
          DIO_init@ret_error 0078                   init_fetch0 0477          _Dio_configutation_A 0046  
        _Dio_configutation_B 004E          _Dio_configutation_C 004A          _Dio_configutation_D 003D  
        _Dio_configutation_E 0039                 ??_Timer_Init 0076                  __pdataBANK0 0041  
                __pbssCOMMON 0070                    ___latbits 0002                  ??_DIO_Write 0078  
         __end_of_Timer_Init 061C             DIO_init@DIO_info 0079         _Timer_Configuration0 0041  
       _Timer_Configuration1 0034         _Timer_Configuration2 002F                     _DIO_Read 048A  
                   _DIO_init 06EA                    clear_ram0 045E                __size_of_main 0074  
                   init_ram0 047B                 DIO_Read@GPIO 007A                 DIO_Read@data 0077  
               DIO_Read@pins 0076  
