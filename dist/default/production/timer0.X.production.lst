

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jul 14 23:37:39 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116                           
   117 ;; Function _timer0_interrupt_ovfRoutine is unused but had its address taken
   118  0000                     
   119                           	psect	idataCOMMON
   120  0498                     __pidataCOMMON:
   121                           
   122                           ;initializer for _TIMER0OVF_INT
   123  0498  3400               	retlw	0
   124                           
   125                           ;initializer for _Prescaler
   126  0499  34FF               	retlw	255
   127                           
   128                           	psect	idataBANK0
   129  04A2                     __pidataBANK0:
   130                           
   131                           ;initializer for _Timer_Configuration0
   132  04A2  3400               	retlw	0
   133  04A3  34C0               	retlw	192
   134  04A4  34DF               	retlw	223
   135  04A5  3400               	retlw	0
   136  04A6  3400               	retlw	0
   137                           
   138                           ;initializer for _Dio_configutation_A
   139  04A7  3400               	retlw	0
   140  04A8  3420               	retlw	32
   141  04A9  3400               	retlw	0
   142  04AA  34FF               	retlw	255
   143                           
   144                           ;initializer for _Dio_configutation_C
   145  04AB  3402               	retlw	2
   146  04AC  34FF               	retlw	255
   147  04AD  3400               	retlw	0
   148  04AE  3400               	retlw	0
   149                           
   150                           ;initializer for _Dio_configutation_B
   151  04AF  3401               	retlw	1
   152  04B0  34FF               	retlw	255
   153  04B1  34FF               	retlw	255
   154  04B2  3400               	retlw	0
   155                           
   156                           	psect	nvBANK0
   157  0052                     __pnvBANK0:
   158  0052                     _ret:
   159  0052                     	ds	1
   160                           
   161                           	psect	cinit
   162  07D5                     start_initialization:	
   163                           ; #config settings
   164                           
   165  07D5                     __initialization:
   166                           
   167                           ; Initialize objects allocated to BANK0
   168  07D5  1383               	bcf	3,7	;select IRP bank0
   169  07D6  3052               	movlw	low (__pdataBANK0+17)
   170  07D7  00FD               	movwf	btemp+-1
   171  07D8  3004               	movlw	high __pidataBANK0
   172  07D9  00FE               	movwf	btemp
   173  07DA  30A2               	movlw	low __pidataBANK0
   174  07DB  00FF               	movwf	btemp+1
   175  07DC  3041               	movlw	low __pdataBANK0
   176  07DD  0084               	movwf	4
   177  07DE  120A  118A  24B7  120A  118A  	fcall	init_ram0
   178                           
   179                           ; Initialize objects allocated to COMMON
   180  07E3  120A  118A  2498  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   181  07E8  00FB               	movwf	__pdataCOMMON& (0+127)
   182  07E9  120A  118A  2499  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   183  07EE  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   184                           
   185                           ; Clear objects allocated to BANK0
   186  07EF  3020               	movlw	low __pbssBANK0
   187  07F0  0084               	movwf	4
   188  07F1  3041               	movlw	low (__pbssBANK0+33)
   189  07F2  120A  118A  249A  120A  118A  	fcall	clear_ram0
   190                           
   191                           ; Clear objects allocated to COMMON
   192  07F7  01F6               	clrf	__pbssCOMMON& (0+127)
   193  07F8  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   194  07F9  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   195  07FA  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   196  07FB  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   197  07FC                     end_of_initialization:	
   198                           ;End of C runtime variable initialization code
   199                           
   200  07FC                     __end_of__initialization:
   201  07FC  0183               	clrf	3
   202  07FD  120A  118A  2CEA   	ljmp	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMMON
   205  0076                     __pbssCOMMON:
   206  0076                     _data2:
   207  0076                     	ds	1
   208  0077                     _data:
   209  0077                     	ds	1
   210  0078                     DIO_Write@first_powerup:
   211  0078                     	ds	1
   212  0079                     DIO_init@first_powerup_init:
   213  0079                     	ds	1
   214  007A                     _is_init:
   215  007A                     	ds	1
   216                           
   217                           	psect	dataCOMMON
   218  007B                     __pdataCOMMON:
   219  007B                     _TIMER0OVF_INT:
   220  007B                     	ds	1
   221  007C                     _Prescaler:
   222  007C                     	ds	1
   223                           
   224                           	psect	bssBANK0
   225  0020                     __pbssBANK0:
   226  0020                     _Timer_Deinit_Configuration2:
   227  0020                     	ds	5
   228  0025                     _Timer_Deinit_Configuration1:
   229  0025                     	ds	5
   230  002A                     _Timer_Deinit_Configuration0:
   231  002A                     	ds	5
   232  002F                     _Timer_Configuration2:
   233  002F                     	ds	5
   234  0034                     _Timer_Configuration1:
   235  0034                     	ds	5
   236  0039                     _Dio_configutation_E:
   237  0039                     	ds	4
   238  003D                     _Dio_configutation_D:
   239  003D                     	ds	4
   240                           
   241                           	psect	dataBANK0
   242  0041                     __pdataBANK0:
   243  0041                     _Timer_Configuration0:
   244  0041                     	ds	5
   245  0046                     _Dio_configutation_A:
   246  0046                     	ds	4
   247  004A                     _Dio_configutation_C:
   248  004A                     	ds	4
   249  004E                     _Dio_configutation_B:
   250  004E                     	ds	4
   251                           
   252                           	psect	inittext
   253  04B3                     init_fetch0:	
   254                           ;	Called with low address in FSR and high address in W
   255                           
   256  04B3  087E               	movf	btemp,w
   257  04B4  008A               	movwf	10
   258  04B5  087F               	movf	btemp+1,w
   259  04B6  0082               	movwf	2
   260  04B7                     init_ram0:	
   261                           ;Called with:
   262                           ;	high address of idata address in btemp 
   263                           ;	low address of idata address in btemp+1 
   264                           ;	low address of data in FSR
   265                           ;	high address + 1 of data in btemp-1
   266                           
   267  04B7  120A  118A  24B3  120A  118A  	fcall	init_fetch0
   268  04BC  0080               	movwf	0
   269  04BD  0A84               	incf	4,f
   270  04BE  0804               	movf	4,w
   271  04BF  067D               	xorwf	btemp+-1,w
   272  04C0  1903               	btfsc	3,2
   273  04C1  3400               	retlw	0
   274  04C2  0AFF               	incf	btemp+1,f
   275  04C3  1903               	btfsc	3,2
   276  04C4  0AFE               	incf	btemp,f
   277  04C5  2CB7               	goto	init_ram0
   278                           
   279                           	psect	clrtext
   280  049A                     clear_ram0:	
   281                           ;	Called with FSR containing the base address, and
   282                           ;	W with the last address+1
   283                           
   284  049A  0064               	clrwdt	;clear the watchdog before getting into this loop
   285  049B                     clrloop0:
   286  049B  0180               	clrf	0	;clear RAM location pointed to by FSR
   287  049C  0A84               	incf	4,f	;increment pointer
   288  049D  0604               	xorwf	4,w	;XOR with final address
   289  049E  1903               	btfsc	3,2	;have we reached the end yet?
   290  049F  3400               	retlw	0	;all done for this memory range, return
   291  04A0  0604               	xorwf	4,w	;XOR again to restore value
   292  04A1  2C9B               	goto	clrloop0	;do the next byte
   293                           
   294                           	psect	cstackCOMMON
   295  0070                     __pcstackCOMMON:
   296  0070                     ?_DIO_Write:
   297  0070                     ?_Timer_Init:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ??_Timer_Init:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_Timer_Start:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_DIO_init:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ??_DIO_init:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_main:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     DIO_Write@pins:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     Timer_Start@Timer_Count:	
   319                           ; 1 bytes @ 0x0
   320                           
   321                           
   322                           ; 2 bytes @ 0x0
   323  0070                     	ds	1
   324  0071                     DIO_Write@value:
   325                           
   326                           ; 1 bytes @ 0x1
   327  0071                     	ds	1
   328  0072                     ??_DIO_Write:
   329  0072                     ??_Timer_Start:	
   330                           ; 1 bytes @ 0x2
   331                           
   332  0072                     Timer_Init@ret_error:	
   333                           ; 1 bytes @ 0x2
   334                           
   335  0072                     DIO_init@ret_error:	
   336                           ; 1 bytes @ 0x2
   337                           
   338                           
   339                           ; 1 bytes @ 0x2
   340  0072                     	ds	1
   341  0073                     Timer_Init@Timer_cfg:
   342  0073                     DIO_init@DIO_info:	
   343                           ; 1 bytes @ 0x3
   344                           
   345                           
   346                           ; 1 bytes @ 0x3
   347  0073                     	ds	1
   348  0074                     Timer_Start@Timer_CH_NO:
   349  0074                     DIO_Write@ret_error:	
   350                           ; 1 bytes @ 0x4
   351                           
   352                           
   353                           ; 1 bytes @ 0x4
   354  0074                     	ds	1
   355  0075                     Timer_Start@ret_error:
   356  0075                     DIO_Write@GPIO:	
   357                           ; 1 bytes @ 0x5
   358                           
   359                           
   360                           ; 1 bytes @ 0x5
   361  0075                     	ds	1
   362  0076                     ??_main:
   363                           
   364                           	psect	maintext
   365  04EA                     __pmaintext:	
   366                           ; 1 bytes @ 0x6
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 13 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : B00/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0
   389 ;;      Totals:         0       0       0       0       0
   390 ;;Total ram usage:        0 bytes
   391 ;; Hardware stack levels required when called:    1
   392 ;; This function calls:
   393 ;;		_DIO_Write
   394 ;;		_DIO_init
   395 ;;		_Timer_Init
   396 ;;		_Timer_Start
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           
   403                           ;psect for function _main
   404  04EA                     _main:
   405  04EA                     l2548:	
   406                           ;incstack = 0
   407                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   408                           
   409                           
   410                           ;main.c: 15:     ret=Timer_Init(&Timer_Configuration0);
   411  04EA  3041               	movlw	(low (_Timer_Configuration0| 0))& (0+255)
   412  04EB  120A  118A  255C  120A  118A  	fcall	_Timer_Init
   413  04F0  00FF               	movwf	btemp+1
   414  04F1  087F               	movf	btemp+1,w
   415  04F2  1283               	bcf	3,5	;RP0=0, select bank0
   416  04F3  1303               	bcf	3,6	;RP1=0, select bank0
   417  04F4  00D2               	movwf	_ret
   418                           
   419                           ;main.c: 16:    ret= DIO_init (&Dio_configutation_B);
   420  04F5  304E               	movlw	(low (_Dio_configutation_B| 0))& (0+255)
   421  04F6  120A  118A  26DF  120A  118A  	fcall	_DIO_init
   422  04FB  00FF               	movwf	btemp+1
   423  04FC  087F               	movf	btemp+1,w
   424  04FD  1283               	bcf	3,5	;RP0=0, select bank0
   425  04FE  1303               	bcf	3,6	;RP1=0, select bank0
   426  04FF  00D2               	movwf	_ret
   427                           
   428                           ;main.c: 17:    ret= DIO_init (&Dio_configutation_C);
   429  0500  304A               	movlw	(low (_Dio_configutation_C| 0))& (0+255)
   430  0501  120A  118A  26DF  120A  118A  	fcall	_DIO_init
   431  0506  00FF               	movwf	btemp+1
   432  0507  087F               	movf	btemp+1,w
   433  0508  1283               	bcf	3,5	;RP0=0, select bank0
   434  0509  1303               	bcf	3,6	;RP1=0, select bank0
   435  050A  00D2               	movwf	_ret
   436                           
   437                           ;main.c: 18:    ret= DIO_init (&Dio_configutation_A);
   438  050B  3046               	movlw	(low (_Dio_configutation_A| 0))& (0+255)
   439  050C  120A  118A  26DF  120A  118A  	fcall	_DIO_init
   440  0511  00FF               	movwf	btemp+1
   441  0512  087F               	movf	btemp+1,w
   442  0513  1283               	bcf	3,5	;RP0=0, select bank0
   443  0514  1303               	bcf	3,6	;RP1=0, select bank0
   444  0515  00D2               	movwf	_ret
   445  0516                     l210:	
   446                           ;main.c: 19:    while (1)
   447                           
   448                           
   449                           ;main.c: 20:     {;main.c: 33:     ret=Timer_Start(0,1);
   450  0516  3001               	movlw	1
   451  0517  00F0               	movwf	Timer_Start@Timer_Count
   452  0518  3000               	movlw	0
   453  0519  00F1               	movwf	Timer_Start@Timer_Count+1
   454  051A  3000               	movlw	0
   455  051B  120A  118A  24C6  120A  118A  	fcall	_Timer_Start
   456  0520  00FF               	movwf	btemp+1
   457  0521  087F               	movf	btemp+1,w
   458  0522  1283               	bcf	3,5	;RP0=0, select bank0
   459  0523  1303               	bcf	3,6	;RP1=0, select bank0
   460  0524  00D2               	movwf	_ret
   461  0525                     l211:	
   462                           ;main.c: 35:     {;}
   463                           
   464                           
   465                           ;main.c: 34:     while ((*((reg_type8_t)(0x000B)) & 0x04)==0)
   466  0525  1D0B               	btfss	11,2	;volatile
   467  0526  2D28               	goto	u181
   468  0527  2D29               	goto	u180
   469  0528                     u181:
   470  0528  2D25               	goto	l211
   471  0529                     u180:
   472  0529                     l2550:
   473                           
   474                           ;main.c: 36:     ret=DIO_Write(1,0x20|0x10,0xFF);
   475  0529  3030               	movlw	48
   476  052A  00FF               	movwf	btemp+1
   477  052B  087F               	movf	btemp+1,w
   478  052C  00F0               	movwf	DIO_Write@pins
   479  052D  30FF               	movlw	255
   480  052E  00FF               	movwf	btemp+1
   481  052F  087F               	movf	btemp+1,w
   482  0530  00F1               	movwf	DIO_Write@value
   483  0531  3001               	movlw	1
   484  0532  120A  118A  2611  120A  118A  	fcall	_DIO_Write
   485  0537  00FF               	movwf	btemp+1
   486  0538  087F               	movf	btemp+1,w
   487  0539  1283               	bcf	3,5	;RP0=0, select bank0
   488  053A  1303               	bcf	3,6	;RP1=0, select bank0
   489  053B  00D2               	movwf	_ret
   490  053C                     l2552:
   491                           
   492                           ;main.c: 37:     *((reg_type8_t)(0x000B)) &= (~0x04);
   493  053C  30FB               	movlw	251
   494  053D  00FF               	movwf	btemp+1
   495  053E  087F               	movf	btemp+1,w
   496  053F  058B               	andwf	11,f	;volatile
   497  0540                     l214:	
   498                           ;main.c: 39:   {;}
   499                           
   500                           
   501                           ;main.c: 38:     while ((*((reg_type8_t)(0x000B)) & 0x04)==0)
   502  0540  1D0B               	btfss	11,2	;volatile
   503  0541  2D43               	goto	u191
   504  0542  2D44               	goto	u190
   505  0543                     u191:
   506  0543  2D40               	goto	l214
   507  0544                     u190:
   508  0544                     l2554:
   509                           
   510                           ;main.c: 40:       ret=DIO_Write(1,0x20|0x10,0);
   511  0544  3030               	movlw	48
   512  0545  00FF               	movwf	btemp+1
   513  0546  087F               	movf	btemp+1,w
   514  0547  00F0               	movwf	DIO_Write@pins
   515  0548  01F1               	clrf	DIO_Write@value
   516  0549  3001               	movlw	1
   517  054A  120A  118A  2611  120A  118A  	fcall	_DIO_Write
   518  054F  00FF               	movwf	btemp+1
   519  0550  087F               	movf	btemp+1,w
   520  0551  1283               	bcf	3,5	;RP0=0, select bank0
   521  0552  1303               	bcf	3,6	;RP1=0, select bank0
   522  0553  00D2               	movwf	_ret
   523  0554                     l2556:
   524                           
   525                           ;main.c: 41:       *((reg_type8_t)(0x000B)) &= (~0x04);
   526  0554  30FB               	movlw	251
   527  0555  00FF               	movwf	btemp+1
   528  0556  087F               	movf	btemp+1,w
   529  0557  058B               	andwf	11,f	;volatile
   530  0558  2D16               	goto	l210
   531  0559  120A  118A  2800   	ljmp	start
   532  055C                     __end_of_main:
   533                           
   534                           	psect	text1
   535  04C6                     __ptext1:	
   536 ;; *************** function _Timer_Start *****************
   537 ;; Defined at:
   538 ;;		line 129 in file "timer.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  Timer_CH_NO     1    wreg     unsigned char 
   541 ;;  Timer_Count     2    0[COMMON] unsigned int 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  Timer_CH_NO     1    4[COMMON] unsigned char 
   544 ;;  ret_error       1    5[COMMON] unsigned char 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      unsigned char 
   547 ;; Registers used:
   548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         2       0       0       0       0
   555 ;;      Locals:         2       0       0       0       0
   556 ;;      Temps:          2       0       0       0       0
   557 ;;      Totals:         6       0       0       0       0
   558 ;;Total ram usage:        6 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _Timer_Start
   569  04C6                     _Timer_Start:
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _Timer_Start: [wreg-fsr0h+status,2+status,0+btemp+1]
   573                           ;Timer_Start@Timer_CH_NO stored from wreg
   574  04C6  00F4               	movwf	Timer_Start@Timer_CH_NO
   575  04C7                     l1802:
   576                           
   577                           ;timer.c: 129: ERROR_STATUS Timer_Start(uint8_t Timer_CH_NO, uint16_t Timer_Count);timer
      +                          .c: 130: {;timer.c: 131:   uint8_t ret_error = 0;
   578  04C7  01F5               	clrf	Timer_Start@ret_error
   579                           
   580                           ;timer.c: 132:   switch (Timer_CH_NO) {
   581  04C8  2CD5               	goto	l1810
   582  04C9                     l1804:
   583                           
   584                           ;timer.c: 136:     *((reg_type8_t)(0x0081)) = Prescaler;
   585  04C9  087C               	movf	_Prescaler,w
   586  04CA  00FF               	movwf	btemp+1
   587  04CB  087F               	movf	btemp+1,w
   588  04CC  1683               	bsf	3,5	;RP0=1, select bank1
   589  04CD  1303               	bcf	3,6	;RP1=0, select bank1
   590  04CE  0081               	movwf	1	;volatile
   591                           
   592                           ;timer.c: 142:     break;
   593  04CF  2CE8               	goto	l1812
   594  04D0                     l1806:
   595                           
   596                           ;timer.c: 154:     ret_error += 1 +26;
   597  04D0  301B               	movlw	27
   598  04D1  00FF               	movwf	btemp+1
   599  04D2  087F               	movf	btemp+1,w
   600  04D3  07F5               	addwf	Timer_Start@ret_error,f
   601                           
   602                           ;timer.c: 155:     break;
   603  04D4  2CE8               	goto	l1812
   604  04D5                     l1810:
   605  04D5  0874               	movf	Timer_Start@Timer_CH_NO,w
   606  04D6  00F2               	movwf	??_Timer_Start
   607  04D7  01F3               	clrf	??_Timer_Start+1
   608                           
   609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   610                           ; Switch size 1, requested type "simple"
   611                           ; Number of cases is 1, Range of values is 0 to 0
   612                           ; switch strategies available:
   613                           ; Name         Instructions Cycles
   614                           ; simple_byte            4     3 (average)
   615                           ; direct_byte           11     8 (fixed)
   616                           ; jumptable            260     6 (fixed)
   617                           ;	Chosen strategy is simple_byte
   618  04D8  0873               	movf	??_Timer_Start+1,w
   619  04D9  3A00               	xorlw	0	; case 0
   620  04DA  1903               	skipnz
   621  04DB  2CDD               	goto	l3058
   622  04DC  2CD0               	goto	l1806
   623  04DD                     l3058:
   624                           
   625                           ; Switch size 1, requested type "simple"
   626                           ; Number of cases is 3, Range of values is 0 to 2
   627                           ; switch strategies available:
   628                           ; Name         Instructions Cycles
   629                           ; simple_byte           10     6 (average)
   630                           ; direct_byte           17     8 (fixed)
   631                           ; jumptable            260     6 (fixed)
   632                           ;	Chosen strategy is simple_byte
   633  04DD  0872               	movf	??_Timer_Start,w
   634  04DE  3A00               	xorlw	0	; case 0
   635  04DF  1903               	skipnz
   636  04E0  2CC9               	goto	l1804
   637  04E1  3A01               	xorlw	1	; case 1
   638  04E2  1903               	skipnz
   639  04E3  2CE8               	goto	l1812
   640  04E4  3A03               	xorlw	3	; case 2
   641  04E5  1903               	skipnz
   642  04E6  2CE8               	goto	l1812
   643  04E7  2CD0               	goto	l1806
   644  04E8                     l1812:
   645                           
   646                           ;timer.c: 159:   return ret_error;
   647  04E8  0875               	movf	Timer_Start@ret_error,w
   648  04E9                     l56:
   649  04E9  0008               	return
   650  04EA                     __end_of_Timer_Start:
   651                           
   652                           	psect	text2
   653  055C                     __ptext2:	
   654 ;; *************** function _Timer_Init *****************
   655 ;; Defined at:
   656 ;;		line 15 in file "timer.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  Timer_cfg       1    wreg     PTR struct Timer_cfg_s
   659 ;;		 -> Timer_Configuration0(5), 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  Timer_cfg       1    3[COMMON] PTR struct Timer_cfg_s
   662 ;;		 -> Timer_Configuration0(5), 
   663 ;;  ret_error       1    2[COMMON] unsigned char 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      unsigned char 
   666 ;; Registers used:
   667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         2       0       0       0       0
   675 ;;      Temps:          2       0       0       0       0
   676 ;;      Totals:         4       0       0       0       0
   677 ;;Total ram usage:        4 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _Timer_Init
   688  055C                     _Timer_Init:
   689                           
   690                           ;incstack = 0
   691                           ; Regs used in _Timer_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
   692                           ;Timer_Init@Timer_cfg stored from wreg
   693  055C  00F3               	movwf	Timer_Init@Timer_cfg
   694  055D                     l1630:
   695                           
   696                           ;timer.c: 15: ERROR_STATUS Timer_Init(Timer_cfg_s* Timer_cfg);timer.c: 16: {;timer.c: 17
      +                          : uint8_t ret_error = 0;
   697  055D  01F2               	clrf	Timer_Init@ret_error
   698                           
   699                           ;timer.c: 19: switch (Timer_cfg->Timer_CH_NO)
   700  055E  2DF9               	goto	l1668
   701  055F                     l1632:
   702                           
   703                           ;timer.c: 22:     Prescaler &= (Timer_cfg -> Timer_Mode);
   704  055F  0A73               	incf	Timer_Init@Timer_cfg,w
   705  0560  0084               	movwf	4
   706  0561  0800               	movf	0,w
   707  0562  00FF               	movwf	btemp+1
   708  0563  087F               	movf	btemp+1,w
   709  0564  05FC               	andwf	_Prescaler,f
   710                           
   711                           ;timer.c: 23:         switch (Timer_cfg->Timer_Polling_Or_Interrupt)
   712  0565  2D76               	goto	l1640
   713  0566                     l10:	
   714                           ;timer.c: 24:         {;timer.c: 25:             case 0xA0:
   715                           
   716                           
   717                           ;timer.c: 26:             *((reg_type8_t)(0x000B)) |= 0x80;
   718  0566  178B               	bsf	11,7	;volatile
   719  0567                     l1634:
   720                           
   721                           ;timer.c: 27:             *((reg_type8_t)(0x000B)) |=0xA0;
   722  0567  30A0               	movlw	160
   723  0568  00FF               	movwf	btemp+1
   724  0569  087F               	movf	btemp+1,w
   725  056A  048B               	iorwf	11,f	;volatile
   726                           
   727                           ;timer.c: 29:             break;
   728  056B  2E0F               	goto	l1670
   729  056C                     l1636:
   730                           
   731                           ;timer.c: 31:             *((reg_type8_t)(0x000B)) &= 0xDF;
   732  056C  30DF               	movlw	223
   733  056D  00FF               	movwf	btemp+1
   734  056E  087F               	movf	btemp+1,w
   735  056F  058B               	andwf	11,f	;volatile
   736                           
   737                           ;timer.c: 32:             break;
   738  0570  2E0F               	goto	l1670
   739  0571                     l1638:
   740                           
   741                           ;timer.c: 34:             ret_error += 1 +24;
   742  0571  3019               	movlw	25
   743  0572  00FF               	movwf	btemp+1
   744  0573  087F               	movf	btemp+1,w
   745  0574  07F2               	addwf	Timer_Init@ret_error,f
   746                           
   747                           ;timer.c: 36:         }
   748  0575  2E0F               	goto	l1670
   749  0576                     l1640:
   750  0576  0873               	movf	Timer_Init@Timer_cfg,w
   751  0577  3E02               	addlw	2
   752  0578  0084               	movwf	4
   753  0579  0800               	movf	0,w
   754  057A  00F0               	movwf	??_Timer_Init
   755  057B  01F1               	clrf	??_Timer_Init+1
   756                           
   757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   758                           ; Switch size 1, requested type "simple"
   759                           ; Number of cases is 1, Range of values is 0 to 0
   760                           ; switch strategies available:
   761                           ; Name         Instructions Cycles
   762                           ; simple_byte            4     3 (average)
   763                           ; direct_byte           11     8 (fixed)
   764                           ; jumptable            260     6 (fixed)
   765                           ;	Chosen strategy is simple_byte
   766  057C  0871               	movf	??_Timer_Init+1,w
   767  057D  3A00               	xorlw	0	; case 0
   768  057E  1903               	skipnz
   769  057F  2D81               	goto	l3060
   770  0580  2D71               	goto	l1638
   771  0581                     l3060:
   772                           
   773                           ; Switch size 1, requested type "simple"
   774                           ; Number of cases is 2, Range of values is 160 to 223
   775                           ; switch strategies available:
   776                           ; Name         Instructions Cycles
   777                           ; simple_byte            7     4 (average)
   778                           ; direct_byte          203    11 (fixed)
   779                           ; jumptable            263     9 (fixed)
   780                           ;	Chosen strategy is simple_byte
   781  0581  0870               	movf	??_Timer_Init,w
   782  0582  3AA0               	xorlw	160	; case 160
   783  0583  1903               	skipnz
   784  0584  2D66               	goto	l10
   785  0585  3A7F               	xorlw	127	; case 223
   786  0586  1903               	skipnz
   787  0587  2D6C               	goto	l1636
   788  0588  2D71               	goto	l1638
   789  0589                     l1644:
   790  0589  0873               	movf	Timer_Init@Timer_cfg,w
   791  058A  3E02               	addlw	2
   792  058B  0084               	movwf	4
   793  058C  0800               	movf	0,w
   794  058D  00F0               	movwf	??_Timer_Init
   795  058E  01F1               	clrf	??_Timer_Init+1
   796                           
   797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   798                           ; Switch size 1, requested type "simple"
   799                           ; Number of cases is 1, Range of values is 0 to 0
   800                           ; switch strategies available:
   801                           ; Name         Instructions Cycles
   802                           ; simple_byte            4     3 (average)
   803                           ; direct_byte           11     8 (fixed)
   804                           ; jumptable            260     6 (fixed)
   805                           ;	Chosen strategy is simple_byte
   806  058F  0871               	movf	??_Timer_Init+1,w
   807  0590  3A00               	xorlw	0	; case 0
   808  0591  1903               	skipnz
   809  0592  2D94               	goto	l3062
   810  0593  2E0F               	goto	l1670
   811  0594                     l3062:
   812                           
   813                           ; Switch size 1, requested type "simple"
   814                           ; Number of cases is 2, Range of values is 160 to 223
   815                           ; switch strategies available:
   816                           ; Name         Instructions Cycles
   817                           ; simple_byte            7     4 (average)
   818                           ; direct_byte          203    11 (fixed)
   819                           ; jumptable            263     9 (fixed)
   820                           ;	Chosen strategy is simple_byte
   821  0594  0870               	movf	??_Timer_Init,w
   822  0595  3AA0               	xorlw	160	; case 160
   823  0596  1903               	skipnz
   824  0597  2E0F               	goto	l1670
   825  0598  3A7F               	xorlw	127	; case 223
   826  0599  1903               	skipnz
   827  059A  2E0F               	goto	l1670
   828  059B  2E0F               	goto	l1670
   829  059C                     l1648:
   830  059C  0873               	movf	Timer_Init@Timer_cfg,w
   831  059D  3E02               	addlw	2
   832  059E  0084               	movwf	4
   833  059F  0800               	movf	0,w
   834  05A0  00F0               	movwf	??_Timer_Init
   835  05A1  01F1               	clrf	??_Timer_Init+1
   836                           
   837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   838                           ; Switch size 1, requested type "simple"
   839                           ; Number of cases is 1, Range of values is 0 to 0
   840                           ; switch strategies available:
   841                           ; Name         Instructions Cycles
   842                           ; simple_byte            4     3 (average)
   843                           ; direct_byte           11     8 (fixed)
   844                           ; jumptable            260     6 (fixed)
   845                           ;	Chosen strategy is simple_byte
   846  05A2  0871               	movf	??_Timer_Init+1,w
   847  05A3  3A00               	xorlw	0	; case 0
   848  05A4  1903               	skipnz
   849  05A5  2DA7               	goto	l3064
   850  05A6  2E0F               	goto	l1670
   851  05A7                     l3064:
   852                           
   853                           ; Switch size 1, requested type "simple"
   854                           ; Number of cases is 2, Range of values is 160 to 223
   855                           ; switch strategies available:
   856                           ; Name         Instructions Cycles
   857                           ; simple_byte            7     4 (average)
   858                           ; direct_byte          203    11 (fixed)
   859                           ; jumptable            263     9 (fixed)
   860                           ;	Chosen strategy is simple_byte
   861  05A7  0870               	movf	??_Timer_Init,w
   862  05A8  3AA0               	xorlw	160	; case 160
   863  05A9  1903               	skipnz
   864  05AA  2E0F               	goto	l1670
   865  05AB  3A7F               	xorlw	127	; case 223
   866  05AC  1903               	skipnz
   867  05AD  2E0F               	goto	l1670
   868  05AE  2E0F               	goto	l1670
   869  05AF                     l1652:
   870  05AF  0A73               	incf	Timer_Init@Timer_cfg,w
   871  05B0  0084               	movwf	4
   872  05B1  0800               	movf	0,w
   873  05B2  00F0               	movwf	??_Timer_Init
   874  05B3  01F1               	clrf	??_Timer_Init+1
   875                           
   876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   877                           ; Switch size 1, requested type "simple"
   878                           ; Number of cases is 1, Range of values is 0 to 0
   879                           ; switch strategies available:
   880                           ; Name         Instructions Cycles
   881                           ; simple_byte            4     3 (average)
   882                           ; direct_byte           11     8 (fixed)
   883                           ; jumptable            260     6 (fixed)
   884                           ;	Chosen strategy is simple_byte
   885  05B4  0871               	movf	??_Timer_Init+1,w
   886  05B5  3A00               	xorlw	0	; case 0
   887  05B6  1903               	skipnz
   888  05B7  2DB9               	goto	l3066
   889  05B8  2E0F               	goto	l1670
   890  05B9                     l3066:
   891                           
   892                           ; Switch size 1, requested type "simple"
   893                           ; Number of cases is 2, Range of values is 0 to 1
   894                           ; switch strategies available:
   895                           ; Name         Instructions Cycles
   896                           ; simple_byte            7     4 (average)
   897                           ; direct_byte           14     8 (fixed)
   898                           ; jumptable            260     6 (fixed)
   899                           ;	Chosen strategy is simple_byte
   900  05B9  0870               	movf	??_Timer_Init,w
   901  05BA  3A00               	xorlw	0	; case 0
   902  05BB  1903               	skipnz
   903  05BC  2D89               	goto	l1644
   904  05BD  3A01               	xorlw	1	; case 1
   905  05BE  1903               	skipnz
   906  05BF  2D9C               	goto	l1648
   907  05C0  2E0F               	goto	l1670
   908  05C1                     l1656:
   909  05C1  0873               	movf	Timer_Init@Timer_cfg,w
   910  05C2  3E02               	addlw	2
   911  05C3  0084               	movwf	4
   912  05C4  0800               	movf	0,w
   913  05C5  00F0               	movwf	??_Timer_Init
   914  05C6  01F1               	clrf	??_Timer_Init+1
   915                           
   916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   917                           ; Switch size 1, requested type "simple"
   918                           ; Number of cases is 1, Range of values is 0 to 0
   919                           ; switch strategies available:
   920                           ; Name         Instructions Cycles
   921                           ; simple_byte            4     3 (average)
   922                           ; direct_byte           11     8 (fixed)
   923                           ; jumptable            260     6 (fixed)
   924                           ;	Chosen strategy is simple_byte
   925  05C7  0871               	movf	??_Timer_Init+1,w
   926  05C8  3A00               	xorlw	0	; case 0
   927  05C9  1903               	skipnz
   928  05CA  2DCC               	goto	l3068
   929  05CB  2E0F               	goto	l1670
   930  05CC                     l3068:
   931                           
   932                           ; Switch size 1, requested type "simple"
   933                           ; Number of cases is 2, Range of values is 160 to 223
   934                           ; switch strategies available:
   935                           ; Name         Instructions Cycles
   936                           ; simple_byte            7     4 (average)
   937                           ; direct_byte          203    11 (fixed)
   938                           ; jumptable            263     9 (fixed)
   939                           ;	Chosen strategy is simple_byte
   940  05CC  0870               	movf	??_Timer_Init,w
   941  05CD  3AA0               	xorlw	160	; case 160
   942  05CE  1903               	skipnz
   943  05CF  2E0F               	goto	l1670
   944  05D0  3A7F               	xorlw	127	; case 223
   945  05D1  1903               	skipnz
   946  05D2  2E0F               	goto	l1670
   947  05D3  2E0F               	goto	l1670
   948  05D4                     l1660:
   949  05D4  0873               	movf	Timer_Init@Timer_cfg,w
   950  05D5  3E02               	addlw	2
   951  05D6  0084               	movwf	4
   952  05D7  0800               	movf	0,w
   953  05D8  00F0               	movwf	??_Timer_Init
   954  05D9  01F1               	clrf	??_Timer_Init+1
   955                           
   956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   957                           ; Switch size 1, requested type "simple"
   958                           ; Number of cases is 1, Range of values is 0 to 0
   959                           ; switch strategies available:
   960                           ; Name         Instructions Cycles
   961                           ; simple_byte            4     3 (average)
   962                           ; direct_byte           11     8 (fixed)
   963                           ; jumptable            260     6 (fixed)
   964                           ;	Chosen strategy is simple_byte
   965  05DA  0871               	movf	??_Timer_Init+1,w
   966  05DB  3A00               	xorlw	0	; case 0
   967  05DC  1903               	skipnz
   968  05DD  2DDF               	goto	l3070
   969  05DE  2E0F               	goto	l1670
   970  05DF                     l3070:
   971                           
   972                           ; Switch size 1, requested type "simple"
   973                           ; Number of cases is 2, Range of values is 160 to 223
   974                           ; switch strategies available:
   975                           ; Name         Instructions Cycles
   976                           ; simple_byte            7     4 (average)
   977                           ; direct_byte          203    11 (fixed)
   978                           ; jumptable            263     9 (fixed)
   979                           ;	Chosen strategy is simple_byte
   980  05DF  0870               	movf	??_Timer_Init,w
   981  05E0  3AA0               	xorlw	160	; case 160
   982  05E1  1903               	skipnz
   983  05E2  2E0F               	goto	l1670
   984  05E3  3A7F               	xorlw	127	; case 223
   985  05E4  1903               	skipnz
   986  05E5  2E0F               	goto	l1670
   987  05E6  2E0F               	goto	l1670
   988  05E7                     l1664:
   989  05E7  0A73               	incf	Timer_Init@Timer_cfg,w
   990  05E8  0084               	movwf	4
   991  05E9  0800               	movf	0,w
   992  05EA  00F0               	movwf	??_Timer_Init
   993  05EB  01F1               	clrf	??_Timer_Init+1
   994                           
   995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   996                           ; Switch size 1, requested type "simple"
   997                           ; Number of cases is 1, Range of values is 0 to 0
   998                           ; switch strategies available:
   999                           ; Name         Instructions Cycles
  1000                           ; simple_byte            4     3 (average)
  1001                           ; direct_byte           11     8 (fixed)
  1002                           ; jumptable            260     6 (fixed)
  1003                           ;	Chosen strategy is simple_byte
  1004  05EC  0871               	movf	??_Timer_Init+1,w
  1005  05ED  3A00               	xorlw	0	; case 0
  1006  05EE  1903               	skipnz
  1007  05EF  2DF1               	goto	l3072
  1008  05F0  2E0F               	goto	l1670
  1009  05F1                     l3072:
  1010                           
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 2, Range of values is 0 to 1
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            7     4 (average)
  1016                           ; direct_byte           14     8 (fixed)
  1017                           ; jumptable            260     6 (fixed)
  1018                           ;	Chosen strategy is simple_byte
  1019  05F1  0870               	movf	??_Timer_Init,w
  1020  05F2  3A00               	xorlw	0	; case 0
  1021  05F3  1903               	skipnz
  1022  05F4  2DC1               	goto	l1656
  1023  05F5  3A01               	xorlw	1	; case 1
  1024  05F6  1903               	skipnz
  1025  05F7  2DD4               	goto	l1660
  1026  05F8  2E0F               	goto	l1670
  1027  05F9                     l1668:
  1028  05F9  0873               	movf	Timer_Init@Timer_cfg,w
  1029  05FA  0084               	movwf	4
  1030  05FB  1383               	bcf	3,7	;select IRP bank0
  1031  05FC  0800               	movf	0,w
  1032  05FD  00F0               	movwf	??_Timer_Init
  1033  05FE  01F1               	clrf	??_Timer_Init+1
  1034                           
  1035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1036                           ; Switch size 1, requested type "simple"
  1037                           ; Number of cases is 1, Range of values is 0 to 0
  1038                           ; switch strategies available:
  1039                           ; Name         Instructions Cycles
  1040                           ; simple_byte            4     3 (average)
  1041                           ; direct_byte           11     8 (fixed)
  1042                           ; jumptable            260     6 (fixed)
  1043                           ;	Chosen strategy is simple_byte
  1044  05FF  0871               	movf	??_Timer_Init+1,w
  1045  0600  3A00               	xorlw	0	; case 0
  1046  0601  1903               	skipnz
  1047  0602  2E04               	goto	l3074
  1048  0603  2E0F               	goto	l1670
  1049  0604                     l3074:
  1050                           
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 3, Range of values is 0 to 2
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte           10     6 (average)
  1056                           ; direct_byte           17     8 (fixed)
  1057                           ; jumptable            260     6 (fixed)
  1058                           ;	Chosen strategy is simple_byte
  1059  0604  0870               	movf	??_Timer_Init,w
  1060  0605  3A00               	xorlw	0	; case 0
  1061  0606  1903               	skipnz
  1062  0607  2D5F               	goto	l1632
  1063  0608  3A01               	xorlw	1	; case 1
  1064  0609  1903               	skipnz
  1065  060A  2DAF               	goto	l1652
  1066  060B  3A03               	xorlw	3	; case 2
  1067  060C  1903               	skipnz
  1068  060D  2DE7               	goto	l1664
  1069  060E  2E0F               	goto	l1670
  1070  060F                     l1670:
  1071                           
  1072                           ;timer.c: 110: return ret_error;
  1073  060F  0872               	movf	Timer_Init@ret_error,w
  1074  0610                     l44:
  1075  0610  0008               	return
  1076  0611                     __end_of_Timer_Init:
  1077                           
  1078                           	psect	text3
  1079  06DF                     __ptext3:	
  1080 ;; *************** function _DIO_init *****************
  1081 ;; Defined at:
  1082 ;;		line 11 in file "DIO.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  DIO_info        1    wreg     PTR struct DIO_Cfg_s
  1085 ;;		 -> Dio_configutation_A(4), Dio_configutation_C(4), Dio_configutation_B(4), 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  DIO_info        1    3[COMMON] PTR struct DIO_Cfg_s
  1088 ;;		 -> Dio_configutation_A(4), Dio_configutation_C(4), Dio_configutation_B(4), 
  1089 ;;  ret_error       1    2[COMMON] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      unsigned char 
  1092 ;; Registers used:
  1093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       0       0       0       0
  1100 ;;      Locals:         2       0       0       0       0
  1101 ;;      Temps:          2       0       0       0       0
  1102 ;;      Totals:         4       0       0       0       0
  1103 ;;Total ram usage:        4 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _DIO_init
  1114  06DF                     _DIO_init:
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _DIO_init: [wreg-fsr0h+status,2+status,0+btemp+1]
  1118                           ;DIO_init@DIO_info stored from wreg
  1119  06DF  00F3               	movwf	DIO_init@DIO_info
  1120  06E0                     l2442:
  1121                           
  1122                           ;DIO.c: 11: ERROR_STATUS DIO_init (DIO_Cfg_s *DIO_info);DIO.c: 12: {;DIO.c: 13: uint8_t 
      +                          ret_error=0;
  1123  06E0  01F2               	clrf	DIO_init@ret_error
  1124  06E1                     l2444:
  1125                           
  1126                           ;DIO.c: 14: static uint8_t first_powerup_init = 0;;DIO.c: 15: is_init=1;
  1127  06E1  01FA               	clrf	_is_init
  1128  06E2  0AFA               	incf	_is_init,f
  1129  06E3                     l2446:
  1130                           
  1131                           ;DIO.c: 16:  if (first_powerup_init == 0) {
  1132  06E3  0879               	movf	DIO_init@first_powerup_init,w
  1133  06E4  1D03               	btfss	3,2
  1134  06E5  2EE7               	goto	u161
  1135  06E6  2EE8               	goto	u160
  1136  06E7                     u161:
  1137  06E7  2F1D               	goto	l2466
  1138  06E8                     u160:
  1139  06E8  2EFD               	goto	l2462
  1140  06E9                     l2450:
  1141                           
  1142                           ;DIO.c: 20:   *((reg_type8_t)(0x0085))=0x00;
  1143  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  1144  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  1145  06EB  0185               	clrf	5	;volatile
  1146                           
  1147                           ;DIO.c: 21:       break;
  1148  06EC  2F19               	goto	l2464
  1149  06ED                     l2452:
  1150                           
  1151                           ;DIO.c: 23:   *((reg_type8_t)(0x0086))=0x00;
  1152  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  1153  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  1154  06EF  0186               	clrf	6	;volatile
  1155                           
  1156                           ;DIO.c: 24:       break;
  1157  06F0  2F19               	goto	l2464
  1158  06F1                     l2454:
  1159                           
  1160                           ;DIO.c: 26:   *((reg_type8_t)(0x0087))=0x00;
  1161  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  1162  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  1163  06F3  0187               	clrf	7	;volatile
  1164                           
  1165                           ;DIO.c: 27:       break;
  1166  06F4  2F19               	goto	l2464
  1167  06F5                     l2456:
  1168                           
  1169                           ;DIO.c: 29:   *((reg_type8_t)(0x0088))=0x00;
  1170  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  1171  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  1172  06F7  0188               	clrf	8	;volatile
  1173                           
  1174                           ;DIO.c: 30:       break;
  1175  06F8  2F19               	goto	l2464
  1176  06F9                     l2458:
  1177                           
  1178                           ;DIO.c: 32:   *((reg_type8_t)(0x0089))=0x00;
  1179  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  1180  06FA  1303               	bcf	3,6	;RP1=0, select bank1
  1181  06FB  0189               	clrf	9	;volatile
  1182                           
  1183                           ;DIO.c: 33:       break;
  1184  06FC  2F19               	goto	l2464
  1185  06FD                     l2462:
  1186  06FD  0873               	movf	DIO_init@DIO_info,w
  1187  06FE  0084               	movwf	4
  1188  06FF  1383               	bcf	3,7	;select IRP bank0
  1189  0700  0800               	movf	0,w
  1190  0701  00F0               	movwf	??_DIO_init
  1191  0702  01F1               	clrf	??_DIO_init+1
  1192                           
  1193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1194                           ; Switch size 1, requested type "simple"
  1195                           ; Number of cases is 1, Range of values is 0 to 0
  1196                           ; switch strategies available:
  1197                           ; Name         Instructions Cycles
  1198                           ; simple_byte            4     3 (average)
  1199                           ; direct_byte           11     8 (fixed)
  1200                           ; jumptable            260     6 (fixed)
  1201                           ;	Chosen strategy is simple_byte
  1202  0703  0871               	movf	??_DIO_init+1,w
  1203  0704  3A00               	xorlw	0	; case 0
  1204  0705  1903               	skipnz
  1205  0706  2F08               	goto	l3076
  1206  0707  2F19               	goto	l2464
  1207  0708                     l3076:
  1208                           
  1209                           ; Switch size 1, requested type "simple"
  1210                           ; Number of cases is 5, Range of values is 0 to 4
  1211                           ; switch strategies available:
  1212                           ; Name         Instructions Cycles
  1213                           ; simple_byte           16     9 (average)
  1214                           ; direct_byte           23     8 (fixed)
  1215                           ; jumptable            260     6 (fixed)
  1216                           ;	Chosen strategy is simple_byte
  1217  0708  0870               	movf	??_DIO_init,w
  1218  0709  3A00               	xorlw	0	; case 0
  1219  070A  1903               	skipnz
  1220  070B  2EE9               	goto	l2450
  1221  070C  3A01               	xorlw	1	; case 1
  1222  070D  1903               	skipnz
  1223  070E  2EED               	goto	l2452
  1224  070F  3A03               	xorlw	3	; case 2
  1225  0710  1903               	skipnz
  1226  0711  2EF1               	goto	l2454
  1227  0712  3A01               	xorlw	1	; case 3
  1228  0713  1903               	skipnz
  1229  0714  2EF5               	goto	l2456
  1230  0715  3A07               	xorlw	7	; case 4
  1231  0716  1903               	skipnz
  1232  0717  2EF9               	goto	l2458
  1233  0718  2F19               	goto	l2464
  1234  0719                     l2464:
  1235                           
  1236                           ;DIO.c: 35:   first_powerup_init++;
  1237  0719  3001               	movlw	1
  1238  071A  00FF               	movwf	btemp+1
  1239  071B  087F               	movf	btemp+1,w
  1240  071C  07F9               	addwf	DIO_init@first_powerup_init,f
  1241  071D                     l2466:
  1242                           
  1243                           ;DIO.c: 37:  *((reg_type8_t)(0x009F)) =( DIO_info -> operation_mode) ;
  1244  071D  0873               	movf	DIO_init@DIO_info,w
  1245  071E  3E03               	addlw	3
  1246  071F  0084               	movwf	4
  1247  0720  1383               	bcf	3,7	;select IRP bank0
  1248  0721  0800               	movf	0,w
  1249  0722  00FF               	movwf	btemp+1
  1250  0723  087F               	movf	btemp+1,w
  1251  0724  1683               	bsf	3,5	;RP0=1, select bank1
  1252  0725  1303               	bcf	3,6	;RP1=0, select bank1
  1253  0726  009F               	movwf	31	;volatile
  1254  0727                     l2468:
  1255                           
  1256                           ;DIO.c: 38: if(DIO_info != ((void *)0)){
  1257  0727  0873               	movf	DIO_init@DIO_info,w
  1258  0728  1903               	btfsc	3,2
  1259  0729  2F2B               	goto	u171
  1260  072A  2F2C               	goto	u170
  1261  072B                     u171:
  1262  072B  2FCF               	goto	l2510
  1263  072C                     u170:
  1264  072C  2FBD               	goto	l2508
  1265  072D                     l2472:
  1266                           
  1267                           ;DIO.c: 47:            *((reg_type8_t)(0x0085)) |=(DIO_info-> pin) ;
  1268  072D  0873               	movf	DIO_init@DIO_info,w
  1269  072E  3E02               	addlw	2
  1270  072F  0084               	movwf	4
  1271  0730  0800               	movf	0,w
  1272  0731  00FF               	movwf	btemp+1
  1273  0732  087F               	movf	btemp+1,w
  1274  0733  0485               	iorwf	5,f	;volatile
  1275                           
  1276                           ;DIO.c: 48:             break;
  1277  0734  2FD3               	goto	l2512
  1278  0735                     l2474:
  1279                           
  1280                           ;DIO.c: 51:                 *((reg_type8_t)(0x0086)) |=(DIO_info->pin) ;
  1281  0735  0873               	movf	DIO_init@DIO_info,w
  1282  0736  3E02               	addlw	2
  1283  0737  0084               	movwf	4
  1284  0738  0800               	movf	0,w
  1285  0739  00FF               	movwf	btemp+1
  1286  073A  087F               	movf	btemp+1,w
  1287  073B  0486               	iorwf	6,f	;volatile
  1288                           
  1289                           ;DIO.c: 52:             break;
  1290  073C  2FD3               	goto	l2512
  1291  073D                     l2476:
  1292                           
  1293                           ;DIO.c: 55:                 *((reg_type8_t)(0x0087)) |=(DIO_info->pin) ;
  1294  073D  0873               	movf	DIO_init@DIO_info,w
  1295  073E  3E02               	addlw	2
  1296  073F  0084               	movwf	4
  1297  0740  0800               	movf	0,w
  1298  0741  00FF               	movwf	btemp+1
  1299  0742  087F               	movf	btemp+1,w
  1300  0743  0487               	iorwf	7,f	;volatile
  1301                           
  1302                           ;DIO.c: 56:             break;
  1303  0744  2FD3               	goto	l2512
  1304  0745                     l2478:
  1305                           
  1306                           ;DIO.c: 59:                 *((reg_type8_t)(0x0088)) |=(DIO_info->pin) ;
  1307  0745  0873               	movf	DIO_init@DIO_info,w
  1308  0746  3E02               	addlw	2
  1309  0747  0084               	movwf	4
  1310  0748  0800               	movf	0,w
  1311  0749  00FF               	movwf	btemp+1
  1312  074A  087F               	movf	btemp+1,w
  1313  074B  0488               	iorwf	8,f	;volatile
  1314                           
  1315                           ;DIO.c: 60:             break;
  1316  074C  2FD3               	goto	l2512
  1317  074D                     l2480:
  1318                           
  1319                           ;DIO.c: 63:             *((reg_type8_t)(0x0089)) |=(DIO_info->pin) ;
  1320  074D  0873               	movf	DIO_init@DIO_info,w
  1321  074E  3E02               	addlw	2
  1322  074F  0084               	movwf	4
  1323  0750  0800               	movf	0,w
  1324  0751  00FF               	movwf	btemp+1
  1325  0752  087F               	movf	btemp+1,w
  1326  0753  0489               	iorwf	9,f	;volatile
  1327                           
  1328                           ;DIO.c: 64:             break;
  1329  0754  2FD3               	goto	l2512
  1330  0755                     l2482:
  1331                           
  1332                           ;DIO.c: 66:             ret_error += 1 +14;
  1333  0755  300F               	movlw	15
  1334  0756  00FF               	movwf	btemp+1
  1335  0757  087F               	movf	btemp+1,w
  1336  0758  07F2               	addwf	DIO_init@ret_error,f
  1337                           
  1338                           ;DIO.c: 67:             break;
  1339  0759  2FD3               	goto	l2512
  1340  075A                     l2486:
  1341  075A  0873               	movf	DIO_init@DIO_info,w
  1342  075B  0084               	movwf	4
  1343  075C  0800               	movf	0,w
  1344  075D  00F0               	movwf	??_DIO_init
  1345  075E  01F1               	clrf	??_DIO_init+1
  1346                           
  1347                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1348                           ; Switch size 1, requested type "simple"
  1349                           ; Number of cases is 1, Range of values is 0 to 0
  1350                           ; switch strategies available:
  1351                           ; Name         Instructions Cycles
  1352                           ; simple_byte            4     3 (average)
  1353                           ; direct_byte           11     8 (fixed)
  1354                           ; jumptable            260     6 (fixed)
  1355                           ;	Chosen strategy is simple_byte
  1356  075F  0871               	movf	??_DIO_init+1,w
  1357  0760  3A00               	xorlw	0	; case 0
  1358  0761  1903               	skipnz
  1359  0762  2F64               	goto	l3078
  1360  0763  2F55               	goto	l2482
  1361  0764                     l3078:
  1362                           
  1363                           ; Switch size 1, requested type "simple"
  1364                           ; Number of cases is 5, Range of values is 0 to 4
  1365                           ; switch strategies available:
  1366                           ; Name         Instructions Cycles
  1367                           ; simple_byte           16     9 (average)
  1368                           ; direct_byte           23     8 (fixed)
  1369                           ; jumptable            260     6 (fixed)
  1370                           ;	Chosen strategy is simple_byte
  1371  0764  0870               	movf	??_DIO_init,w
  1372  0765  3A00               	xorlw	0	; case 0
  1373  0766  1903               	skipnz
  1374  0767  2F2D               	goto	l2472
  1375  0768  3A01               	xorlw	1	; case 1
  1376  0769  1903               	skipnz
  1377  076A  2F35               	goto	l2474
  1378  076B  3A03               	xorlw	3	; case 2
  1379  076C  1903               	skipnz
  1380  076D  2F3D               	goto	l2476
  1381  076E  3A01               	xorlw	1	; case 3
  1382  076F  1903               	skipnz
  1383  0770  2F45               	goto	l2478
  1384  0771  3A07               	xorlw	7	; case 4
  1385  0772  1903               	skipnz
  1386  0773  2F4D               	goto	l2480
  1387  0774  2F55               	goto	l2482
  1388  0775                     l2488:
  1389                           
  1390                           ;DIO.c: 74:         *((reg_type8_t)(0x0085)) &=(~(DIO_info->pin)) ;
  1391  0775  0873               	movf	DIO_init@DIO_info,w
  1392  0776  3E02               	addlw	2
  1393  0777  0084               	movwf	4
  1394  0778  0900               	comf	0,w
  1395  0779  00FF               	movwf	btemp+1
  1396  077A  087F               	movf	btemp+1,w
  1397  077B  0585               	andwf	5,f	;volatile
  1398                           
  1399                           ;DIO.c: 75:       break;
  1400  077C  2FD3               	goto	l2512
  1401  077D                     l2490:
  1402                           
  1403                           ;DIO.c: 77:         *((reg_type8_t)(0x0086)) &=(~(DIO_info->pin)) ;
  1404  077D  0873               	movf	DIO_init@DIO_info,w
  1405  077E  3E02               	addlw	2
  1406  077F  0084               	movwf	4
  1407  0780  0900               	comf	0,w
  1408  0781  00FF               	movwf	btemp+1
  1409  0782  087F               	movf	btemp+1,w
  1410  0783  0586               	andwf	6,f	;volatile
  1411                           
  1412                           ;DIO.c: 78:       break;
  1413  0784  2FD3               	goto	l2512
  1414  0785                     l2492:
  1415                           
  1416                           ;DIO.c: 80:         *((reg_type8_t)(0x0087)) &=(~(DIO_info->pin)) ;
  1417  0785  0873               	movf	DIO_init@DIO_info,w
  1418  0786  3E02               	addlw	2
  1419  0787  0084               	movwf	4
  1420  0788  0900               	comf	0,w
  1421  0789  00FF               	movwf	btemp+1
  1422  078A  087F               	movf	btemp+1,w
  1423  078B  0587               	andwf	7,f	;volatile
  1424                           
  1425                           ;DIO.c: 81:       break;
  1426  078C  2FD3               	goto	l2512
  1427  078D                     l2494:
  1428                           
  1429                           ;DIO.c: 83:         *((reg_type8_t)(0x0088)) &=(~(DIO_info->pin)) ;
  1430  078D  0873               	movf	DIO_init@DIO_info,w
  1431  078E  3E02               	addlw	2
  1432  078F  0084               	movwf	4
  1433  0790  0900               	comf	0,w
  1434  0791  00FF               	movwf	btemp+1
  1435  0792  087F               	movf	btemp+1,w
  1436  0793  0588               	andwf	8,f	;volatile
  1437                           
  1438                           ;DIO.c: 84:       break;
  1439  0794  2FD3               	goto	l2512
  1440  0795                     l2496:
  1441                           
  1442                           ;DIO.c: 86:         *((reg_type8_t)(0x0089)) &=(~(DIO_info->pin)) ;
  1443  0795  0873               	movf	DIO_init@DIO_info,w
  1444  0796  3E02               	addlw	2
  1445  0797  0084               	movwf	4
  1446  0798  0900               	comf	0,w
  1447  0799  00FF               	movwf	btemp+1
  1448  079A  087F               	movf	btemp+1,w
  1449  079B  0589               	andwf	9,f	;volatile
  1450                           
  1451                           ;DIO.c: 87:       break;
  1452  079C  2FD3               	goto	l2512
  1453  079D                     l2502:
  1454  079D  0873               	movf	DIO_init@DIO_info,w
  1455  079E  0084               	movwf	4
  1456  079F  0800               	movf	0,w
  1457  07A0  00F0               	movwf	??_DIO_init
  1458  07A1  01F1               	clrf	??_DIO_init+1
  1459                           
  1460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1461                           ; Switch size 1, requested type "simple"
  1462                           ; Number of cases is 1, Range of values is 0 to 0
  1463                           ; switch strategies available:
  1464                           ; Name         Instructions Cycles
  1465                           ; simple_byte            4     3 (average)
  1466                           ; direct_byte           11     8 (fixed)
  1467                           ; jumptable            260     6 (fixed)
  1468                           ;	Chosen strategy is simple_byte
  1469  07A2  0871               	movf	??_DIO_init+1,w
  1470  07A3  3A00               	xorlw	0	; case 0
  1471  07A4  1903               	skipnz
  1472  07A5  2FA7               	goto	l3080
  1473  07A6  2F55               	goto	l2482
  1474  07A7                     l3080:
  1475                           
  1476                           ; Switch size 1, requested type "simple"
  1477                           ; Number of cases is 5, Range of values is 0 to 4
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; simple_byte           16     9 (average)
  1481                           ; direct_byte           23     8 (fixed)
  1482                           ; jumptable            260     6 (fixed)
  1483                           ;	Chosen strategy is simple_byte
  1484  07A7  0870               	movf	??_DIO_init,w
  1485  07A8  3A00               	xorlw	0	; case 0
  1486  07A9  1903               	skipnz
  1487  07AA  2F75               	goto	l2488
  1488  07AB  3A01               	xorlw	1	; case 1
  1489  07AC  1903               	skipnz
  1490  07AD  2F7D               	goto	l2490
  1491  07AE  3A03               	xorlw	3	; case 2
  1492  07AF  1903               	skipnz
  1493  07B0  2F85               	goto	l2492
  1494  07B1  3A01               	xorlw	1	; case 3
  1495  07B2  1903               	skipnz
  1496  07B3  2F8D               	goto	l2494
  1497  07B4  3A07               	xorlw	7	; case 4
  1498  07B5  1903               	skipnz
  1499  07B6  2F95               	goto	l2496
  1500  07B7  2F55               	goto	l2482
  1501  07B8                     l2504:
  1502                           
  1503                           ;DIO.c: 94: ret_error +=1 + 18;
  1504  07B8  3013               	movlw	19
  1505  07B9  00FF               	movwf	btemp+1
  1506  07BA  087F               	movf	btemp+1,w
  1507  07BB  07F2               	addwf	DIO_init@ret_error,f
  1508                           
  1509                           ;DIO.c: 95: break;
  1510  07BC  2FD3               	goto	l2512
  1511  07BD                     l2508:
  1512  07BD  0A73               	incf	DIO_init@DIO_info,w
  1513  07BE  0084               	movwf	4
  1514  07BF  0800               	movf	0,w
  1515  07C0  00F0               	movwf	??_DIO_init
  1516  07C1  01F1               	clrf	??_DIO_init+1
  1517                           
  1518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 1, Range of values is 0 to 0
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte            4     3 (average)
  1524                           ; direct_byte           11     8 (fixed)
  1525                           ; jumptable            260     6 (fixed)
  1526                           ;	Chosen strategy is simple_byte
  1527  07C2  0871               	movf	??_DIO_init+1,w
  1528  07C3  3A00               	xorlw	0	; case 0
  1529  07C4  1903               	skipnz
  1530  07C5  2FC7               	goto	l3082
  1531  07C6  2FB8               	goto	l2504
  1532  07C7                     l3082:
  1533                           
  1534                           ; Switch size 1, requested type "simple"
  1535                           ; Number of cases is 2, Range of values is 0 to 255
  1536                           ; switch strategies available:
  1537                           ; Name         Instructions Cycles
  1538                           ; simple_byte            7     4 (average)
  1539                           ; jumptable            260     6 (fixed)
  1540                           ;	Chosen strategy is simple_byte
  1541  07C7  0870               	movf	??_DIO_init,w
  1542  07C8  3A00               	xorlw	0	; case 0
  1543  07C9  1903               	skipnz
  1544  07CA  2F5A               	goto	l2486
  1545  07CB  3AFF               	xorlw	255	; case 255
  1546  07CC  1903               	skipnz
  1547  07CD  2F9D               	goto	l2502
  1548  07CE  2FB8               	goto	l2504
  1549  07CF                     l2510:
  1550                           
  1551                           ;DIO.c: 98: {;DIO.c: 99: ret_error +=1 +16;
  1552  07CF  3011               	movlw	17
  1553  07D0  00FF               	movwf	btemp+1
  1554  07D1  087F               	movf	btemp+1,w
  1555  07D2  07F2               	addwf	DIO_init@ret_error,f
  1556  07D3                     l2512:
  1557                           
  1558                           ;DIO.c: 101: return ret_error;
  1559  07D3  0872               	movf	DIO_init@ret_error,w
  1560  07D4                     l127:
  1561  07D4  0008               	return
  1562  07D5                     __end_of_DIO_init:
  1563                           
  1564                           	psect	text4
  1565  0611                     __ptext4:	
  1566 ;; *************** function _DIO_Write *****************
  1567 ;; Defined at:
  1568 ;;		line 131 in file "DIO.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  GPIO            1    wreg     unsigned char 
  1571 ;;  pins            1    0[COMMON] unsigned char 
  1572 ;;  value           1    1[COMMON] unsigned char 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  GPIO            1    5[COMMON] unsigned char 
  1575 ;;  ret_error       1    4[COMMON] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      unsigned char 
  1578 ;; Registers used:
  1579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         2       0       0       0       0
  1586 ;;      Locals:         2       0       0       0       0
  1587 ;;      Temps:          2       0       0       0       0
  1588 ;;      Totals:         6       0       0       0       0
  1589 ;;Total ram usage:        6 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;;		_timer0_interrupt_ovfRoutine
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function _DIO_Write
  1601  0611                     _DIO_Write:
  1602                           
  1603                           ;incstack = 0
  1604                           ; Regs used in _DIO_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  1605                           ;DIO_Write@GPIO stored from wreg
  1606  0611  00F5               	movwf	DIO_Write@GPIO
  1607  0612                     l1722:
  1608                           
  1609                           ;DIO.c: 131: ERROR_STATUS DIO_Write (uint8_t GPIO, uint8_t pins, uint8_t value);DIO.c: 1
      +                          32: { uint8_t ret_error=0;
  1610  0612  01F4               	clrf	DIO_Write@ret_error
  1611  0613                     l1724:
  1612                           
  1613                           ;DIO.c: 134:   static uint8_t first_powerup = 0;;DIO.c: 135: if (first_powerup == 0) {
  1614  0613  0878               	movf	DIO_Write@first_powerup,w
  1615  0614  1D03               	btfss	3,2
  1616  0615  2E17               	goto	u91
  1617  0616  2E18               	goto	u90
  1618  0617                     u91:
  1619  0617  2ECD               	goto	l1780
  1620  0618                     u90:
  1621  0618  2E2D               	goto	l1740
  1622  0619                     l1728:
  1623                           
  1624                           ;DIO.c: 138:   *((reg_type8_t)(0x0005))=0x00;
  1625  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1626  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1627  061B  0185               	clrf	5	;volatile
  1628                           
  1629                           ;DIO.c: 139:   break;
  1630  061C  2E46               	goto	l1742
  1631  061D                     l1730:
  1632                           
  1633                           ;DIO.c: 141:   *((reg_type8_t)(0x0006))=0x00;
  1634  061D  1283               	bcf	3,5	;RP0=0, select bank0
  1635  061E  1303               	bcf	3,6	;RP1=0, select bank0
  1636  061F  0186               	clrf	6	;volatile
  1637                           
  1638                           ;DIO.c: 142:   break;
  1639  0620  2E46               	goto	l1742
  1640  0621                     l1732:
  1641                           
  1642                           ;DIO.c: 144:   *((reg_type8_t)(0x0007))=0x00;
  1643  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0623  0187               	clrf	7	;volatile
  1646                           
  1647                           ;DIO.c: 145:   break;
  1648  0624  2E46               	goto	l1742
  1649  0625                     l1734:
  1650                           
  1651                           ;DIO.c: 147:   *((reg_type8_t)(0x0008))=0x00;
  1652  0625  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0626  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0627  0188               	clrf	8	;volatile
  1655                           
  1656                           ;DIO.c: 148:   break;
  1657  0628  2E46               	goto	l1742
  1658  0629                     l1736:
  1659                           
  1660                           ;DIO.c: 150:   *((reg_type8_t)(0x0009))=0x00;
  1661  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1662  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1663  062B  0189               	clrf	9	;volatile
  1664                           
  1665                           ;DIO.c: 151:   break;
  1666  062C  2E46               	goto	l1742
  1667  062D                     l1740:
  1668  062D  0875               	movf	DIO_Write@GPIO,w
  1669  062E  00F2               	movwf	??_DIO_Write
  1670  062F  01F3               	clrf	??_DIO_Write+1
  1671                           
  1672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1673                           ; Switch size 1, requested type "simple"
  1674                           ; Number of cases is 1, Range of values is 0 to 0
  1675                           ; switch strategies available:
  1676                           ; Name         Instructions Cycles
  1677                           ; simple_byte            4     3 (average)
  1678                           ; direct_byte           11     8 (fixed)
  1679                           ; jumptable            260     6 (fixed)
  1680                           ;	Chosen strategy is simple_byte
  1681  0630  0873               	movf	??_DIO_Write+1,w
  1682  0631  3A00               	xorlw	0	; case 0
  1683  0632  1903               	skipnz
  1684  0633  2E35               	goto	l3084
  1685  0634  2E46               	goto	l1742
  1686  0635                     l3084:
  1687                           
  1688                           ; Switch size 1, requested type "simple"
  1689                           ; Number of cases is 5, Range of values is 0 to 4
  1690                           ; switch strategies available:
  1691                           ; Name         Instructions Cycles
  1692                           ; simple_byte           16     9 (average)
  1693                           ; direct_byte           23     8 (fixed)
  1694                           ; jumptable            260     6 (fixed)
  1695                           ;	Chosen strategy is simple_byte
  1696  0635  0872               	movf	??_DIO_Write,w
  1697  0636  3A00               	xorlw	0	; case 0
  1698  0637  1903               	skipnz
  1699  0638  2E19               	goto	l1728
  1700  0639  3A01               	xorlw	1	; case 1
  1701  063A  1903               	skipnz
  1702  063B  2E1D               	goto	l1730
  1703  063C  3A03               	xorlw	3	; case 2
  1704  063D  1903               	skipnz
  1705  063E  2E21               	goto	l1732
  1706  063F  3A01               	xorlw	1	; case 3
  1707  0640  1903               	skipnz
  1708  0641  2E25               	goto	l1734
  1709  0642  3A07               	xorlw	7	; case 4
  1710  0643  1903               	skipnz
  1711  0644  2E29               	goto	l1736
  1712  0645  2E46               	goto	l1742
  1713  0646                     l1742:
  1714                           
  1715                           ;DIO.c: 153:   first_powerup++;
  1716  0646  3001               	movlw	1
  1717  0647  00FF               	movwf	btemp+1
  1718  0648  087F               	movf	btemp+1,w
  1719  0649  07F8               	addwf	DIO_Write@first_powerup,f
  1720  064A  2ECD               	goto	l1780
  1721  064B                     l1744:
  1722                           
  1723                           ;DIO.c: 159:       *((reg_type8_t)(0x0005)) |= pins;
  1724  064B  0870               	movf	DIO_Write@pins,w
  1725  064C  00FF               	movwf	btemp+1
  1726  064D  087F               	movf	btemp+1,w
  1727  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1728  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0650  0485               	iorwf	5,f	;volatile
  1730                           
  1731                           ;DIO.c: 160:       break;
  1732  0651  2EDD               	goto	l1782
  1733  0652                     l1746:
  1734                           
  1735                           ;DIO.c: 162:       *((reg_type8_t)(0x0006)) |= pins;
  1736  0652  0870               	movf	DIO_Write@pins,w
  1737  0653  00FF               	movwf	btemp+1
  1738  0654  087F               	movf	btemp+1,w
  1739  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0656  1303               	bcf	3,6	;RP1=0, select bank0
  1741  0657  0486               	iorwf	6,f	;volatile
  1742                           
  1743                           ;DIO.c: 163:       break;
  1744  0658  2EDD               	goto	l1782
  1745  0659                     l1748:
  1746                           
  1747                           ;DIO.c: 165:       *((reg_type8_t)(0x0007)) |= pins;
  1748  0659  0870               	movf	DIO_Write@pins,w
  1749  065A  00FF               	movwf	btemp+1
  1750  065B  087F               	movf	btemp+1,w
  1751  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1752  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1753  065E  0487               	iorwf	7,f	;volatile
  1754                           
  1755                           ;DIO.c: 166:       break;
  1756  065F  2EDD               	goto	l1782
  1757  0660                     l1750:
  1758                           
  1759                           ;DIO.c: 168:       *((reg_type8_t)(0x0008)) |= pins;
  1760  0660  0870               	movf	DIO_Write@pins,w
  1761  0661  00FF               	movwf	btemp+1
  1762  0662  087F               	movf	btemp+1,w
  1763  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0665  0488               	iorwf	8,f	;volatile
  1766                           
  1767                           ;DIO.c: 169:       break;
  1768  0666  2EDD               	goto	l1782
  1769  0667                     l1752:
  1770                           
  1771                           ;DIO.c: 171:       *((reg_type8_t)(0x0009)) |= pins;
  1772  0667  0870               	movf	DIO_Write@pins,w
  1773  0668  00FF               	movwf	btemp+1
  1774  0669  087F               	movf	btemp+1,w
  1775  066A  1283               	bcf	3,5	;RP0=0, select bank0
  1776  066B  1303               	bcf	3,6	;RP1=0, select bank0
  1777  066C  0489               	iorwf	9,f	;volatile
  1778                           
  1779                           ;DIO.c: 172:       break;
  1780  066D  2EDD               	goto	l1782
  1781  066E                     l1754:
  1782                           
  1783                           ;DIO.c: 174:       ret_error +=1 +14;
  1784  066E  300F               	movlw	15
  1785  066F  00FF               	movwf	btemp+1
  1786  0670  087F               	movf	btemp+1,w
  1787  0671  07F4               	addwf	DIO_Write@ret_error,f
  1788                           
  1789                           ;DIO.c: 175:       break;
  1790  0672  2EDD               	goto	l1782
  1791  0673                     l1758:
  1792  0673  0875               	movf	DIO_Write@GPIO,w
  1793  0674  00F2               	movwf	??_DIO_Write
  1794  0675  01F3               	clrf	??_DIO_Write+1
  1795                           
  1796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1797                           ; Switch size 1, requested type "simple"
  1798                           ; Number of cases is 1, Range of values is 0 to 0
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte            4     3 (average)
  1802                           ; direct_byte           11     8 (fixed)
  1803                           ; jumptable            260     6 (fixed)
  1804                           ;	Chosen strategy is simple_byte
  1805  0676  0873               	movf	??_DIO_Write+1,w
  1806  0677  3A00               	xorlw	0	; case 0
  1807  0678  1903               	skipnz
  1808  0679  2E7B               	goto	l3086
  1809  067A  2E6E               	goto	l1754
  1810  067B                     l3086:
  1811                           
  1812                           ; Switch size 1, requested type "simple"
  1813                           ; Number of cases is 5, Range of values is 0 to 4
  1814                           ; switch strategies available:
  1815                           ; Name         Instructions Cycles
  1816                           ; simple_byte           16     9 (average)
  1817                           ; direct_byte           23     8 (fixed)
  1818                           ; jumptable            260     6 (fixed)
  1819                           ;	Chosen strategy is simple_byte
  1820  067B  0872               	movf	??_DIO_Write,w
  1821  067C  3A00               	xorlw	0	; case 0
  1822  067D  1903               	skipnz
  1823  067E  2E4B               	goto	l1744
  1824  067F  3A01               	xorlw	1	; case 1
  1825  0680  1903               	skipnz
  1826  0681  2E52               	goto	l1746
  1827  0682  3A03               	xorlw	3	; case 2
  1828  0683  1903               	skipnz
  1829  0684  2E59               	goto	l1748
  1830  0685  3A01               	xorlw	1	; case 3
  1831  0686  1903               	skipnz
  1832  0687  2E60               	goto	l1750
  1833  0688  3A07               	xorlw	7	; case 4
  1834  0689  1903               	skipnz
  1835  068A  2E67               	goto	l1752
  1836  068B  2E6E               	goto	l1754
  1837  068C                     l1760:
  1838                           
  1839                           ;DIO.c: 182:       *((reg_type8_t)(0x0005)) &= (~pins);
  1840  068C  0970               	comf	DIO_Write@pins,w
  1841  068D  00FF               	movwf	btemp+1
  1842  068E  087F               	movf	btemp+1,w
  1843  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0691  0585               	andwf	5,f	;volatile
  1846                           
  1847                           ;DIO.c: 183:       break;
  1848  0692  2EDD               	goto	l1782
  1849  0693                     l1762:
  1850                           
  1851                           ;DIO.c: 185:       *((reg_type8_t)(0x0006)) &= (~pins);
  1852  0693  0970               	comf	DIO_Write@pins,w
  1853  0694  00FF               	movwf	btemp+1
  1854  0695  087F               	movf	btemp+1,w
  1855  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0698  0586               	andwf	6,f	;volatile
  1858                           
  1859                           ;DIO.c: 186:       break;
  1860  0699  2EDD               	goto	l1782
  1861  069A                     l1764:
  1862                           
  1863                           ;DIO.c: 188:       *((reg_type8_t)(0x0007)) &= (~pins);
  1864  069A  0970               	comf	DIO_Write@pins,w
  1865  069B  00FF               	movwf	btemp+1
  1866  069C  087F               	movf	btemp+1,w
  1867  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1868  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1869  069F  0587               	andwf	7,f	;volatile
  1870                           
  1871                           ;DIO.c: 189:       break;
  1872  06A0  2EDD               	goto	l1782
  1873  06A1                     l1766:
  1874                           
  1875                           ;DIO.c: 191:       *((reg_type8_t)(0x0008)) &= (~pins);
  1876  06A1  0970               	comf	DIO_Write@pins,w
  1877  06A2  00FF               	movwf	btemp+1
  1878  06A3  087F               	movf	btemp+1,w
  1879  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1880  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1881  06A6  0588               	andwf	8,f	;volatile
  1882                           
  1883                           ;DIO.c: 192:       break;
  1884  06A7  2EDD               	goto	l1782
  1885  06A8                     l1768:
  1886                           
  1887                           ;DIO.c: 194:       *((reg_type8_t)(0x0009)) &= (~pins);
  1888  06A8  0970               	comf	DIO_Write@pins,w
  1889  06A9  00FF               	movwf	btemp+1
  1890  06AA  087F               	movf	btemp+1,w
  1891  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1892  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1893  06AD  0589               	andwf	9,f	;volatile
  1894                           
  1895                           ;DIO.c: 195:       break;
  1896  06AE  2EDD               	goto	l1782
  1897  06AF                     l1774:
  1898  06AF  0875               	movf	DIO_Write@GPIO,w
  1899  06B0  00F2               	movwf	??_DIO_Write
  1900  06B1  01F3               	clrf	??_DIO_Write+1
  1901                           
  1902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1903                           ; Switch size 1, requested type "simple"
  1904                           ; Number of cases is 1, Range of values is 0 to 0
  1905                           ; switch strategies available:
  1906                           ; Name         Instructions Cycles
  1907                           ; simple_byte            4     3 (average)
  1908                           ; direct_byte           11     8 (fixed)
  1909                           ; jumptable            260     6 (fixed)
  1910                           ;	Chosen strategy is simple_byte
  1911  06B2  0873               	movf	??_DIO_Write+1,w
  1912  06B3  3A00               	xorlw	0	; case 0
  1913  06B4  1903               	skipnz
  1914  06B5  2EB7               	goto	l3088
  1915  06B6  2E6E               	goto	l1754
  1916  06B7                     l3088:
  1917                           
  1918                           ; Switch size 1, requested type "simple"
  1919                           ; Number of cases is 5, Range of values is 0 to 4
  1920                           ; switch strategies available:
  1921                           ; Name         Instructions Cycles
  1922                           ; simple_byte           16     9 (average)
  1923                           ; direct_byte           23     8 (fixed)
  1924                           ; jumptable            260     6 (fixed)
  1925                           ;	Chosen strategy is simple_byte
  1926  06B7  0872               	movf	??_DIO_Write,w
  1927  06B8  3A00               	xorlw	0	; case 0
  1928  06B9  1903               	skipnz
  1929  06BA  2E8C               	goto	l1760
  1930  06BB  3A01               	xorlw	1	; case 1
  1931  06BC  1903               	skipnz
  1932  06BD  2E93               	goto	l1762
  1933  06BE  3A03               	xorlw	3	; case 2
  1934  06BF  1903               	skipnz
  1935  06C0  2E9A               	goto	l1764
  1936  06C1  3A01               	xorlw	1	; case 3
  1937  06C2  1903               	skipnz
  1938  06C3  2EA1               	goto	l1766
  1939  06C4  3A07               	xorlw	7	; case 4
  1940  06C5  1903               	skipnz
  1941  06C6  2EA8               	goto	l1768
  1942  06C7  2E6E               	goto	l1754
  1943  06C8                     l1776:
  1944                           
  1945                           ;DIO.c: 203: ret_error +=1 +18;
  1946  06C8  3013               	movlw	19
  1947  06C9  00FF               	movwf	btemp+1
  1948  06CA  087F               	movf	btemp+1,w
  1949  06CB  07F4               	addwf	DIO_Write@ret_error,f
  1950                           
  1951                           ;DIO.c: 204:   break;
  1952  06CC  2EDD               	goto	l1782
  1953  06CD                     l1780:
  1954  06CD  0871               	movf	DIO_Write@value,w
  1955  06CE  00F2               	movwf	??_DIO_Write
  1956  06CF  01F3               	clrf	??_DIO_Write+1
  1957                           
  1958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1959                           ; Switch size 1, requested type "simple"
  1960                           ; Number of cases is 1, Range of values is 0 to 0
  1961                           ; switch strategies available:
  1962                           ; Name         Instructions Cycles
  1963                           ; simple_byte            4     3 (average)
  1964                           ; direct_byte           11     8 (fixed)
  1965                           ; jumptable            260     6 (fixed)
  1966                           ;	Chosen strategy is simple_byte
  1967  06D0  0873               	movf	??_DIO_Write+1,w
  1968  06D1  3A00               	xorlw	0	; case 0
  1969  06D2  1903               	skipnz
  1970  06D3  2ED5               	goto	l3090
  1971  06D4  2EC8               	goto	l1776
  1972  06D5                     l3090:
  1973                           
  1974                           ; Switch size 1, requested type "simple"
  1975                           ; Number of cases is 2, Range of values is 0 to 255
  1976                           ; switch strategies available:
  1977                           ; Name         Instructions Cycles
  1978                           ; simple_byte            7     4 (average)
  1979                           ; jumptable            260     6 (fixed)
  1980                           ;	Chosen strategy is simple_byte
  1981  06D5  0872               	movf	??_DIO_Write,w
  1982  06D6  3A00               	xorlw	0	; case 0
  1983  06D7  1903               	skipnz
  1984  06D8  2EAF               	goto	l1774
  1985  06D9  3AFF               	xorlw	255	; case 255
  1986  06DA  1903               	skipnz
  1987  06DB  2E73               	goto	l1758
  1988  06DC  2EC8               	goto	l1776
  1989  06DD                     l1782:
  1990                           
  1991                           ;DIO.c: 206: return ret_error;
  1992  06DD  0874               	movf	DIO_Write@ret_error,w
  1993  06DE                     l161:
  1994  06DE  0008               	return
  1995  06DF                     __end_of_DIO_Write:
  1996  007E                     btemp	set	126	;btemp
  1997  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        19
    BSS         38
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    TIMER0OVF_INT	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    DIO_init@DIO_info	PTR struct DIO_Cfg_s size(1) Largest target is 4
		 -> Dio_configutation_A(BANK0[4]), Dio_configutation_C(BANK0[4]), Dio_configutation_B(BANK0[4]), 

    Timer_Deinit_Configuration2.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Timer_Deinit_Configuration1.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Timer_Deinit_Configuration0.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Timer_Configuration2.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Timer_Configuration1.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Timer_Configuration0.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    S23Timer_cfg_s$Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Timer_Init@Timer_cfg.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Timer_Init@Timer_cfg	PTR struct Timer_cfg_s size(1) Largest target is 5
		 -> Timer_Configuration0(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_DIO_Write
    _main->_Timer_Start

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1967
                          _DIO_Write
                           _DIO_init
                         _Timer_Init
                        _Timer_Start
 ---------------------------------------------------------------------------------
 (1) _Timer_Start                                          6     4      2     122
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Timer_Init                                           4     4      0     255
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DIO_init                                             4     4      0     800
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DIO_Write                                            6     4      2     790
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DIO_Write
   _DIO_init
   _Timer_Init
   _Timer_Start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jul 14 23:37:39 2020

                          pc 0002                           l10 0566                           l44 0610  
                         l56 04E9                           u90 0618                           u91 0617  
                         fsr 0004                          l210 0516                          l211 0525  
                        l214 0540                          l127 07D4                          l161 06DE  
                        u160 06E8                          u161 06E7                          u170 072C  
                        u171 072B                          u180 0529                          u181 0528  
                        u190 0544                          u191 0543                          _ret 0052  
                        fsr0 0004                          indf 0000                         l3060 0581  
                       l2502 079D                         l2510 07CF                         l3070 05DF  
                       l3062 0594                         l1630 055D                         l2504 07B8  
                       l3080 07A7                         l2512 07D3                         l3072 05F1  
                       l3064 05A7                         l1640 0576                         l1632 055F  
                       l3090 06D5                         l1730 061D                         l1722 0612  
                       l3082 07C7                         l2450 06E9                         l2442 06E0  
                       l3074 0604                         l3066 05B9                         l1634 0567  
                       l3058 04DD                         l1810 04D5                         l1802 04C7  
                       l3084 0635                         l1732 0621                         l1740 062D  
                       l1724 0613                         l2508 07BD                         l3076 0708  
                       l2452 06ED                         l2444 06E1                         l1660 05D4  
                       l3068 05CC                         l1652 05AF                         l1644 0589  
                       l1636 056C                         l1812 04E8                         l1804 04C9  
                       l3086 067B                         l1750 0660                         l1734 0625  
                       l1742 0646                         l3078 0764                         l2454 06F1  
                       l2462 06FD                         l2446 06E3                         l1638 0571  
                       l1670 060F                         l1806 04D0                         l2550 0529  
                       l3088 06B7                         l1760 068C                         l1752 0667  
                       l1744 064B                         l1736 0629                         l1728 0619  
                       l2480 074D                         l2472 072D                         l2456 06F5  
                       l2464 0719                         l1664 05E7                         l1656 05C1  
                       l1648 059C                         l2552 053C                         l1762 0693  
                       l1754 066E                         l1746 0652                         l2490 077D  
                       l2482 0755                         l2474 0735                         l2458 06F9  
                       l2466 071D                         l2554 0544                         l1764 069A  
                       l1748 0659                         l1780 06CD                         l2492 0785  
                       l2476 073D                         l2468 0727                         l1668 05F9  
                       l2556 0554                         l2548 04EA                         l1774 06AF  
                       l1766 06A1                         l1758 0673                         l1782 06DD  
                       l2494 078D                         l2486 075A                         l2478 0745  
                       l1776 06C8                         l1768 06A8                         l2496 0795  
                       l2488 0775  _timer0_interrupt_ovfRoutine 0000           __size_of_DIO_Write 00CE  
                       _data 0077                         _main 04EA                         btemp 007E  
                       start 0000  _Timer_Deinit_Configuration0 002A  _Timer_Deinit_Configuration1 0025  
_Timer_Deinit_Configuration2 0020             __end_of_DIO_init 07D5                        ?_main 0070  
              DIO_Write@GPIO 0075                DIO_Write@pins 0070                        _data2 0076  
         DIO_Write@ret_error 0074                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 07D5                 __end_of_main 055C  
                     ??_main 0076            __end_of_DIO_Write 06DF               DIO_Write@value 0071  
     DIO_Write@first_powerup 0078                   _Timer_Init 055C                ??_Timer_Start 0072  
               __pdataCOMMON 007B      __end_of__initialization 07FC                    ?_DIO_init 0070  
       Timer_Start@ret_error 0075               __pcstackCOMMON 0070                 __pidataBANK0 04A2  
        __end_of_Timer_Start 04EA          Timer_Init@Timer_cfg 0073                   __pbssBANK0 0020  
                 ??_DIO_init 0070                   __pmaintext 04EA                  ?_Timer_Init 0070  
 DIO_init@first_powerup_init 0079                      __ptext1 04C6                      __ptext2 055C  
                    __ptext3 06DF                      __ptext4 0611                  _Timer_Start 04C6  
                    _is_init 007A          Timer_Init@ret_error 0072                    _DIO_Write 0611  
                    clrloop0 049B         end_of_initialization 07FC          __size_of_Timer_Init 00B5  
                 ?_DIO_Write 0070            __size_of_DIO_init 00F6                _TIMER0OVF_INT 007B  
              __pidataCOMMON 0498       Timer_Start@Timer_CH_NO 0074          start_initialization 07D5  
     Timer_Start@Timer_Count 0070            DIO_init@ret_error 0072                    _Prescaler 007C  
                 init_fetch0 04B3          _Dio_configutation_A 0046          _Dio_configutation_B 004E  
        _Dio_configutation_C 004A          _Dio_configutation_D 003D          _Dio_configutation_E 0039  
               ??_Timer_Init 0070                  __pdataBANK0 0041                  __pbssCOMMON 0076  
                  ___latbits 0002                  ??_DIO_Write 0072           __end_of_Timer_Init 0611  
           DIO_init@DIO_info 0073                    __pnvBANK0 0052         _Timer_Configuration0 0041  
       _Timer_Configuration1 0034         _Timer_Configuration2 002F                 ?_Timer_Start 0070  
                   _DIO_init 06DF                    clear_ram0 049A                __size_of_main 0072  
       __size_of_Timer_Start 0024                     init_ram0 04B7  
