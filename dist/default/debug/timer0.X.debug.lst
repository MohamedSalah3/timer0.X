

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jul 14 21:55:42 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118                           
   119 ;; Function _timer0_interrupt_ovfRoutine is unused but had its address taken
   120  0000                     
   121                           	psect	idataCOMMON
   122  03A9                     __pidataCOMMON:
   123                           
   124                           ;initializer for _Prescaler
   125  03A9  34FF               	retlw	255
   126                           
   127                           	psect	idataBANK0
   128  03B2                     __pidataBANK0:
   129                           
   130                           ;initializer for _Timer_Configuration0
   131  03B2  3400               	retlw	0
   132  03B3  34C5               	retlw	197
   133  03B4  34DF               	retlw	223
   134  03B5  3400               	retlw	0
   135  03B6  3400               	retlw	0
   136                           
   137                           ;initializer for _Dio_configutation_A
   138  03B7  3400               	retlw	0
   139  03B8  3420               	retlw	32
   140  03B9  3400               	retlw	0
   141  03BA  34FF               	retlw	255
   142                           
   143                           ;initializer for _Dio_configutation_C
   144  03BB  3402               	retlw	2
   145  03BC  34FF               	retlw	255
   146  03BD  3400               	retlw	0
   147  03BE  3400               	retlw	0
   148                           
   149                           ;initializer for _Dio_configutation_B
   150  03BF  3401               	retlw	1
   151  03C0  34FF               	retlw	255
   152  03C1  34FF               	retlw	255
   153  03C2  3400               	retlw	0
   154                           
   155                           	psect	nvBANK0
   156  0052                     __pnvBANK0:
   157  0052                     _ret:
   158  0052                     	ds	1
   159                           
   160                           	psect	cinit
   161  07DA                     start_initialization:	
   162                           ; #config settings
   163                           
   164  07DA                     __initialization:
   165                           
   166                           ; Initialize objects allocated to BANK0
   167  07DA  1383               	bcf	3,7	;select IRP bank0
   168  07DB  3052               	movlw	low (__pdataBANK0+17)
   169  07DC  00FD               	movwf	btemp+-1
   170  07DD  3003               	movlw	high __pidataBANK0
   171  07DE  00FE               	movwf	btemp
   172  07DF  30B2               	movlw	low __pidataBANK0
   173  07E0  00FF               	movwf	btemp+1
   174  07E1  3041               	movlw	low __pdataBANK0
   175  07E2  0084               	movwf	4
   176  07E3  120A  118A  23C7  120A  118A  	fcall	init_ram0
   177                           
   178                           ; Initialize objects allocated to COMMON
   179  07E8  120A  118A  23A9  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   180  07ED  00FC               	movwf	__pdataCOMMON& (0+127)
   181                           
   182                           ; Clear objects allocated to BANK0
   183  07EE  3020               	movlw	low __pbssBANK0
   184  07EF  0084               	movwf	4
   185  07F0  3041               	movlw	low (__pbssBANK0+33)
   186  07F1  120A  118A  23AA  120A  118A  	fcall	clear_ram0
   187                           
   188                           ; Clear objects allocated to COMMON
   189  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   190  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   191  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   192  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   193  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   194  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   195  07FC                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198  07FC                     __end_of__initialization:
   199  07FC  0183               	clrf	3
   200  07FD  120A  118A  2CA5   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMMON
   203  0070                     __pbssCOMMON:
   204  0070                     DIO_Write@first_powerup:
   205  0070                     	ds	1
   206  0071                     DIO_init@first_powerup_init:
   207  0071                     	ds	1
   208  0072                     _is_init:
   209  0072                     	ds	1
   210  0073                     _TIMER0OVF_INT:
   211  0073                     	ds	1
   212  0074                     _data2:
   213  0074                     	ds	1
   214  0075                     _data:
   215  0075                     	ds	1
   216                           
   217                           	psect	dataCOMMON
   218  007C                     __pdataCOMMON:
   219  007C                     _Prescaler:
   220  007C                     	ds	1
   221                           
   222                           	psect	bssBANK0
   223  0020                     __pbssBANK0:
   224  0020                     _Timer_Deinit_Configuration2:
   225  0020                     	ds	5
   226  0025                     _Timer_Deinit_Configuration1:
   227  0025                     	ds	5
   228  002A                     _Timer_Deinit_Configuration0:
   229  002A                     	ds	5
   230  002F                     _Timer_Configuration2:
   231  002F                     	ds	5
   232  0034                     _Timer_Configuration1:
   233  0034                     	ds	5
   234  0039                     _Dio_configutation_E:
   235  0039                     	ds	4
   236  003D                     _Dio_configutation_D:
   237  003D                     	ds	4
   238                           
   239                           	psect	dataBANK0
   240  0041                     __pdataBANK0:
   241  0041                     _Timer_Configuration0:
   242  0041                     	ds	5
   243  0046                     _Dio_configutation_A:
   244  0046                     	ds	4
   245  004A                     _Dio_configutation_C:
   246  004A                     	ds	4
   247  004E                     _Dio_configutation_B:
   248  004E                     	ds	4
   249                           
   250                           	psect	inittext
   251  03C3                     init_fetch0:	
   252                           ;	Called with low address in FSR and high address in W
   253                           
   254  03C3  087E               	movf	btemp,w
   255  03C4  008A               	movwf	10
   256  03C5  087F               	movf	btemp+1,w
   257  03C6  0082               	movwf	2
   258  03C7                     init_ram0:	
   259                           ;Called with:
   260                           ;	high address of idata address in btemp 
   261                           ;	low address of idata address in btemp+1 
   262                           ;	low address of data in FSR
   263                           ;	high address + 1 of data in btemp-1
   264                           
   265  03C7  120A  118A  23C3  120A  118A  	fcall	init_fetch0
   266  03CC  0080               	movwf	0
   267  03CD  0A84               	incf	4,f
   268  03CE  0804               	movf	4,w
   269  03CF  067D               	xorwf	btemp+-1,w
   270  03D0  1903               	btfsc	3,2
   271  03D1  3400               	retlw	0
   272  03D2  0AFF               	incf	btemp+1,f
   273  03D3  1903               	btfsc	3,2
   274  03D4  0AFE               	incf	btemp,f
   275  03D5  2BC7               	goto	init_ram0
   276                           
   277                           	psect	clrtext
   278  03AA                     clear_ram0:	
   279                           ;	Called with FSR containing the base address, and
   280                           ;	W with the last address+1
   281                           
   282  03AA  0064               	clrwdt	;clear the watchdog before getting into this loop
   283  03AB                     clrloop0:
   284  03AB  0180               	clrf	0	;clear RAM location pointed to by FSR
   285  03AC  0A84               	incf	4,f	;increment pointer
   286  03AD  0604               	xorwf	4,w	;XOR with final address
   287  03AE  1903               	btfsc	3,2	;have we reached the end yet?
   288  03AF  3400               	retlw	0	;all done for this memory range, return
   289  03B0  0604               	xorwf	4,w	;XOR again to restore value
   290  03B1  2BAB               	goto	clrloop0	;do the next byte
   291                           
   292                           	psect	cstackCOMMON
   293  0076                     __pcstackCOMMON:
   294  0076                     ?_DIO_Write:
   295  0076                     ?_Timer_Init:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0076                     ??_Timer_Init:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0076                     ?_Timer_Start:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0076                     ?_DIO_init:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0076                     ??_DIO_init:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0076                     ?_DIO_Read:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0076                     ?_DIO_Toggle:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0076                     ?_main:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0076                     DIO_Write@pins:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0076                     DIO_Read@pins:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0076                     DIO_Toggle@pins:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0076                     Timer_Start@Timer_Count:	
   329                           ; 1 bytes @ 0x0
   330                           
   331                           
   332                           ; 2 bytes @ 0x0
   333  0076                     	ds	1
   334  0077                     ??_DIO_Toggle:
   335  0077                     DIO_Write@value:	
   336                           ; 1 bytes @ 0x1
   337                           
   338  0077                     DIO_Read@data:	
   339                           ; 1 bytes @ 0x1
   340                           
   341                           
   342                           ; 1 bytes @ 0x1
   343  0077                     	ds	1
   344  0078                     ??_DIO_Write:
   345  0078                     ??_Timer_Start:	
   346                           ; 1 bytes @ 0x2
   347                           
   348  0078                     ??_DIO_Read:	
   349                           ; 1 bytes @ 0x2
   350                           
   351  0078                     Timer_Init@ret_error:	
   352                           ; 1 bytes @ 0x2
   353                           
   354  0078                     DIO_init@ret_error:	
   355                           ; 1 bytes @ 0x2
   356                           
   357                           
   358                           ; 1 bytes @ 0x2
   359  0078                     	ds	1
   360  0079                     Timer_Init@Timer_cfg:
   361  0079                     DIO_init@DIO_info:	
   362                           ; 1 bytes @ 0x3
   363                           
   364  0079                     DIO_Toggle@GPIO:	
   365                           ; 1 bytes @ 0x3
   366                           
   367                           
   368                           ; 1 bytes @ 0x3
   369  0079                     	ds	1
   370  007A                     Timer_Start@Timer_CH_NO:
   371  007A                     DIO_Write@ret_error:	
   372                           ; 1 bytes @ 0x4
   373                           
   374  007A                     DIO_Read@GPIO:	
   375                           ; 1 bytes @ 0x4
   376                           
   377  007A                     DIO_Toggle@ret_error:	
   378                           ; 1 bytes @ 0x4
   379                           
   380                           
   381                           ; 1 bytes @ 0x4
   382  007A                     	ds	1
   383  007B                     Timer_Start@ret_error:
   384  007B                     DIO_Write@GPIO:	
   385                           ; 1 bytes @ 0x5
   386                           
   387  007B                     DIO_Read@ret_error:	
   388                           ; 1 bytes @ 0x5
   389                           
   390                           
   391                           ; 1 bytes @ 0x5
   392  007B                     	ds	1
   393  007C                     ??_main:
   394                           
   395                           	psect	maintext
   396  04A5                     __pmaintext:	
   397                           ; 1 bytes @ 0x6
   398 ;;
   399 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   400 ;;
   401 ;; *************** function _main *****************
   402 ;; Defined at:
   403 ;;		line 13 in file "main.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : B00/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels required when called:    1
   423 ;; This function calls:
   424 ;;		_DIO_Read
   425 ;;		_DIO_Toggle
   426 ;;		_DIO_Write
   427 ;;		_DIO_init
   428 ;;		_Timer_Init
   429 ;;		_Timer_Start
   430 ;; This function is called by:
   431 ;;		Startup code after reset
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           
   436                           ;psect for function _main
   437  04A5                     _main:
   438  04A5                     l2726:	
   439                           ;incstack = 0
   440                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   441                           
   442                           
   443                           ;main.c: 15:     ret=Timer_Init(&Timer_Configuration0);
   444  04A5  3041               	movlw	(low (_Timer_Configuration0| 0))& (0+255)
   445  04A6  120A  118A  255A  120A  118A  	fcall	_Timer_Init
   446  04AB  00FF               	movwf	btemp+1
   447  04AC  087F               	movf	btemp+1,w
   448  04AD  1283               	bcf	3,5	;RP0=0, select bank0
   449  04AE  1303               	bcf	3,6	;RP1=0, select bank0
   450  04AF  00D2               	movwf	_ret
   451                           
   452                           ;main.c: 16:    ret= DIO_init (&Dio_configutation_B);
   453  04B0  304E               	movlw	(low (_Dio_configutation_B| 0))& (0+255)
   454  04B1  120A  118A  26E4  120A  118A  	fcall	_DIO_init
   455  04B6  00FF               	movwf	btemp+1
   456  04B7  087F               	movf	btemp+1,w
   457  04B8  1283               	bcf	3,5	;RP0=0, select bank0
   458  04B9  1303               	bcf	3,6	;RP1=0, select bank0
   459  04BA  00D2               	movwf	_ret
   460                           
   461                           ;main.c: 17:    ret= DIO_init (&Dio_configutation_C);
   462  04BB  304A               	movlw	(low (_Dio_configutation_C| 0))& (0+255)
   463  04BC  120A  118A  26E4  120A  118A  	fcall	_DIO_init
   464  04C1  00FF               	movwf	btemp+1
   465  04C2  087F               	movf	btemp+1,w
   466  04C3  1283               	bcf	3,5	;RP0=0, select bank0
   467  04C4  1303               	bcf	3,6	;RP1=0, select bank0
   468  04C5  00D2               	movwf	_ret
   469                           
   470                           ;main.c: 18:    ret= DIO_init (&Dio_configutation_A);
   471  04C6  3046               	movlw	(low (_Dio_configutation_A| 0))& (0+255)
   472  04C7  120A  118A  26E4  120A  118A  	fcall	_DIO_init
   473  04CC  00FF               	movwf	btemp+1
   474  04CD  087F               	movf	btemp+1,w
   475  04CE  1283               	bcf	3,5	;RP0=0, select bank0
   476  04CF  1303               	bcf	3,6	;RP1=0, select bank0
   477  04D0  00D2               	movwf	_ret
   478  04D1                     l219:	
   479                           ;main.c: 20:    while (1)
   480                           
   481                           
   482                           ;main.c: 21:     {;main.c: 22:       ret=Timer_Start(0,250);
   483  04D1  30FA               	movlw	250
   484  04D2  00F6               	movwf	Timer_Start@Timer_Count
   485  04D3  3000               	movlw	0
   486  04D4  00F7               	movwf	Timer_Start@Timer_Count+1
   487  04D5  3000               	movlw	0
   488  04D6  120A  118A  23D6  120A  118A  	fcall	_Timer_Start
   489  04DB  00FF               	movwf	btemp+1
   490  04DC  087F               	movf	btemp+1,w
   491  04DD  1283               	bcf	3,5	;RP0=0, select bank0
   492  04DE  1303               	bcf	3,6	;RP1=0, select bank0
   493  04DF  00D2               	movwf	_ret
   494                           
   495                           ;main.c: 23: while ((*((reg_type8_t)(0x000B)) & 0x04)==0){DIO_Write(1,0x20|0x10,0xFF);}
   496  04E0  2CEF               	goto	l2730
   497  04E1                     l2728:
   498  04E1  3030               	movlw	48
   499  04E2  00FF               	movwf	btemp+1
   500  04E3  087F               	movf	btemp+1,w
   501  04E4  00F6               	movwf	DIO_Write@pins
   502  04E5  30FF               	movlw	255
   503  04E6  00FF               	movwf	btemp+1
   504  04E7  087F               	movf	btemp+1,w
   505  04E8  00F7               	movwf	DIO_Write@value
   506  04E9  3001               	movlw	1
   507  04EA  120A  118A  2616  120A  118A  	fcall	_DIO_Write
   508  04EF                     l2730:
   509  04EF  1D0B               	btfss	11,2	;volatile
   510  04F0  2CF2               	goto	u241
   511  04F1  2CF3               	goto	u240
   512  04F2                     u241:
   513  04F2  2CE1               	goto	l2728
   514  04F3                     u240:
   515  04F3                     l2732:
   516                           
   517                           ;main.c: 24: ret=DIO_Toggle(1,0x20|0x10);
   518  04F3  3030               	movlw	48
   519  04F4  00FF               	movwf	btemp+1
   520  04F5  087F               	movf	btemp+1,w
   521  04F6  00F6               	movwf	DIO_Toggle@pins
   522  04F7  3001               	movlw	1
   523  04F8  120A  118A  2409  120A  118A  	fcall	_DIO_Toggle
   524  04FD  00FF               	movwf	btemp+1
   525  04FE  087F               	movf	btemp+1,w
   526  04FF  1283               	bcf	3,5	;RP0=0, select bank0
   527  0500  1303               	bcf	3,6	;RP1=0, select bank0
   528  0501  00D2               	movwf	_ret
   529                           
   530                           ;main.c: 28:     ret=DIO_Read (2,0x10, &data);
   531  0502  3010               	movlw	16
   532  0503  00FF               	movwf	btemp+1
   533  0504  087F               	movf	btemp+1,w
   534  0505  00F6               	movwf	DIO_Read@pins
   535  0506  3075               	movlw	(low (_data| 0))& (0+255)
   536  0507  00FF               	movwf	btemp+1
   537  0508  087F               	movf	btemp+1,w
   538  0509  00F7               	movwf	DIO_Read@data
   539  050A  3002               	movlw	2
   540  050B  120A  118A  2445  120A  118A  	fcall	_DIO_Read
   541  0510  00FF               	movwf	btemp+1
   542  0511  087F               	movf	btemp+1,w
   543  0512  1283               	bcf	3,5	;RP0=0, select bank0
   544  0513  1303               	bcf	3,6	;RP1=0, select bank0
   545  0514  00D2               	movwf	_ret
   546                           
   547                           ;main.c: 29:     ret=DIO_Read (0,0x20, &data2);
   548  0515  3020               	movlw	32
   549  0516  00FF               	movwf	btemp+1
   550  0517  087F               	movf	btemp+1,w
   551  0518  00F6               	movwf	DIO_Read@pins
   552  0519  3074               	movlw	(low (_data2| 0))& (0+255)
   553  051A  00FF               	movwf	btemp+1
   554  051B  087F               	movf	btemp+1,w
   555  051C  00F7               	movwf	DIO_Read@data
   556  051D  3000               	movlw	0
   557  051E  120A  118A  2445  120A  118A  	fcall	_DIO_Read
   558  0523  00FF               	movwf	btemp+1
   559  0524  087F               	movf	btemp+1,w
   560  0525  1283               	bcf	3,5	;RP0=0, select bank0
   561  0526  1303               	bcf	3,6	;RP1=0, select bank0
   562  0527  00D2               	movwf	_ret
   563  0528                     l2734:
   564                           
   565                           ;main.c: 30:     if ((data == 1) &&(data2 == 1)) {
   566  0528  0375               	decf	_data,w
   567  0529  1D03               	btfss	3,2
   568  052A  2D2C               	goto	u251
   569  052B  2D2D               	goto	u250
   570  052C                     u251:
   571  052C  2D46               	goto	l2740
   572  052D                     u250:
   573  052D                     l2736:
   574  052D  0374               	decf	_data2,w
   575  052E  1D03               	btfss	3,2
   576  052F  2D31               	goto	u261
   577  0530  2D32               	goto	u260
   578  0531                     u261:
   579  0531  2D46               	goto	l2740
   580  0532                     u260:
   581  0532                     l2738:
   582                           
   583                           ;main.c: 31:     ret = DIO_Write (1,0x04|0x08,0xFF);
   584  0532  300C               	movlw	12
   585  0533  00FF               	movwf	btemp+1
   586  0534  087F               	movf	btemp+1,w
   587  0535  00F6               	movwf	DIO_Write@pins
   588  0536  30FF               	movlw	255
   589  0537  00FF               	movwf	btemp+1
   590  0538  087F               	movf	btemp+1,w
   591  0539  00F7               	movwf	DIO_Write@value
   592  053A  3001               	movlw	1
   593  053B  120A  118A  2616  120A  118A  	fcall	_DIO_Write
   594  0540  00FF               	movwf	btemp+1
   595  0541  087F               	movf	btemp+1,w
   596  0542  1283               	bcf	3,5	;RP0=0, select bank0
   597  0543  1303               	bcf	3,6	;RP1=0, select bank0
   598  0544  00D2               	movwf	_ret
   599                           
   600                           ;main.c: 32:     }else{
   601  0545  2CD1               	goto	l219
   602  0546                     l2740:
   603                           
   604                           ;main.c: 33:       ret = DIO_Write (1,0x04|0x08,0);
   605  0546  300C               	movlw	12
   606  0547  00FF               	movwf	btemp+1
   607  0548  087F               	movf	btemp+1,w
   608  0549  00F6               	movwf	DIO_Write@pins
   609  054A  01F7               	clrf	DIO_Write@value
   610  054B  3001               	movlw	1
   611  054C  120A  118A  2616  120A  118A  	fcall	_DIO_Write
   612  0551  00FF               	movwf	btemp+1
   613  0552  087F               	movf	btemp+1,w
   614  0553  1283               	bcf	3,5	;RP0=0, select bank0
   615  0554  1303               	bcf	3,6	;RP1=0, select bank0
   616  0555  00D2               	movwf	_ret
   617  0556  2CD1               	goto	l219
   618  0557  120A  118A  2800   	ljmp	start
   619  055A                     __end_of_main:
   620                           
   621                           	psect	text1
   622  03D6                     __ptext1:	
   623 ;; *************** function _Timer_Start *****************
   624 ;; Defined at:
   625 ;;		line 129 in file "timer.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  Timer_CH_NO     1    wreg     unsigned char 
   628 ;;  Timer_Count     2    0[COMMON] unsigned int 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  Timer_CH_NO     1    4[COMMON] unsigned char 
   631 ;;  ret_error       1    5[COMMON] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      unsigned char 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         2       0       0       0       0
   642 ;;      Locals:         2       0       0       0       0
   643 ;;      Temps:          2       0       0       0       0
   644 ;;      Totals:         6       0       0       0       0
   645 ;;Total ram usage:        6 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _Timer_Start
   656  03D6                     _Timer_Start:
   657                           
   658                           ;incstack = 0
   659                           ; Regs used in _Timer_Start: [wreg-fsr0h+status,2+status,0+btemp+1]
   660                           ;Timer_Start@Timer_CH_NO stored from wreg
   661  03D6  00FA               	movwf	Timer_Start@Timer_CH_NO
   662  03D7                     l1874:
   663                           
   664                           ;timer.c: 129: ERROR_STATUS Timer_Start(uint8_t Timer_CH_NO, uint16_t Timer_Count);timer
      +                          .c: 130: {;timer.c: 131:   uint8_t ret_error = 0;
   665  03D7  01FB               	clrf	Timer_Start@ret_error
   666                           
   667                           ;timer.c: 132:   switch (Timer_CH_NO) {
   668  03D8  2BF4               	goto	l1886
   669  03D9                     l1876:
   670                           
   671                           ;timer.c: 136:     *((reg_type8_t)(0x0081)) = Prescaler;
   672  03D9  087C               	movf	_Prescaler,w
   673  03DA  00FF               	movwf	btemp+1
   674  03DB  087F               	movf	btemp+1,w
   675  03DC  1683               	bsf	3,5	;RP0=1, select bank1
   676  03DD  1303               	bcf	3,6	;RP1=0, select bank1
   677  03DE  0081               	movwf	1	;volatile
   678  03DF                     l1878:
   679                           
   680                           ;timer.c: 137:     if (Timer_Count <= 255) {
   681  03DF  3001               	movlw	1
   682  03E0  0277               	subwf	Timer_Start@Timer_Count+1,w
   683  03E1  3000               	movlw	0
   684  03E2  1903               	skipnz
   685  03E3  0276               	subwf	Timer_Start@Timer_Count,w
   686  03E4  1803               	skipnc
   687  03E5  2BE7               	goto	u131
   688  03E6  2BE8               	goto	u130
   689  03E7                     u131:
   690  03E7  2C07               	goto	l1888
   691  03E8                     u130:
   692  03E8                     l1880:
   693                           
   694                           ;timer.c: 138:     *((reg_type8_t)(0x0001)) = 255- Timer_Count;
   695  03E8  0976               	comf	Timer_Start@Timer_Count,w
   696  03E9  00FF               	movwf	btemp+1
   697  03EA  087F               	movf	btemp+1,w
   698  03EB  1283               	bcf	3,5	;RP0=0, select bank0
   699  03EC  1303               	bcf	3,6	;RP1=0, select bank0
   700  03ED  0081               	movwf	1	;volatile
   701  03EE  2C07               	goto	l1888
   702  03EF                     l1882:
   703                           
   704                           ;timer.c: 156:     ret_error += 1 +26;
   705  03EF  301B               	movlw	27
   706  03F0  00FF               	movwf	btemp+1
   707  03F1  087F               	movf	btemp+1,w
   708  03F2  07FB               	addwf	Timer_Start@ret_error,f
   709                           
   710                           ;timer.c: 157:     break;
   711  03F3  2C07               	goto	l1888
   712  03F4                     l1886:
   713  03F4  087A               	movf	Timer_Start@Timer_CH_NO,w
   714  03F5  00F8               	movwf	??_Timer_Start
   715  03F6  01F9               	clrf	??_Timer_Start+1
   716                           
   717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   718                           ; Switch size 1, requested type "simple"
   719                           ; Number of cases is 1, Range of values is 0 to 0
   720                           ; switch strategies available:
   721                           ; Name         Instructions Cycles
   722                           ; simple_byte            4     3 (average)
   723                           ; direct_byte           11     8 (fixed)
   724                           ; jumptable            260     6 (fixed)
   725                           ;	Chosen strategy is simple_byte
   726  03F7  0879               	movf	??_Timer_Start+1,w
   727  03F8  3A00               	xorlw	0	; case 0
   728  03F9  1903               	skipnz
   729  03FA  2BFC               	goto	l3282
   730  03FB  2BEF               	goto	l1882
   731  03FC                     l3282:
   732                           
   733                           ; Switch size 1, requested type "simple"
   734                           ; Number of cases is 3, Range of values is 0 to 2
   735                           ; switch strategies available:
   736                           ; Name         Instructions Cycles
   737                           ; simple_byte           10     6 (average)
   738                           ; direct_byte           17     8 (fixed)
   739                           ; jumptable            260     6 (fixed)
   740                           ;	Chosen strategy is simple_byte
   741  03FC  0878               	movf	??_Timer_Start,w
   742  03FD  3A00               	xorlw	0	; case 0
   743  03FE  1903               	skipnz
   744  03FF  2BD9               	goto	l1876
   745  0400  3A01               	xorlw	1	; case 1
   746  0401  1903               	skipnz
   747  0402  2C07               	goto	l1888
   748  0403  3A03               	xorlw	3	; case 2
   749  0404  1903               	skipnz
   750  0405  2C07               	goto	l1888
   751  0406  2BEF               	goto	l1882
   752  0407                     l1888:
   753                           
   754                           ;timer.c: 161:   return ret_error;
   755  0407  087B               	movf	Timer_Start@ret_error,w
   756  0408                     l59:
   757  0408  0008               	return
   758  0409                     __end_of_Timer_Start:
   759                           
   760                           	psect	text2
   761  055A                     __ptext2:	
   762 ;; *************** function _Timer_Init *****************
   763 ;; Defined at:
   764 ;;		line 15 in file "timer.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  Timer_cfg       1    wreg     PTR struct Timer_cfg_s
   767 ;;		 -> Timer_Configuration0(5), 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  Timer_cfg       1    3[COMMON] PTR struct Timer_cfg_s
   770 ;;		 -> Timer_Configuration0(5), 
   771 ;;  ret_error       1    2[COMMON] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      unsigned char 
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         2       0       0       0       0
   783 ;;      Temps:          2       0       0       0       0
   784 ;;      Totals:         4       0       0       0       0
   785 ;;Total ram usage:        4 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function _Timer_Init
   796  055A                     _Timer_Init:
   797                           
   798                           ;incstack = 0
   799                           ; Regs used in _Timer_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
   800                           ;Timer_Init@Timer_cfg stored from wreg
   801  055A  00F9               	movwf	Timer_Init@Timer_cfg
   802  055B                     l1700:
   803                           
   804                           ;timer.c: 15: ERROR_STATUS Timer_Init(Timer_cfg_s* Timer_cfg);timer.c: 16: {;timer.c: 17
      +                          : uint8_t ret_error = 0;
   805  055B  01F8               	clrf	Timer_Init@ret_error
   806                           
   807                           ;timer.c: 19: switch (Timer_cfg->Timer_CH_NO)
   808  055C  2DFE               	goto	l1740
   809  055D                     l1702:
   810                           
   811                           ;timer.c: 22:     Prescaler &= (Timer_cfg -> Timer_Mode);
   812  055D  0A79               	incf	Timer_Init@Timer_cfg,w
   813  055E  0084               	movwf	4
   814  055F  0800               	movf	0,w
   815  0560  00FF               	movwf	btemp+1
   816  0561  087F               	movf	btemp+1,w
   817  0562  05FC               	andwf	_Prescaler,f
   818                           
   819                           ;timer.c: 23:         switch (Timer_cfg->Timer_Polling_Or_Interrupt)
   820  0563  2D7B               	goto	l1712
   821  0564                     l12:	
   822                           ;timer.c: 24:         {;timer.c: 25:             case 0xA0:
   823                           
   824                           
   825                           ;timer.c: 26:             *((reg_type8_t)(0x000B)) |= 0x80;
   826  0564  178B               	bsf	11,7	;volatile
   827  0565                     l1704:
   828                           
   829                           ;timer.c: 27:             *((reg_type8_t)(0x000B)) |=0xA0;
   830  0565  30A0               	movlw	160
   831  0566  00FF               	movwf	btemp+1
   832  0567  087F               	movf	btemp+1,w
   833  0568  048B               	iorwf	11,f	;volatile
   834  0569                     l1706:
   835                           
   836                           ;timer.c: 28:             TIMER0OVF_INT = ( Timer_cfg -> Timer_Cbk_ptr);
   837  0569  0879               	movf	Timer_Init@Timer_cfg,w
   838  056A  3E04               	addlw	4
   839  056B  0084               	movwf	4
   840  056C  0800               	movf	0,w
   841  056D  00FF               	movwf	btemp+1
   842  056E  087F               	movf	btemp+1,w
   843  056F  00F3               	movwf	_TIMER0OVF_INT
   844                           
   845                           ;timer.c: 29:             break;
   846  0570  2E14               	goto	l1742
   847  0571                     l1708:
   848                           
   849                           ;timer.c: 31:             *((reg_type8_t)(0x000B)) &= 0xDF;
   850  0571  30DF               	movlw	223
   851  0572  00FF               	movwf	btemp+1
   852  0573  087F               	movf	btemp+1,w
   853  0574  058B               	andwf	11,f	;volatile
   854                           
   855                           ;timer.c: 32:             break;
   856  0575  2E14               	goto	l1742
   857  0576                     l1710:
   858                           
   859                           ;timer.c: 34:             ret_error += 1 +24;
   860  0576  3019               	movlw	25
   861  0577  00FF               	movwf	btemp+1
   862  0578  087F               	movf	btemp+1,w
   863  0579  07F8               	addwf	Timer_Init@ret_error,f
   864                           
   865                           ;timer.c: 36:         }
   866  057A  2E14               	goto	l1742
   867  057B                     l1712:
   868  057B  0879               	movf	Timer_Init@Timer_cfg,w
   869  057C  3E02               	addlw	2
   870  057D  0084               	movwf	4
   871  057E  0800               	movf	0,w
   872  057F  00F6               	movwf	??_Timer_Init
   873  0580  01F7               	clrf	??_Timer_Init+1
   874                           
   875                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   876                           ; Switch size 1, requested type "simple"
   877                           ; Number of cases is 1, Range of values is 0 to 0
   878                           ; switch strategies available:
   879                           ; Name         Instructions Cycles
   880                           ; simple_byte            4     3 (average)
   881                           ; direct_byte           11     8 (fixed)
   882                           ; jumptable            260     6 (fixed)
   883                           ;	Chosen strategy is simple_byte
   884  0581  0877               	movf	??_Timer_Init+1,w
   885  0582  3A00               	xorlw	0	; case 0
   886  0583  1903               	skipnz
   887  0584  2D86               	goto	l3284
   888  0585  2D76               	goto	l1710
   889  0586                     l3284:
   890                           
   891                           ; Switch size 1, requested type "simple"
   892                           ; Number of cases is 2, Range of values is 160 to 223
   893                           ; switch strategies available:
   894                           ; Name         Instructions Cycles
   895                           ; simple_byte            7     4 (average)
   896                           ; direct_byte          203    11 (fixed)
   897                           ; jumptable            263     9 (fixed)
   898                           ;	Chosen strategy is simple_byte
   899  0586  0876               	movf	??_Timer_Init,w
   900  0587  3AA0               	xorlw	160	; case 160
   901  0588  1903               	skipnz
   902  0589  2D64               	goto	l12
   903  058A  3A7F               	xorlw	127	; case 223
   904  058B  1903               	skipnz
   905  058C  2D71               	goto	l1708
   906  058D  2D76               	goto	l1710
   907  058E                     l1716:
   908  058E  0879               	movf	Timer_Init@Timer_cfg,w
   909  058F  3E02               	addlw	2
   910  0590  0084               	movwf	4
   911  0591  0800               	movf	0,w
   912  0592  00F6               	movwf	??_Timer_Init
   913  0593  01F7               	clrf	??_Timer_Init+1
   914                           
   915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   916                           ; Switch size 1, requested type "simple"
   917                           ; Number of cases is 1, Range of values is 0 to 0
   918                           ; switch strategies available:
   919                           ; Name         Instructions Cycles
   920                           ; simple_byte            4     3 (average)
   921                           ; direct_byte           11     8 (fixed)
   922                           ; jumptable            260     6 (fixed)
   923                           ;	Chosen strategy is simple_byte
   924  0594  0877               	movf	??_Timer_Init+1,w
   925  0595  3A00               	xorlw	0	; case 0
   926  0596  1903               	skipnz
   927  0597  2D99               	goto	l3286
   928  0598  2E14               	goto	l1742
   929  0599                     l3286:
   930                           
   931                           ; Switch size 1, requested type "simple"
   932                           ; Number of cases is 2, Range of values is 160 to 223
   933                           ; switch strategies available:
   934                           ; Name         Instructions Cycles
   935                           ; simple_byte            7     4 (average)
   936                           ; direct_byte          203    11 (fixed)
   937                           ; jumptable            263     9 (fixed)
   938                           ;	Chosen strategy is simple_byte
   939  0599  0876               	movf	??_Timer_Init,w
   940  059A  3AA0               	xorlw	160	; case 160
   941  059B  1903               	skipnz
   942  059C  2E14               	goto	l1742
   943  059D  3A7F               	xorlw	127	; case 223
   944  059E  1903               	skipnz
   945  059F  2E14               	goto	l1742
   946  05A0  2E14               	goto	l1742
   947  05A1                     l1720:
   948  05A1  0879               	movf	Timer_Init@Timer_cfg,w
   949  05A2  3E02               	addlw	2
   950  05A3  0084               	movwf	4
   951  05A4  0800               	movf	0,w
   952  05A5  00F6               	movwf	??_Timer_Init
   953  05A6  01F7               	clrf	??_Timer_Init+1
   954                           
   955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   956                           ; Switch size 1, requested type "simple"
   957                           ; Number of cases is 1, Range of values is 0 to 0
   958                           ; switch strategies available:
   959                           ; Name         Instructions Cycles
   960                           ; simple_byte            4     3 (average)
   961                           ; direct_byte           11     8 (fixed)
   962                           ; jumptable            260     6 (fixed)
   963                           ;	Chosen strategy is simple_byte
   964  05A7  0877               	movf	??_Timer_Init+1,w
   965  05A8  3A00               	xorlw	0	; case 0
   966  05A9  1903               	skipnz
   967  05AA  2DAC               	goto	l3288
   968  05AB  2E14               	goto	l1742
   969  05AC                     l3288:
   970                           
   971                           ; Switch size 1, requested type "simple"
   972                           ; Number of cases is 2, Range of values is 160 to 223
   973                           ; switch strategies available:
   974                           ; Name         Instructions Cycles
   975                           ; simple_byte            7     4 (average)
   976                           ; direct_byte          203    11 (fixed)
   977                           ; jumptable            263     9 (fixed)
   978                           ;	Chosen strategy is simple_byte
   979  05AC  0876               	movf	??_Timer_Init,w
   980  05AD  3AA0               	xorlw	160	; case 160
   981  05AE  1903               	skipnz
   982  05AF  2E14               	goto	l1742
   983  05B0  3A7F               	xorlw	127	; case 223
   984  05B1  1903               	skipnz
   985  05B2  2E14               	goto	l1742
   986  05B3  2E14               	goto	l1742
   987  05B4                     l1724:
   988  05B4  0A79               	incf	Timer_Init@Timer_cfg,w
   989  05B5  0084               	movwf	4
   990  05B6  0800               	movf	0,w
   991  05B7  00F6               	movwf	??_Timer_Init
   992  05B8  01F7               	clrf	??_Timer_Init+1
   993                           
   994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   995                           ; Switch size 1, requested type "simple"
   996                           ; Number of cases is 1, Range of values is 0 to 0
   997                           ; switch strategies available:
   998                           ; Name         Instructions Cycles
   999                           ; simple_byte            4     3 (average)
  1000                           ; direct_byte           11     8 (fixed)
  1001                           ; jumptable            260     6 (fixed)
  1002                           ;	Chosen strategy is simple_byte
  1003  05B9  0877               	movf	??_Timer_Init+1,w
  1004  05BA  3A00               	xorlw	0	; case 0
  1005  05BB  1903               	skipnz
  1006  05BC  2DBE               	goto	l3290
  1007  05BD  2E14               	goto	l1742
  1008  05BE                     l3290:
  1009                           
  1010                           ; Switch size 1, requested type "simple"
  1011                           ; Number of cases is 2, Range of values is 0 to 1
  1012                           ; switch strategies available:
  1013                           ; Name         Instructions Cycles
  1014                           ; simple_byte            7     4 (average)
  1015                           ; direct_byte           14     8 (fixed)
  1016                           ; jumptable            260     6 (fixed)
  1017                           ;	Chosen strategy is simple_byte
  1018  05BE  0876               	movf	??_Timer_Init,w
  1019  05BF  3A00               	xorlw	0	; case 0
  1020  05C0  1903               	skipnz
  1021  05C1  2D8E               	goto	l1716
  1022  05C2  3A01               	xorlw	1	; case 1
  1023  05C3  1903               	skipnz
  1024  05C4  2DA1               	goto	l1720
  1025  05C5  2E14               	goto	l1742
  1026  05C6                     l1728:
  1027  05C6  0879               	movf	Timer_Init@Timer_cfg,w
  1028  05C7  3E02               	addlw	2
  1029  05C8  0084               	movwf	4
  1030  05C9  0800               	movf	0,w
  1031  05CA  00F6               	movwf	??_Timer_Init
  1032  05CB  01F7               	clrf	??_Timer_Init+1
  1033                           
  1034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1035                           ; Switch size 1, requested type "simple"
  1036                           ; Number of cases is 1, Range of values is 0 to 0
  1037                           ; switch strategies available:
  1038                           ; Name         Instructions Cycles
  1039                           ; simple_byte            4     3 (average)
  1040                           ; direct_byte           11     8 (fixed)
  1041                           ; jumptable            260     6 (fixed)
  1042                           ;	Chosen strategy is simple_byte
  1043  05CC  0877               	movf	??_Timer_Init+1,w
  1044  05CD  3A00               	xorlw	0	; case 0
  1045  05CE  1903               	skipnz
  1046  05CF  2DD1               	goto	l3292
  1047  05D0  2E14               	goto	l1742
  1048  05D1                     l3292:
  1049                           
  1050                           ; Switch size 1, requested type "simple"
  1051                           ; Number of cases is 2, Range of values is 160 to 223
  1052                           ; switch strategies available:
  1053                           ; Name         Instructions Cycles
  1054                           ; simple_byte            7     4 (average)
  1055                           ; direct_byte          203    11 (fixed)
  1056                           ; jumptable            263     9 (fixed)
  1057                           ;	Chosen strategy is simple_byte
  1058  05D1  0876               	movf	??_Timer_Init,w
  1059  05D2  3AA0               	xorlw	160	; case 160
  1060  05D3  1903               	skipnz
  1061  05D4  2E14               	goto	l1742
  1062  05D5  3A7F               	xorlw	127	; case 223
  1063  05D6  1903               	skipnz
  1064  05D7  2E14               	goto	l1742
  1065  05D8  2E14               	goto	l1742
  1066  05D9                     l1732:
  1067  05D9  0879               	movf	Timer_Init@Timer_cfg,w
  1068  05DA  3E02               	addlw	2
  1069  05DB  0084               	movwf	4
  1070  05DC  0800               	movf	0,w
  1071  05DD  00F6               	movwf	??_Timer_Init
  1072  05DE  01F7               	clrf	??_Timer_Init+1
  1073                           
  1074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1075                           ; Switch size 1, requested type "simple"
  1076                           ; Number of cases is 1, Range of values is 0 to 0
  1077                           ; switch strategies available:
  1078                           ; Name         Instructions Cycles
  1079                           ; simple_byte            4     3 (average)
  1080                           ; direct_byte           11     8 (fixed)
  1081                           ; jumptable            260     6 (fixed)
  1082                           ;	Chosen strategy is simple_byte
  1083  05DF  0877               	movf	??_Timer_Init+1,w
  1084  05E0  3A00               	xorlw	0	; case 0
  1085  05E1  1903               	skipnz
  1086  05E2  2DE4               	goto	l3294
  1087  05E3  2E14               	goto	l1742
  1088  05E4                     l3294:
  1089                           
  1090                           ; Switch size 1, requested type "simple"
  1091                           ; Number of cases is 2, Range of values is 160 to 223
  1092                           ; switch strategies available:
  1093                           ; Name         Instructions Cycles
  1094                           ; simple_byte            7     4 (average)
  1095                           ; direct_byte          203    11 (fixed)
  1096                           ; jumptable            263     9 (fixed)
  1097                           ;	Chosen strategy is simple_byte
  1098  05E4  0876               	movf	??_Timer_Init,w
  1099  05E5  3AA0               	xorlw	160	; case 160
  1100  05E6  1903               	skipnz
  1101  05E7  2E14               	goto	l1742
  1102  05E8  3A7F               	xorlw	127	; case 223
  1103  05E9  1903               	skipnz
  1104  05EA  2E14               	goto	l1742
  1105  05EB  2E14               	goto	l1742
  1106  05EC                     l1736:
  1107  05EC  0A79               	incf	Timer_Init@Timer_cfg,w
  1108  05ED  0084               	movwf	4
  1109  05EE  0800               	movf	0,w
  1110  05EF  00F6               	movwf	??_Timer_Init
  1111  05F0  01F7               	clrf	??_Timer_Init+1
  1112                           
  1113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1114                           ; Switch size 1, requested type "simple"
  1115                           ; Number of cases is 1, Range of values is 0 to 0
  1116                           ; switch strategies available:
  1117                           ; Name         Instructions Cycles
  1118                           ; simple_byte            4     3 (average)
  1119                           ; direct_byte           11     8 (fixed)
  1120                           ; jumptable            260     6 (fixed)
  1121                           ;	Chosen strategy is simple_byte
  1122  05F1  0877               	movf	??_Timer_Init+1,w
  1123  05F2  3A00               	xorlw	0	; case 0
  1124  05F3  1903               	skipnz
  1125  05F4  2DF6               	goto	l3296
  1126  05F5  2E14               	goto	l1742
  1127  05F6                     l3296:
  1128                           
  1129                           ; Switch size 1, requested type "simple"
  1130                           ; Number of cases is 2, Range of values is 0 to 1
  1131                           ; switch strategies available:
  1132                           ; Name         Instructions Cycles
  1133                           ; simple_byte            7     4 (average)
  1134                           ; direct_byte           14     8 (fixed)
  1135                           ; jumptable            260     6 (fixed)
  1136                           ;	Chosen strategy is simple_byte
  1137  05F6  0876               	movf	??_Timer_Init,w
  1138  05F7  3A00               	xorlw	0	; case 0
  1139  05F8  1903               	skipnz
  1140  05F9  2DC6               	goto	l1728
  1141  05FA  3A01               	xorlw	1	; case 1
  1142  05FB  1903               	skipnz
  1143  05FC  2DD9               	goto	l1732
  1144  05FD  2E14               	goto	l1742
  1145  05FE                     l1740:
  1146  05FE  0879               	movf	Timer_Init@Timer_cfg,w
  1147  05FF  0084               	movwf	4
  1148  0600  1383               	bcf	3,7	;select IRP bank0
  1149  0601  0800               	movf	0,w
  1150  0602  00F6               	movwf	??_Timer_Init
  1151  0603  01F7               	clrf	??_Timer_Init+1
  1152                           
  1153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1154                           ; Switch size 1, requested type "simple"
  1155                           ; Number of cases is 1, Range of values is 0 to 0
  1156                           ; switch strategies available:
  1157                           ; Name         Instructions Cycles
  1158                           ; simple_byte            4     3 (average)
  1159                           ; direct_byte           11     8 (fixed)
  1160                           ; jumptable            260     6 (fixed)
  1161                           ;	Chosen strategy is simple_byte
  1162  0604  0877               	movf	??_Timer_Init+1,w
  1163  0605  3A00               	xorlw	0	; case 0
  1164  0606  1903               	skipnz
  1165  0607  2E09               	goto	l3298
  1166  0608  2E14               	goto	l1742
  1167  0609                     l3298:
  1168                           
  1169                           ; Switch size 1, requested type "simple"
  1170                           ; Number of cases is 3, Range of values is 0 to 2
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte           10     6 (average)
  1174                           ; direct_byte           17     8 (fixed)
  1175                           ; jumptable            260     6 (fixed)
  1176                           ;	Chosen strategy is simple_byte
  1177  0609  0876               	movf	??_Timer_Init,w
  1178  060A  3A00               	xorlw	0	; case 0
  1179  060B  1903               	skipnz
  1180  060C  2D5D               	goto	l1702
  1181  060D  3A01               	xorlw	1	; case 1
  1182  060E  1903               	skipnz
  1183  060F  2DB4               	goto	l1724
  1184  0610  3A03               	xorlw	3	; case 2
  1185  0611  1903               	skipnz
  1186  0612  2DEC               	goto	l1736
  1187  0613  2E14               	goto	l1742
  1188  0614                     l1742:
  1189                           
  1190                           ;timer.c: 110: return ret_error;
  1191  0614  0878               	movf	Timer_Init@ret_error,w
  1192  0615                     l46:
  1193  0615  0008               	return
  1194  0616                     __end_of_Timer_Init:
  1195                           
  1196                           	psect	text3
  1197  06E4                     __ptext3:	
  1198 ;; *************** function _DIO_init *****************
  1199 ;; Defined at:
  1200 ;;		line 11 in file "DIO.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  DIO_info        1    wreg     PTR struct DIO_Cfg_s
  1203 ;;		 -> Dio_configutation_A(4), Dio_configutation_C(4), Dio_configutation_B(4), 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  DIO_info        1    3[COMMON] PTR struct DIO_Cfg_s
  1206 ;;		 -> Dio_configutation_A(4), Dio_configutation_C(4), Dio_configutation_B(4), 
  1207 ;;  ret_error       1    2[COMMON] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      unsigned char 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         2       0       0       0       0
  1219 ;;      Temps:          2       0       0       0       0
  1220 ;;      Totals:         4       0       0       0       0
  1221 ;;Total ram usage:        4 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _DIO_init
  1232  06E4                     _DIO_init:
  1233                           
  1234                           ;incstack = 0
  1235                           ; Regs used in _DIO_init: [wreg-fsr0h+status,2+status,0+btemp+1]
  1236                           ;DIO_init@DIO_info stored from wreg
  1237  06E4  00F9               	movwf	DIO_init@DIO_info
  1238  06E5                     l2620:
  1239                           
  1240                           ;DIO.c: 11: ERROR_STATUS DIO_init (DIO_Cfg_s *DIO_info);DIO.c: 12: {;DIO.c: 13: uint8_t 
      +                          ret_error=0;
  1241  06E5  01F8               	clrf	DIO_init@ret_error
  1242  06E6                     l2622:
  1243                           
  1244                           ;DIO.c: 14: static uint8_t first_powerup_init = 0;;DIO.c: 15: is_init=1;
  1245  06E6  01F2               	clrf	_is_init
  1246  06E7  0AF2               	incf	_is_init,f
  1247  06E8                     l2624:
  1248                           
  1249                           ;DIO.c: 16:  if (first_powerup_init == 0) {
  1250  06E8  0871               	movf	DIO_init@first_powerup_init,w
  1251  06E9  1D03               	btfss	3,2
  1252  06EA  2EEC               	goto	u221
  1253  06EB  2EED               	goto	u220
  1254  06EC                     u221:
  1255  06EC  2F22               	goto	l2644
  1256  06ED                     u220:
  1257  06ED  2F02               	goto	l2640
  1258  06EE                     l2628:
  1259                           
  1260                           ;DIO.c: 20:   *((reg_type8_t)(0x0085))=0x00;
  1261  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  1262  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  1263  06F0  0185               	clrf	5	;volatile
  1264                           
  1265                           ;DIO.c: 21:       break;
  1266  06F1  2F1E               	goto	l2642
  1267  06F2                     l2630:
  1268                           
  1269                           ;DIO.c: 23:   *((reg_type8_t)(0x0086))=0x00;
  1270  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  1271  06F3  1303               	bcf	3,6	;RP1=0, select bank1
  1272  06F4  0186               	clrf	6	;volatile
  1273                           
  1274                           ;DIO.c: 24:       break;
  1275  06F5  2F1E               	goto	l2642
  1276  06F6                     l2632:
  1277                           
  1278                           ;DIO.c: 26:   *((reg_type8_t)(0x0087))=0x00;
  1279  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  1280  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  1281  06F8  0187               	clrf	7	;volatile
  1282                           
  1283                           ;DIO.c: 27:       break;
  1284  06F9  2F1E               	goto	l2642
  1285  06FA                     l2634:
  1286                           
  1287                           ;DIO.c: 29:   *((reg_type8_t)(0x0088))=0x00;
  1288  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  1289  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  1290  06FC  0188               	clrf	8	;volatile
  1291                           
  1292                           ;DIO.c: 30:       break;
  1293  06FD  2F1E               	goto	l2642
  1294  06FE                     l2636:
  1295                           
  1296                           ;DIO.c: 32:   *((reg_type8_t)(0x0089))=0x00;
  1297  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  1298  06FF  1303               	bcf	3,6	;RP1=0, select bank1
  1299  0700  0189               	clrf	9	;volatile
  1300                           
  1301                           ;DIO.c: 33:       break;
  1302  0701  2F1E               	goto	l2642
  1303  0702                     l2640:
  1304  0702  0879               	movf	DIO_init@DIO_info,w
  1305  0703  0084               	movwf	4
  1306  0704  1383               	bcf	3,7	;select IRP bank0
  1307  0705  0800               	movf	0,w
  1308  0706  00F6               	movwf	??_DIO_init
  1309  0707  01F7               	clrf	??_DIO_init+1
  1310                           
  1311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1312                           ; Switch size 1, requested type "simple"
  1313                           ; Number of cases is 1, Range of values is 0 to 0
  1314                           ; switch strategies available:
  1315                           ; Name         Instructions Cycles
  1316                           ; simple_byte            4     3 (average)
  1317                           ; direct_byte           11     8 (fixed)
  1318                           ; jumptable            260     6 (fixed)
  1319                           ;	Chosen strategy is simple_byte
  1320  0708  0877               	movf	??_DIO_init+1,w
  1321  0709  3A00               	xorlw	0	; case 0
  1322  070A  1903               	skipnz
  1323  070B  2F0D               	goto	l3300
  1324  070C  2F1E               	goto	l2642
  1325  070D                     l3300:
  1326                           
  1327                           ; Switch size 1, requested type "simple"
  1328                           ; Number of cases is 5, Range of values is 0 to 4
  1329                           ; switch strategies available:
  1330                           ; Name         Instructions Cycles
  1331                           ; simple_byte           16     9 (average)
  1332                           ; direct_byte           23     8 (fixed)
  1333                           ; jumptable            260     6 (fixed)
  1334                           ;	Chosen strategy is simple_byte
  1335  070D  0876               	movf	??_DIO_init,w
  1336  070E  3A00               	xorlw	0	; case 0
  1337  070F  1903               	skipnz
  1338  0710  2EEE               	goto	l2628
  1339  0711  3A01               	xorlw	1	; case 1
  1340  0712  1903               	skipnz
  1341  0713  2EF2               	goto	l2630
  1342  0714  3A03               	xorlw	3	; case 2
  1343  0715  1903               	skipnz
  1344  0716  2EF6               	goto	l2632
  1345  0717  3A01               	xorlw	1	; case 3
  1346  0718  1903               	skipnz
  1347  0719  2EFA               	goto	l2634
  1348  071A  3A07               	xorlw	7	; case 4
  1349  071B  1903               	skipnz
  1350  071C  2EFE               	goto	l2636
  1351  071D  2F1E               	goto	l2642
  1352  071E                     l2642:
  1353                           
  1354                           ;DIO.c: 35:   first_powerup_init++;
  1355  071E  3001               	movlw	1
  1356  071F  00FF               	movwf	btemp+1
  1357  0720  087F               	movf	btemp+1,w
  1358  0721  07F1               	addwf	DIO_init@first_powerup_init,f
  1359  0722                     l2644:
  1360                           
  1361                           ;DIO.c: 37:  *((reg_type8_t)(0x009F)) =( DIO_info -> operation_mode) ;
  1362  0722  0879               	movf	DIO_init@DIO_info,w
  1363  0723  3E03               	addlw	3
  1364  0724  0084               	movwf	4
  1365  0725  1383               	bcf	3,7	;select IRP bank0
  1366  0726  0800               	movf	0,w
  1367  0727  00FF               	movwf	btemp+1
  1368  0728  087F               	movf	btemp+1,w
  1369  0729  1683               	bsf	3,5	;RP0=1, select bank1
  1370  072A  1303               	bcf	3,6	;RP1=0, select bank1
  1371  072B  009F               	movwf	31	;volatile
  1372  072C                     l2646:
  1373                           
  1374                           ;DIO.c: 38: if(DIO_info != ((void *)0)){
  1375  072C  0879               	movf	DIO_init@DIO_info,w
  1376  072D  1903               	btfsc	3,2
  1377  072E  2F30               	goto	u231
  1378  072F  2F31               	goto	u230
  1379  0730                     u231:
  1380  0730  2FD4               	goto	l2688
  1381  0731                     u230:
  1382  0731  2FC2               	goto	l2686
  1383  0732                     l2650:
  1384                           
  1385                           ;DIO.c: 47:            *((reg_type8_t)(0x0085)) |=(DIO_info-> pin) ;
  1386  0732  0879               	movf	DIO_init@DIO_info,w
  1387  0733  3E02               	addlw	2
  1388  0734  0084               	movwf	4
  1389  0735  0800               	movf	0,w
  1390  0736  00FF               	movwf	btemp+1
  1391  0737  087F               	movf	btemp+1,w
  1392  0738  0485               	iorwf	5,f	;volatile
  1393                           
  1394                           ;DIO.c: 48:             break;
  1395  0739  2FD8               	goto	l2690
  1396  073A                     l2652:
  1397                           
  1398                           ;DIO.c: 51:                 *((reg_type8_t)(0x0086)) |=(DIO_info->pin) ;
  1399  073A  0879               	movf	DIO_init@DIO_info,w
  1400  073B  3E02               	addlw	2
  1401  073C  0084               	movwf	4
  1402  073D  0800               	movf	0,w
  1403  073E  00FF               	movwf	btemp+1
  1404  073F  087F               	movf	btemp+1,w
  1405  0740  0486               	iorwf	6,f	;volatile
  1406                           
  1407                           ;DIO.c: 52:             break;
  1408  0741  2FD8               	goto	l2690
  1409  0742                     l2654:
  1410                           
  1411                           ;DIO.c: 55:                 *((reg_type8_t)(0x0087)) |=(DIO_info->pin) ;
  1412  0742  0879               	movf	DIO_init@DIO_info,w
  1413  0743  3E02               	addlw	2
  1414  0744  0084               	movwf	4
  1415  0745  0800               	movf	0,w
  1416  0746  00FF               	movwf	btemp+1
  1417  0747  087F               	movf	btemp+1,w
  1418  0748  0487               	iorwf	7,f	;volatile
  1419                           
  1420                           ;DIO.c: 56:             break;
  1421  0749  2FD8               	goto	l2690
  1422  074A                     l2656:
  1423                           
  1424                           ;DIO.c: 59:                 *((reg_type8_t)(0x0088)) |=(DIO_info->pin) ;
  1425  074A  0879               	movf	DIO_init@DIO_info,w
  1426  074B  3E02               	addlw	2
  1427  074C  0084               	movwf	4
  1428  074D  0800               	movf	0,w
  1429  074E  00FF               	movwf	btemp+1
  1430  074F  087F               	movf	btemp+1,w
  1431  0750  0488               	iorwf	8,f	;volatile
  1432                           
  1433                           ;DIO.c: 60:             break;
  1434  0751  2FD8               	goto	l2690
  1435  0752                     l2658:
  1436                           
  1437                           ;DIO.c: 63:             *((reg_type8_t)(0x0089)) |=(DIO_info->pin) ;
  1438  0752  0879               	movf	DIO_init@DIO_info,w
  1439  0753  3E02               	addlw	2
  1440  0754  0084               	movwf	4
  1441  0755  0800               	movf	0,w
  1442  0756  00FF               	movwf	btemp+1
  1443  0757  087F               	movf	btemp+1,w
  1444  0758  0489               	iorwf	9,f	;volatile
  1445                           
  1446                           ;DIO.c: 64:             break;
  1447  0759  2FD8               	goto	l2690
  1448  075A                     l2660:
  1449                           
  1450                           ;DIO.c: 66:             ret_error += 1 +14;
  1451  075A  300F               	movlw	15
  1452  075B  00FF               	movwf	btemp+1
  1453  075C  087F               	movf	btemp+1,w
  1454  075D  07F8               	addwf	DIO_init@ret_error,f
  1455                           
  1456                           ;DIO.c: 67:             break;
  1457  075E  2FD8               	goto	l2690
  1458  075F                     l2664:
  1459  075F  0879               	movf	DIO_init@DIO_info,w
  1460  0760  0084               	movwf	4
  1461  0761  0800               	movf	0,w
  1462  0762  00F6               	movwf	??_DIO_init
  1463  0763  01F7               	clrf	??_DIO_init+1
  1464                           
  1465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 1, Range of values is 0 to 0
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte            4     3 (average)
  1471                           ; direct_byte           11     8 (fixed)
  1472                           ; jumptable            260     6 (fixed)
  1473                           ;	Chosen strategy is simple_byte
  1474  0764  0877               	movf	??_DIO_init+1,w
  1475  0765  3A00               	xorlw	0	; case 0
  1476  0766  1903               	skipnz
  1477  0767  2F69               	goto	l3302
  1478  0768  2F5A               	goto	l2660
  1479  0769                     l3302:
  1480                           
  1481                           ; Switch size 1, requested type "simple"
  1482                           ; Number of cases is 5, Range of values is 0 to 4
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte           16     9 (average)
  1486                           ; direct_byte           23     8 (fixed)
  1487                           ; jumptable            260     6 (fixed)
  1488                           ;	Chosen strategy is simple_byte
  1489  0769  0876               	movf	??_DIO_init,w
  1490  076A  3A00               	xorlw	0	; case 0
  1491  076B  1903               	skipnz
  1492  076C  2F32               	goto	l2650
  1493  076D  3A01               	xorlw	1	; case 1
  1494  076E  1903               	skipnz
  1495  076F  2F3A               	goto	l2652
  1496  0770  3A03               	xorlw	3	; case 2
  1497  0771  1903               	skipnz
  1498  0772  2F42               	goto	l2654
  1499  0773  3A01               	xorlw	1	; case 3
  1500  0774  1903               	skipnz
  1501  0775  2F4A               	goto	l2656
  1502  0776  3A07               	xorlw	7	; case 4
  1503  0777  1903               	skipnz
  1504  0778  2F52               	goto	l2658
  1505  0779  2F5A               	goto	l2660
  1506  077A                     l2666:
  1507                           
  1508                           ;DIO.c: 74:         *((reg_type8_t)(0x0085)) &=(~(DIO_info->pin)) ;
  1509  077A  0879               	movf	DIO_init@DIO_info,w
  1510  077B  3E02               	addlw	2
  1511  077C  0084               	movwf	4
  1512  077D  0900               	comf	0,w
  1513  077E  00FF               	movwf	btemp+1
  1514  077F  087F               	movf	btemp+1,w
  1515  0780  0585               	andwf	5,f	;volatile
  1516                           
  1517                           ;DIO.c: 75:       break;
  1518  0781  2FD8               	goto	l2690
  1519  0782                     l2668:
  1520                           
  1521                           ;DIO.c: 77:         *((reg_type8_t)(0x0086)) &=(~(DIO_info->pin)) ;
  1522  0782  0879               	movf	DIO_init@DIO_info,w
  1523  0783  3E02               	addlw	2
  1524  0784  0084               	movwf	4
  1525  0785  0900               	comf	0,w
  1526  0786  00FF               	movwf	btemp+1
  1527  0787  087F               	movf	btemp+1,w
  1528  0788  0586               	andwf	6,f	;volatile
  1529                           
  1530                           ;DIO.c: 78:       break;
  1531  0789  2FD8               	goto	l2690
  1532  078A                     l2670:
  1533                           
  1534                           ;DIO.c: 80:         *((reg_type8_t)(0x0087)) &=(~(DIO_info->pin)) ;
  1535  078A  0879               	movf	DIO_init@DIO_info,w
  1536  078B  3E02               	addlw	2
  1537  078C  0084               	movwf	4
  1538  078D  0900               	comf	0,w
  1539  078E  00FF               	movwf	btemp+1
  1540  078F  087F               	movf	btemp+1,w
  1541  0790  0587               	andwf	7,f	;volatile
  1542                           
  1543                           ;DIO.c: 81:       break;
  1544  0791  2FD8               	goto	l2690
  1545  0792                     l2672:
  1546                           
  1547                           ;DIO.c: 83:         *((reg_type8_t)(0x0088)) &=(~(DIO_info->pin)) ;
  1548  0792  0879               	movf	DIO_init@DIO_info,w
  1549  0793  3E02               	addlw	2
  1550  0794  0084               	movwf	4
  1551  0795  0900               	comf	0,w
  1552  0796  00FF               	movwf	btemp+1
  1553  0797  087F               	movf	btemp+1,w
  1554  0798  0588               	andwf	8,f	;volatile
  1555                           
  1556                           ;DIO.c: 84:       break;
  1557  0799  2FD8               	goto	l2690
  1558  079A                     l2674:
  1559                           
  1560                           ;DIO.c: 86:         *((reg_type8_t)(0x0089)) &=(~(DIO_info->pin)) ;
  1561  079A  0879               	movf	DIO_init@DIO_info,w
  1562  079B  3E02               	addlw	2
  1563  079C  0084               	movwf	4
  1564  079D  0900               	comf	0,w
  1565  079E  00FF               	movwf	btemp+1
  1566  079F  087F               	movf	btemp+1,w
  1567  07A0  0589               	andwf	9,f	;volatile
  1568                           
  1569                           ;DIO.c: 87:       break;
  1570  07A1  2FD8               	goto	l2690
  1571  07A2                     l2680:
  1572  07A2  0879               	movf	DIO_init@DIO_info,w
  1573  07A3  0084               	movwf	4
  1574  07A4  0800               	movf	0,w
  1575  07A5  00F6               	movwf	??_DIO_init
  1576  07A6  01F7               	clrf	??_DIO_init+1
  1577                           
  1578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1579                           ; Switch size 1, requested type "simple"
  1580                           ; Number of cases is 1, Range of values is 0 to 0
  1581                           ; switch strategies available:
  1582                           ; Name         Instructions Cycles
  1583                           ; simple_byte            4     3 (average)
  1584                           ; direct_byte           11     8 (fixed)
  1585                           ; jumptable            260     6 (fixed)
  1586                           ;	Chosen strategy is simple_byte
  1587  07A7  0877               	movf	??_DIO_init+1,w
  1588  07A8  3A00               	xorlw	0	; case 0
  1589  07A9  1903               	skipnz
  1590  07AA  2FAC               	goto	l3304
  1591  07AB  2F5A               	goto	l2660
  1592  07AC                     l3304:
  1593                           
  1594                           ; Switch size 1, requested type "simple"
  1595                           ; Number of cases is 5, Range of values is 0 to 4
  1596                           ; switch strategies available:
  1597                           ; Name         Instructions Cycles
  1598                           ; simple_byte           16     9 (average)
  1599                           ; direct_byte           23     8 (fixed)
  1600                           ; jumptable            260     6 (fixed)
  1601                           ;	Chosen strategy is simple_byte
  1602  07AC  0876               	movf	??_DIO_init,w
  1603  07AD  3A00               	xorlw	0	; case 0
  1604  07AE  1903               	skipnz
  1605  07AF  2F7A               	goto	l2666
  1606  07B0  3A01               	xorlw	1	; case 1
  1607  07B1  1903               	skipnz
  1608  07B2  2F82               	goto	l2668
  1609  07B3  3A03               	xorlw	3	; case 2
  1610  07B4  1903               	skipnz
  1611  07B5  2F8A               	goto	l2670
  1612  07B6  3A01               	xorlw	1	; case 3
  1613  07B7  1903               	skipnz
  1614  07B8  2F92               	goto	l2672
  1615  07B9  3A07               	xorlw	7	; case 4
  1616  07BA  1903               	skipnz
  1617  07BB  2F9A               	goto	l2674
  1618  07BC  2F5A               	goto	l2660
  1619  07BD                     l2682:
  1620                           
  1621                           ;DIO.c: 94: ret_error +=1 + 18;
  1622  07BD  3013               	movlw	19
  1623  07BE  00FF               	movwf	btemp+1
  1624  07BF  087F               	movf	btemp+1,w
  1625  07C0  07F8               	addwf	DIO_init@ret_error,f
  1626                           
  1627                           ;DIO.c: 95: break;
  1628  07C1  2FD8               	goto	l2690
  1629  07C2                     l2686:
  1630  07C2  0A79               	incf	DIO_init@DIO_info,w
  1631  07C3  0084               	movwf	4
  1632  07C4  0800               	movf	0,w
  1633  07C5  00F6               	movwf	??_DIO_init
  1634  07C6  01F7               	clrf	??_DIO_init+1
  1635                           
  1636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1637                           ; Switch size 1, requested type "simple"
  1638                           ; Number of cases is 1, Range of values is 0 to 0
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte            4     3 (average)
  1642                           ; direct_byte           11     8 (fixed)
  1643                           ; jumptable            260     6 (fixed)
  1644                           ;	Chosen strategy is simple_byte
  1645  07C7  0877               	movf	??_DIO_init+1,w
  1646  07C8  3A00               	xorlw	0	; case 0
  1647  07C9  1903               	skipnz
  1648  07CA  2FCC               	goto	l3306
  1649  07CB  2FBD               	goto	l2682
  1650  07CC                     l3306:
  1651                           
  1652                           ; Switch size 1, requested type "simple"
  1653                           ; Number of cases is 2, Range of values is 0 to 255
  1654                           ; switch strategies available:
  1655                           ; Name         Instructions Cycles
  1656                           ; simple_byte            7     4 (average)
  1657                           ; jumptable            260     6 (fixed)
  1658                           ;	Chosen strategy is simple_byte
  1659  07CC  0876               	movf	??_DIO_init,w
  1660  07CD  3A00               	xorlw	0	; case 0
  1661  07CE  1903               	skipnz
  1662  07CF  2F5F               	goto	l2664
  1663  07D0  3AFF               	xorlw	255	; case 255
  1664  07D1  1903               	skipnz
  1665  07D2  2FA2               	goto	l2680
  1666  07D3  2FBD               	goto	l2682
  1667  07D4                     l2688:
  1668                           
  1669                           ;DIO.c: 98: {;DIO.c: 99: ret_error +=1 +16;
  1670  07D4  3011               	movlw	17
  1671  07D5  00FF               	movwf	btemp+1
  1672  07D6  087F               	movf	btemp+1,w
  1673  07D7  07F8               	addwf	DIO_init@ret_error,f
  1674  07D8                     l2690:
  1675                           
  1676                           ;DIO.c: 101: return ret_error;
  1677  07D8  0878               	movf	DIO_init@ret_error,w
  1678  07D9                     l132:
  1679  07D9  0008               	return
  1680  07DA                     __end_of_DIO_init:
  1681                           
  1682                           	psect	text4
  1683  0616                     __ptext4:	
  1684 ;; *************** function _DIO_Write *****************
  1685 ;; Defined at:
  1686 ;;		line 131 in file "DIO.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  GPIO            1    wreg     unsigned char 
  1689 ;;  pins            1    0[COMMON] unsigned char 
  1690 ;;  value           1    1[COMMON] unsigned char 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  GPIO            1    5[COMMON] unsigned char 
  1693 ;;  ret_error       1    4[COMMON] unsigned char 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      unsigned char 
  1696 ;; Registers used:
  1697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1703 ;;      Params:         2       0       0       0       0
  1704 ;;      Locals:         2       0       0       0       0
  1705 ;;      Temps:          2       0       0       0       0
  1706 ;;      Totals:         6       0       0       0       0
  1707 ;;Total ram usage:        6 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;;		_timer0_interrupt_ovfRoutine
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _DIO_Write
  1719  0616                     _DIO_Write:
  1720                           
  1721                           ;incstack = 0
  1722                           ; Regs used in _DIO_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  1723                           ;DIO_Write@GPIO stored from wreg
  1724  0616  00FB               	movwf	DIO_Write@GPIO
  1725  0617                     l1794:
  1726                           
  1727                           ;DIO.c: 131: ERROR_STATUS DIO_Write (uint8_t GPIO, uint8_t pins, uint8_t value);DIO.c: 1
      +                          32: { uint8_t ret_error=0;
  1728  0617  01FA               	clrf	DIO_Write@ret_error
  1729  0618                     l1796:
  1730                           
  1731                           ;DIO.c: 134:   static uint8_t first_powerup = 0;;DIO.c: 135: if (first_powerup == 0) {
  1732  0618  0870               	movf	DIO_Write@first_powerup,w
  1733  0619  1D03               	btfss	3,2
  1734  061A  2E1C               	goto	u121
  1735  061B  2E1D               	goto	u120
  1736  061C                     u121:
  1737  061C  2ED2               	goto	l1852
  1738  061D                     u120:
  1739  061D  2E32               	goto	l1812
  1740  061E                     l1800:
  1741                           
  1742                           ;DIO.c: 138:   *((reg_type8_t)(0x0005))=0x00;
  1743  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1744  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0620  0185               	clrf	5	;volatile
  1746                           
  1747                           ;DIO.c: 139:   break;
  1748  0621  2E4B               	goto	l1814
  1749  0622                     l1802:
  1750                           
  1751                           ;DIO.c: 141:   *((reg_type8_t)(0x0006))=0x00;
  1752  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0624  0186               	clrf	6	;volatile
  1755                           
  1756                           ;DIO.c: 142:   break;
  1757  0625  2E4B               	goto	l1814
  1758  0626                     l1804:
  1759                           
  1760                           ;DIO.c: 144:   *((reg_type8_t)(0x0007))=0x00;
  1761  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0628  0187               	clrf	7	;volatile
  1764                           
  1765                           ;DIO.c: 145:   break;
  1766  0629  2E4B               	goto	l1814
  1767  062A                     l1806:
  1768                           
  1769                           ;DIO.c: 147:   *((reg_type8_t)(0x0008))=0x00;
  1770  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1771  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1772  062C  0188               	clrf	8	;volatile
  1773                           
  1774                           ;DIO.c: 148:   break;
  1775  062D  2E4B               	goto	l1814
  1776  062E                     l1808:
  1777                           
  1778                           ;DIO.c: 150:   *((reg_type8_t)(0x0009))=0x00;
  1779  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1780  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0630  0189               	clrf	9	;volatile
  1782                           
  1783                           ;DIO.c: 151:   break;
  1784  0631  2E4B               	goto	l1814
  1785  0632                     l1812:
  1786  0632  087B               	movf	DIO_Write@GPIO,w
  1787  0633  00F8               	movwf	??_DIO_Write
  1788  0634  01F9               	clrf	??_DIO_Write+1
  1789                           
  1790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1791                           ; Switch size 1, requested type "simple"
  1792                           ; Number of cases is 1, Range of values is 0 to 0
  1793                           ; switch strategies available:
  1794                           ; Name         Instructions Cycles
  1795                           ; simple_byte            4     3 (average)
  1796                           ; direct_byte           11     8 (fixed)
  1797                           ; jumptable            260     6 (fixed)
  1798                           ;	Chosen strategy is simple_byte
  1799  0635  0879               	movf	??_DIO_Write+1,w
  1800  0636  3A00               	xorlw	0	; case 0
  1801  0637  1903               	skipnz
  1802  0638  2E3A               	goto	l3308
  1803  0639  2E4B               	goto	l1814
  1804  063A                     l3308:
  1805                           
  1806                           ; Switch size 1, requested type "simple"
  1807                           ; Number of cases is 5, Range of values is 0 to 4
  1808                           ; switch strategies available:
  1809                           ; Name         Instructions Cycles
  1810                           ; simple_byte           16     9 (average)
  1811                           ; direct_byte           23     8 (fixed)
  1812                           ; jumptable            260     6 (fixed)
  1813                           ;	Chosen strategy is simple_byte
  1814  063A  0878               	movf	??_DIO_Write,w
  1815  063B  3A00               	xorlw	0	; case 0
  1816  063C  1903               	skipnz
  1817  063D  2E1E               	goto	l1800
  1818  063E  3A01               	xorlw	1	; case 1
  1819  063F  1903               	skipnz
  1820  0640  2E22               	goto	l1802
  1821  0641  3A03               	xorlw	3	; case 2
  1822  0642  1903               	skipnz
  1823  0643  2E26               	goto	l1804
  1824  0644  3A01               	xorlw	1	; case 3
  1825  0645  1903               	skipnz
  1826  0646  2E2A               	goto	l1806
  1827  0647  3A07               	xorlw	7	; case 4
  1828  0648  1903               	skipnz
  1829  0649  2E2E               	goto	l1808
  1830  064A  2E4B               	goto	l1814
  1831  064B                     l1814:
  1832                           
  1833                           ;DIO.c: 153:   first_powerup++;
  1834  064B  3001               	movlw	1
  1835  064C  00FF               	movwf	btemp+1
  1836  064D  087F               	movf	btemp+1,w
  1837  064E  07F0               	addwf	DIO_Write@first_powerup,f
  1838  064F  2ED2               	goto	l1852
  1839  0650                     l1816:
  1840                           
  1841                           ;DIO.c: 159:       *((reg_type8_t)(0x0005)) |= pins;
  1842  0650  0876               	movf	DIO_Write@pins,w
  1843  0651  00FF               	movwf	btemp+1
  1844  0652  087F               	movf	btemp+1,w
  1845  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0655  0485               	iorwf	5,f	;volatile
  1848                           
  1849                           ;DIO.c: 160:       break;
  1850  0656  2EE2               	goto	l1854
  1851  0657                     l1818:
  1852                           
  1853                           ;DIO.c: 162:       *((reg_type8_t)(0x0006)) |= pins;
  1854  0657  0876               	movf	DIO_Write@pins,w
  1855  0658  00FF               	movwf	btemp+1
  1856  0659  087F               	movf	btemp+1,w
  1857  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1858  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1859  065C  0486               	iorwf	6,f	;volatile
  1860                           
  1861                           ;DIO.c: 163:       break;
  1862  065D  2EE2               	goto	l1854
  1863  065E                     l1820:
  1864                           
  1865                           ;DIO.c: 165:       *((reg_type8_t)(0x0007)) |= pins;
  1866  065E  0876               	movf	DIO_Write@pins,w
  1867  065F  00FF               	movwf	btemp+1
  1868  0660  087F               	movf	btemp+1,w
  1869  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0663  0487               	iorwf	7,f	;volatile
  1872                           
  1873                           ;DIO.c: 166:       break;
  1874  0664  2EE2               	goto	l1854
  1875  0665                     l1822:
  1876                           
  1877                           ;DIO.c: 168:       *((reg_type8_t)(0x0008)) |= pins;
  1878  0665  0876               	movf	DIO_Write@pins,w
  1879  0666  00FF               	movwf	btemp+1
  1880  0667  087F               	movf	btemp+1,w
  1881  0668  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0669  1303               	bcf	3,6	;RP1=0, select bank0
  1883  066A  0488               	iorwf	8,f	;volatile
  1884                           
  1885                           ;DIO.c: 169:       break;
  1886  066B  2EE2               	goto	l1854
  1887  066C                     l1824:
  1888                           
  1889                           ;DIO.c: 171:       *((reg_type8_t)(0x0009)) |= pins;
  1890  066C  0876               	movf	DIO_Write@pins,w
  1891  066D  00FF               	movwf	btemp+1
  1892  066E  087F               	movf	btemp+1,w
  1893  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0671  0489               	iorwf	9,f	;volatile
  1896                           
  1897                           ;DIO.c: 172:       break;
  1898  0672  2EE2               	goto	l1854
  1899  0673                     l1826:
  1900                           
  1901                           ;DIO.c: 174:       ret_error +=1 +14;
  1902  0673  300F               	movlw	15
  1903  0674  00FF               	movwf	btemp+1
  1904  0675  087F               	movf	btemp+1,w
  1905  0676  07FA               	addwf	DIO_Write@ret_error,f
  1906                           
  1907                           ;DIO.c: 175:       break;
  1908  0677  2EE2               	goto	l1854
  1909  0678                     l1830:
  1910  0678  087B               	movf	DIO_Write@GPIO,w
  1911  0679  00F8               	movwf	??_DIO_Write
  1912  067A  01F9               	clrf	??_DIO_Write+1
  1913                           
  1914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1915                           ; Switch size 1, requested type "simple"
  1916                           ; Number of cases is 1, Range of values is 0 to 0
  1917                           ; switch strategies available:
  1918                           ; Name         Instructions Cycles
  1919                           ; simple_byte            4     3 (average)
  1920                           ; direct_byte           11     8 (fixed)
  1921                           ; jumptable            260     6 (fixed)
  1922                           ;	Chosen strategy is simple_byte
  1923  067B  0879               	movf	??_DIO_Write+1,w
  1924  067C  3A00               	xorlw	0	; case 0
  1925  067D  1903               	skipnz
  1926  067E  2E80               	goto	l3310
  1927  067F  2E73               	goto	l1826
  1928  0680                     l3310:
  1929                           
  1930                           ; Switch size 1, requested type "simple"
  1931                           ; Number of cases is 5, Range of values is 0 to 4
  1932                           ; switch strategies available:
  1933                           ; Name         Instructions Cycles
  1934                           ; simple_byte           16     9 (average)
  1935                           ; direct_byte           23     8 (fixed)
  1936                           ; jumptable            260     6 (fixed)
  1937                           ;	Chosen strategy is simple_byte
  1938  0680  0878               	movf	??_DIO_Write,w
  1939  0681  3A00               	xorlw	0	; case 0
  1940  0682  1903               	skipnz
  1941  0683  2E50               	goto	l1816
  1942  0684  3A01               	xorlw	1	; case 1
  1943  0685  1903               	skipnz
  1944  0686  2E57               	goto	l1818
  1945  0687  3A03               	xorlw	3	; case 2
  1946  0688  1903               	skipnz
  1947  0689  2E5E               	goto	l1820
  1948  068A  3A01               	xorlw	1	; case 3
  1949  068B  1903               	skipnz
  1950  068C  2E65               	goto	l1822
  1951  068D  3A07               	xorlw	7	; case 4
  1952  068E  1903               	skipnz
  1953  068F  2E6C               	goto	l1824
  1954  0690  2E73               	goto	l1826
  1955  0691                     l1832:
  1956                           
  1957                           ;DIO.c: 182:       *((reg_type8_t)(0x0005)) &= (~pins);
  1958  0691  0976               	comf	DIO_Write@pins,w
  1959  0692  00FF               	movwf	btemp+1
  1960  0693  087F               	movf	btemp+1,w
  1961  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0696  0585               	andwf	5,f	;volatile
  1964                           
  1965                           ;DIO.c: 183:       break;
  1966  0697  2EE2               	goto	l1854
  1967  0698                     l1834:
  1968                           
  1969                           ;DIO.c: 185:       *((reg_type8_t)(0x0006)) &= (~pins);
  1970  0698  0976               	comf	DIO_Write@pins,w
  1971  0699  00FF               	movwf	btemp+1
  1972  069A  087F               	movf	btemp+1,w
  1973  069B  1283               	bcf	3,5	;RP0=0, select bank0
  1974  069C  1303               	bcf	3,6	;RP1=0, select bank0
  1975  069D  0586               	andwf	6,f	;volatile
  1976                           
  1977                           ;DIO.c: 186:       break;
  1978  069E  2EE2               	goto	l1854
  1979  069F                     l1836:
  1980                           
  1981                           ;DIO.c: 188:       *((reg_type8_t)(0x0007)) &= (~pins);
  1982  069F  0976               	comf	DIO_Write@pins,w
  1983  06A0  00FF               	movwf	btemp+1
  1984  06A1  087F               	movf	btemp+1,w
  1985  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1986  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1987  06A4  0587               	andwf	7,f	;volatile
  1988                           
  1989                           ;DIO.c: 189:       break;
  1990  06A5  2EE2               	goto	l1854
  1991  06A6                     l1838:
  1992                           
  1993                           ;DIO.c: 191:       *((reg_type8_t)(0x0008)) &= (~pins);
  1994  06A6  0976               	comf	DIO_Write@pins,w
  1995  06A7  00FF               	movwf	btemp+1
  1996  06A8  087F               	movf	btemp+1,w
  1997  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1998  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1999  06AB  0588               	andwf	8,f	;volatile
  2000                           
  2001                           ;DIO.c: 192:       break;
  2002  06AC  2EE2               	goto	l1854
  2003  06AD                     l1840:
  2004                           
  2005                           ;DIO.c: 194:       *((reg_type8_t)(0x0009)) &= (~pins);
  2006  06AD  0976               	comf	DIO_Write@pins,w
  2007  06AE  00FF               	movwf	btemp+1
  2008  06AF  087F               	movf	btemp+1,w
  2009  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2010  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2011  06B2  0589               	andwf	9,f	;volatile
  2012                           
  2013                           ;DIO.c: 195:       break;
  2014  06B3  2EE2               	goto	l1854
  2015  06B4                     l1846:
  2016  06B4  087B               	movf	DIO_Write@GPIO,w
  2017  06B5  00F8               	movwf	??_DIO_Write
  2018  06B6  01F9               	clrf	??_DIO_Write+1
  2019                           
  2020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2021                           ; Switch size 1, requested type "simple"
  2022                           ; Number of cases is 1, Range of values is 0 to 0
  2023                           ; switch strategies available:
  2024                           ; Name         Instructions Cycles
  2025                           ; simple_byte            4     3 (average)
  2026                           ; direct_byte           11     8 (fixed)
  2027                           ; jumptable            260     6 (fixed)
  2028                           ;	Chosen strategy is simple_byte
  2029  06B7  0879               	movf	??_DIO_Write+1,w
  2030  06B8  3A00               	xorlw	0	; case 0
  2031  06B9  1903               	skipnz
  2032  06BA  2EBC               	goto	l3312
  2033  06BB  2E73               	goto	l1826
  2034  06BC                     l3312:
  2035                           
  2036                           ; Switch size 1, requested type "simple"
  2037                           ; Number of cases is 5, Range of values is 0 to 4
  2038                           ; switch strategies available:
  2039                           ; Name         Instructions Cycles
  2040                           ; simple_byte           16     9 (average)
  2041                           ; direct_byte           23     8 (fixed)
  2042                           ; jumptable            260     6 (fixed)
  2043                           ;	Chosen strategy is simple_byte
  2044  06BC  0878               	movf	??_DIO_Write,w
  2045  06BD  3A00               	xorlw	0	; case 0
  2046  06BE  1903               	skipnz
  2047  06BF  2E91               	goto	l1832
  2048  06C0  3A01               	xorlw	1	; case 1
  2049  06C1  1903               	skipnz
  2050  06C2  2E98               	goto	l1834
  2051  06C3  3A03               	xorlw	3	; case 2
  2052  06C4  1903               	skipnz
  2053  06C5  2E9F               	goto	l1836
  2054  06C6  3A01               	xorlw	1	; case 3
  2055  06C7  1903               	skipnz
  2056  06C8  2EA6               	goto	l1838
  2057  06C9  3A07               	xorlw	7	; case 4
  2058  06CA  1903               	skipnz
  2059  06CB  2EAD               	goto	l1840
  2060  06CC  2E73               	goto	l1826
  2061  06CD                     l1848:
  2062                           
  2063                           ;DIO.c: 203: ret_error +=1 +18;
  2064  06CD  3013               	movlw	19
  2065  06CE  00FF               	movwf	btemp+1
  2066  06CF  087F               	movf	btemp+1,w
  2067  06D0  07FA               	addwf	DIO_Write@ret_error,f
  2068                           
  2069                           ;DIO.c: 204:   break;
  2070  06D1  2EE2               	goto	l1854
  2071  06D2                     l1852:
  2072  06D2  0877               	movf	DIO_Write@value,w
  2073  06D3  00F8               	movwf	??_DIO_Write
  2074  06D4  01F9               	clrf	??_DIO_Write+1
  2075                           
  2076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2077                           ; Switch size 1, requested type "simple"
  2078                           ; Number of cases is 1, Range of values is 0 to 0
  2079                           ; switch strategies available:
  2080                           ; Name         Instructions Cycles
  2081                           ; simple_byte            4     3 (average)
  2082                           ; direct_byte           11     8 (fixed)
  2083                           ; jumptable            260     6 (fixed)
  2084                           ;	Chosen strategy is simple_byte
  2085  06D5  0879               	movf	??_DIO_Write+1,w
  2086  06D6  3A00               	xorlw	0	; case 0
  2087  06D7  1903               	skipnz
  2088  06D8  2EDA               	goto	l3314
  2089  06D9  2ECD               	goto	l1848
  2090  06DA                     l3314:
  2091                           
  2092                           ; Switch size 1, requested type "simple"
  2093                           ; Number of cases is 2, Range of values is 0 to 255
  2094                           ; switch strategies available:
  2095                           ; Name         Instructions Cycles
  2096                           ; simple_byte            7     4 (average)
  2097                           ; jumptable            260     6 (fixed)
  2098                           ;	Chosen strategy is simple_byte
  2099  06DA  0878               	movf	??_DIO_Write,w
  2100  06DB  3A00               	xorlw	0	; case 0
  2101  06DC  1903               	skipnz
  2102  06DD  2EB4               	goto	l1846
  2103  06DE  3AFF               	xorlw	255	; case 255
  2104  06DF  1903               	skipnz
  2105  06E0  2E78               	goto	l1830
  2106  06E1  2ECD               	goto	l1848
  2107  06E2                     l1854:
  2108                           
  2109                           ;DIO.c: 206: return ret_error;
  2110  06E2  087A               	movf	DIO_Write@ret_error,w
  2111  06E3                     l166:
  2112  06E3  0008               	return
  2113  06E4                     __end_of_DIO_Write:
  2114                           
  2115                           	psect	text5
  2116  0409                     __ptext5:	
  2117 ;; *************** function _DIO_Toggle *****************
  2118 ;; Defined at:
  2119 ;;		line 289 in file "DIO.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  GPIO            1    wreg     unsigned char 
  2122 ;;  pins            1    0[COMMON] unsigned char 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  GPIO            1    3[COMMON] unsigned char 
  2125 ;;  ret_error       1    4[COMMON] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      unsigned char 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         1       0       0       0       0
  2136 ;;      Locals:         2       0       0       0       0
  2137 ;;      Temps:          2       0       0       0       0
  2138 ;;      Totals:         5       0       0       0       0
  2139 ;;Total ram usage:        5 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _DIO_Toggle
  2150  0409                     _DIO_Toggle:
  2151                           
  2152                           ;incstack = 0
  2153                           ; Regs used in _DIO_Toggle: [wreg-fsr0h+status,2+status,0+btemp+1]
  2154                           ;DIO_Toggle@GPIO stored from wreg
  2155  0409  00F9               	movwf	DIO_Toggle@GPIO
  2156  040A                     l2032:
  2157                           
  2158                           ;DIO.c: 289: ERROR_STATUS DIO_Toggle (uint8_t GPIO, uint8_t pins);DIO.c: 290: {;DIO.c: 2
      +                          91:     uint8_t ret_error=0;
  2159  040A  01FA               	clrf	DIO_Toggle@ret_error
  2160                           
  2161                           ;DIO.c: 292:     switch (GPIO)
  2162  040B  2C2D               	goto	l2046
  2163  040C                     l2034:
  2164                           
  2165                           ;DIO.c: 294:       *((reg_type8_t)(0x0005)) ^=(pins);
  2166  040C  0876               	movf	DIO_Toggle@pins,w
  2167  040D  00FF               	movwf	btemp+1
  2168  040E  087F               	movf	btemp+1,w
  2169  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0411  0685               	xorwf	5,f	;volatile
  2172                           
  2173                           ;DIO.c: 295:       break;
  2174  0412  2C43               	goto	l2048
  2175  0413                     l2036:
  2176                           
  2177                           ;DIO.c: 297:       *((reg_type8_t)(0x0006)) ^=(pins);
  2178  0413  0876               	movf	DIO_Toggle@pins,w
  2179  0414  00FF               	movwf	btemp+1
  2180  0415  087F               	movf	btemp+1,w
  2181  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2182  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2183  0418  0686               	xorwf	6,f	;volatile
  2184                           
  2185                           ;DIO.c: 298:       break;
  2186  0419  2C43               	goto	l2048
  2187  041A                     l2038:
  2188                           
  2189                           ;DIO.c: 300:       *((reg_type8_t)(0x0007)) ^=(pins);
  2190  041A  0876               	movf	DIO_Toggle@pins,w
  2191  041B  00FF               	movwf	btemp+1
  2192  041C  087F               	movf	btemp+1,w
  2193  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2194  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2195  041F  0687               	xorwf	7,f	;volatile
  2196                           
  2197                           ;DIO.c: 301:       break;
  2198  0420  2C43               	goto	l2048
  2199  0421                     l2040:
  2200                           
  2201                           ;DIO.c: 303:       *((reg_type8_t)(0x0008)) ^=(pins);
  2202  0421  0876               	movf	DIO_Toggle@pins,w
  2203  0422  00FF               	movwf	btemp+1
  2204  0423  087F               	movf	btemp+1,w
  2205  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0426  0688               	xorwf	8,f	;volatile
  2208                           
  2209                           ;DIO.c: 304:       break;
  2210  0427  2C43               	goto	l2048
  2211  0428                     l2042:
  2212                           
  2213                           ;DIO.c: 306:       ret_error +=14 +1;
  2214  0428  300F               	movlw	15
  2215  0429  00FF               	movwf	btemp+1
  2216  042A  087F               	movf	btemp+1,w
  2217  042B  07FA               	addwf	DIO_Toggle@ret_error,f
  2218                           
  2219                           ;DIO.c: 307:       break;
  2220  042C  2C43               	goto	l2048
  2221  042D                     l2046:
  2222  042D  0879               	movf	DIO_Toggle@GPIO,w
  2223  042E  00F7               	movwf	??_DIO_Toggle
  2224  042F  01F8               	clrf	??_DIO_Toggle+1
  2225                           
  2226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2227                           ; Switch size 1, requested type "simple"
  2228                           ; Number of cases is 1, Range of values is 0 to 0
  2229                           ; switch strategies available:
  2230                           ; Name         Instructions Cycles
  2231                           ; simple_byte            4     3 (average)
  2232                           ; direct_byte           11     8 (fixed)
  2233                           ; jumptable            260     6 (fixed)
  2234                           ;	Chosen strategy is simple_byte
  2235  0430  0878               	movf	??_DIO_Toggle+1,w
  2236  0431  3A00               	xorlw	0	; case 0
  2237  0432  1903               	skipnz
  2238  0433  2C35               	goto	l3316
  2239  0434  2C28               	goto	l2042
  2240  0435                     l3316:
  2241                           
  2242                           ; Switch size 1, requested type "simple"
  2243                           ; Number of cases is 4, Range of values is 0 to 3
  2244                           ; switch strategies available:
  2245                           ; Name         Instructions Cycles
  2246                           ; simple_byte           13     7 (average)
  2247                           ; direct_byte           20     8 (fixed)
  2248                           ; jumptable            260     6 (fixed)
  2249                           ;	Chosen strategy is simple_byte
  2250  0435  0877               	movf	??_DIO_Toggle,w
  2251  0436  3A00               	xorlw	0	; case 0
  2252  0437  1903               	skipnz
  2253  0438  2C0C               	goto	l2034
  2254  0439  3A01               	xorlw	1	; case 1
  2255  043A  1903               	skipnz
  2256  043B  2C13               	goto	l2036
  2257  043C  3A03               	xorlw	3	; case 2
  2258  043D  1903               	skipnz
  2259  043E  2C1A               	goto	l2038
  2260  043F  3A01               	xorlw	1	; case 3
  2261  0440  1903               	skipnz
  2262  0441  2C21               	goto	l2040
  2263  0442  2C28               	goto	l2042
  2264  0443                     l2048:
  2265                           
  2266                           ;DIO.c: 309:     return ret_error;
  2267  0443  087A               	movf	DIO_Toggle@ret_error,w
  2268  0444                     l188:
  2269  0444  0008               	return
  2270  0445                     __end_of_DIO_Toggle:
  2271                           
  2272                           	psect	text6
  2273  0445                     __ptext6:	
  2274 ;; *************** function _DIO_Read *****************
  2275 ;; Defined at:
  2276 ;;		line 235 in file "DIO.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  GPIO            1    wreg     unsigned char 
  2279 ;;  pins            1    0[COMMON] unsigned char 
  2280 ;;  data            1    1[COMMON] PTR unsigned char 
  2281 ;;		 -> data2(1), data(1), 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  GPIO            1    4[COMMON] unsigned char 
  2284 ;;  ret_error       1    5[COMMON] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      unsigned char 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2294 ;;      Params:         2       0       0       0       0
  2295 ;;      Locals:         2       0       0       0       0
  2296 ;;      Temps:          2       0       0       0       0
  2297 ;;      Totals:         6       0       0       0       0
  2298 ;;Total ram usage:        6 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_main
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function _DIO_Read
  2309  0445                     _DIO_Read:
  2310                           
  2311                           ;incstack = 0
  2312                           ; Regs used in _DIO_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  2313                           ;DIO_Read@GPIO stored from wreg
  2314  0445  00FA               	movwf	DIO_Read@GPIO
  2315  0446                     l2002:
  2316                           
  2317                           ;DIO.c: 235: ERROR_STATUS DIO_Read (uint8_t GPIO,uint8_t pins, uint8_t *data);DIO.c: 236
      +                          : {;DIO.c: 237:   uint8_t ret_error=0;
  2318  0446  01FB               	clrf	DIO_Read@ret_error
  2319                           
  2320                           ;DIO.c: 238:   switch (GPIO)
  2321  0447  2C7F               	goto	l2018
  2322  0448                     l2004:
  2323                           
  2324                           ;DIO.c: 240:     *data=(*((reg_type8_t)(0x0005)) & pins);
  2325  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2326  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2327  044A  0805               	movf	5,w	;volatile
  2328  044B  0576               	andwf	DIO_Read@pins,w
  2329  044C  00FF               	movwf	btemp+1
  2330  044D  0877               	movf	DIO_Read@data,w
  2331  044E  0084               	movwf	4
  2332  044F  087F               	movf	btemp+1,w
  2333  0450  0080               	movwf	0
  2334                           
  2335                           ;DIO.c: 241:     break;
  2336  0451  2C98               	goto	l2020
  2337  0452                     l2006:
  2338                           
  2339                           ;DIO.c: 243:     *data=(*((reg_type8_t)(0x0006)) & pins);
  2340  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0454  0806               	movf	6,w	;volatile
  2343  0455  0576               	andwf	DIO_Read@pins,w
  2344  0456  00FF               	movwf	btemp+1
  2345  0457  0877               	movf	DIO_Read@data,w
  2346  0458  0084               	movwf	4
  2347  0459  087F               	movf	btemp+1,w
  2348  045A  0080               	movwf	0
  2349                           
  2350                           ;DIO.c: 244:     break;
  2351  045B  2C98               	goto	l2020
  2352  045C                     l2008:
  2353                           
  2354                           ;DIO.c: 246:     *data=(*((reg_type8_t)(0x0007)) & pins);
  2355  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2356  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2357  045E  0807               	movf	7,w	;volatile
  2358  045F  0576               	andwf	DIO_Read@pins,w
  2359  0460  00FF               	movwf	btemp+1
  2360  0461  0877               	movf	DIO_Read@data,w
  2361  0462  0084               	movwf	4
  2362  0463  087F               	movf	btemp+1,w
  2363  0464  0080               	movwf	0
  2364                           
  2365                           ;DIO.c: 247:     break;
  2366  0465  2C98               	goto	l2020
  2367  0466                     l2010:
  2368                           
  2369                           ;DIO.c: 249:     *data=(*((reg_type8_t)(0x0008)) & pins);
  2370  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0468  0808               	movf	8,w	;volatile
  2373  0469  0576               	andwf	DIO_Read@pins,w
  2374  046A  00FF               	movwf	btemp+1
  2375  046B  0877               	movf	DIO_Read@data,w
  2376  046C  0084               	movwf	4
  2377  046D  087F               	movf	btemp+1,w
  2378  046E  0080               	movwf	0
  2379                           
  2380                           ;DIO.c: 250:                 break;
  2381  046F  2C98               	goto	l2020
  2382  0470                     l2012:
  2383                           
  2384                           ;DIO.c: 252:     *data=(*((reg_type8_t)(0x0009)) & pins);
  2385  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0471  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0472  0809               	movf	9,w	;volatile
  2388  0473  0576               	andwf	DIO_Read@pins,w
  2389  0474  00FF               	movwf	btemp+1
  2390  0475  0877               	movf	DIO_Read@data,w
  2391  0476  0084               	movwf	4
  2392  0477  087F               	movf	btemp+1,w
  2393  0478  0080               	movwf	0
  2394                           
  2395                           ;DIO.c: 253:     break;
  2396  0479  2C98               	goto	l2020
  2397  047A                     l2014:
  2398                           
  2399                           ;DIO.c: 255:     ret_error += 14;
  2400  047A  300E               	movlw	14
  2401  047B  00FF               	movwf	btemp+1
  2402  047C  087F               	movf	btemp+1,w
  2403  047D  07FB               	addwf	DIO_Read@ret_error,f
  2404                           
  2405                           ;DIO.c: 256:     break;
  2406  047E  2C98               	goto	l2020
  2407  047F                     l2018:
  2408  047F  087A               	movf	DIO_Read@GPIO,w
  2409  0480  00F8               	movwf	??_DIO_Read
  2410  0481  01F9               	clrf	??_DIO_Read+1
  2411                           
  2412                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2413                           ; Switch size 1, requested type "simple"
  2414                           ; Number of cases is 1, Range of values is 0 to 0
  2415                           ; switch strategies available:
  2416                           ; Name         Instructions Cycles
  2417                           ; simple_byte            4     3 (average)
  2418                           ; direct_byte           11     8 (fixed)
  2419                           ; jumptable            260     6 (fixed)
  2420                           ;	Chosen strategy is simple_byte
  2421  0482  0879               	movf	??_DIO_Read+1,w
  2422  0483  3A00               	xorlw	0	; case 0
  2423  0484  1903               	skipnz
  2424  0485  2C87               	goto	l3318
  2425  0486  2C7A               	goto	l2014
  2426  0487                     l3318:
  2427                           
  2428                           ; Switch size 1, requested type "simple"
  2429                           ; Number of cases is 5, Range of values is 0 to 4
  2430                           ; switch strategies available:
  2431                           ; Name         Instructions Cycles
  2432                           ; simple_byte           16     9 (average)
  2433                           ; direct_byte           23     8 (fixed)
  2434                           ; jumptable            260     6 (fixed)
  2435                           ;	Chosen strategy is simple_byte
  2436  0487  0878               	movf	??_DIO_Read,w
  2437  0488  3A00               	xorlw	0	; case 0
  2438  0489  1903               	skipnz
  2439  048A  2C48               	goto	l2004
  2440  048B  3A01               	xorlw	1	; case 1
  2441  048C  1903               	skipnz
  2442  048D  2C52               	goto	l2006
  2443  048E  3A03               	xorlw	3	; case 2
  2444  048F  1903               	skipnz
  2445  0490  2C5C               	goto	l2008
  2446  0491  3A01               	xorlw	1	; case 3
  2447  0492  1903               	skipnz
  2448  0493  2C66               	goto	l2010
  2449  0494  3A07               	xorlw	7	; case 4
  2450  0495  1903               	skipnz
  2451  0496  2C70               	goto	l2012
  2452  0497  2C7A               	goto	l2014
  2453  0498                     l2020:
  2454                           
  2455                           ;DIO.c: 258:    if(*data > 0)
  2456  0498  0877               	movf	DIO_Read@data,w
  2457  0499  0084               	movwf	4
  2458  049A  0800               	movf	0,w
  2459  049B  1903               	btfsc	3,2
  2460  049C  2C9E               	goto	u161
  2461  049D  2C9F               	goto	u160
  2462  049E                     u161:
  2463  049E  2CA3               	goto	l2024
  2464  049F                     u160:
  2465  049F                     l2022:
  2466                           
  2467                           ;DIO.c: 259:    {;DIO.c: 260:     *data = 1;
  2468  049F  0877               	movf	DIO_Read@data,w
  2469  04A0  0084               	movwf	4
  2470  04A1  0180               	clrf	0
  2471  04A2  0A80               	incf	0,f
  2472  04A3                     l2024:
  2473                           
  2474                           ;DIO.c: 263:   return ret_error;
  2475  04A3  087B               	movf	DIO_Read@ret_error,w
  2476  04A4                     l178:
  2477  04A4  0008               	return
  2478  04A5                     __end_of_DIO_Read:
  2479  007E                     btemp	set	126	;btemp
  2480  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         39
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    DIO_Read@data	PTR unsigned char  size(1) Largest target is 1
		 -> data2(COMMON[1]), data(COMMON[1]), 

    DIO_init@DIO_info	PTR struct DIO_Cfg_s size(1) Largest target is 4
		 -> Dio_configutation_A(BANK0[4]), Dio_configutation_C(BANK0[4]), Dio_configutation_B(BANK0[4]), 

    Timer_Deinit_Configuration2.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Deinit_Configuration1.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Deinit_Configuration0.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Configuration2.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Configuration1.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Configuration0.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    TIMER0OVF_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), timer0_interrupt_ovfRoutine(), 

    S23Timer_cfg_s$Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Init@Timer_cfg.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Init@Timer_cfg	PTR struct Timer_cfg_s size(1) Largest target is 5
		 -> Timer_Configuration0(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_DIO_Read
    _main->_DIO_Write
    _main->_Timer_Start

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3009
                           _DIO_Read
                         _DIO_Toggle
                          _DIO_Write
                           _DIO_init
                         _Timer_Init
                        _Timer_Start
 ---------------------------------------------------------------------------------
 (1) _Timer_Start                                          6     4      2     166
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Timer_Init                                           4     4      0     277
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DIO_init                                             4     4      0     800
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DIO_Write                                            6     4      2     942
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DIO_Toggle                                           5     4      1     210
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _DIO_Read                                             6     4      2     614
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DIO_Read
   _DIO_Toggle
   _DIO_Write
   _DIO_init
   _Timer_Init
   _Timer_Start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jul 14 21:55:42 2020

                          pc 0002                           l12 0564                           l46 0615  
                         l59 0408                           fsr 0004                          l132 07D9  
                        l219 04D1                          l166 06E3                          l178 04A4  
                        l188 0444                          u120 061D                          u121 061C  
                        u130 03E8                          u131 03E7                          u220 06ED  
                        u221 06EC                          u230 0731                          u231 0730  
                        u160 049F                          u240 04F3                          u161 049E  
                        u241 04F2                          u250 052D                          u251 052C  
                        u260 0532                          u261 0531                          _ret 0052  
                        fsr0 0004                          indf 0000                         l2010 0466  
                       l2002 0446                         l2012 0470                         l2020 0498  
                       l2004 0448                         l2022 049F                         l2014 047A  
                       l2006 0452                         l2024 04A3                         l2008 045C  
                       l2040 0421                         l2032 040A                         l2018 047F  
                       l2042 0428                         l2034 040C                         l2036 0413  
                       l2038 041A                         l2046 042D                         l2048 0443  
                       l3300 070D                         l1700 055B                         l3310 0680  
                       l3302 0769                         l1710 0576                         l1702 055D  
                       l3312 06BC                         l1800 061E                         l3304 07AC  
                       l1720 05A1                         l1704 0565                         l1712 057B  
                       l3314 06DA                         l1802 0622                         l3306 07CC  
                       l1706 0569                         l3316 0435                         l1820 065E  
                       l3308 063A                         l1804 0626                         l1812 0632  
                       l2620 06E5                         l1732 05D9                         l1724 05B4  
                       l1716 058E                         l1708 0571                         l1740 05FE  
                       l3318 0487                         l1830 0678                         l1822 0665  
                       l1806 062A                         l1814 064B                         l2630 06F2  
                       l2622 06E6                         l1742 0614                         l1840 06AD  
                       l1832 0691                         l1824 066C                         l1816 0650  
                       l1808 062E                         l2632 06F6                         l2640 0702  
                       l2624 06E8                         l1736 05EC                         l1728 05C6  
                       l1834 0698                         l1826 0673                         l1818 0657  
                       l2650 0732                         l2634 06FA                         l2642 071E  
                       l3290 05BE                         l3282 03FC                         l2730 04EF  
                       l1836 069F                         l1852 06D2                         l2660 075A  
                       l2652 073A                         l2636 06FE                         l2628 06EE  
                       l2644 0722                         l3292 05D1                         l3284 0586  
                       l2740 0546                         l2732 04F3                         l1846 06B4  
                       l1838 06A6                         l1854 06E2                         l2670 078A  
                       l2654 0742                         l2646 072C                         l3294 05E4  
                       l3286 0599                         l2734 0528                         l2726 04A5  
                       l1848 06CD                         l2680 07A2                         l2672 0792  
                       l2664 075F                         l2656 074A                         l3296 05F6  
                       l3288 05AC                         l1880 03E8                         l2736 052D  
                       l2728 04E1                         l1794 0617                         l2682 07BD  
                       l2674 079A                         l2666 077A                         l2658 0752  
                       l2690 07D8                         l3298 0609                         l1882 03EF  
                       l1874 03D7                         l2738 0532                         l1796 0618  
                       l2668 0782                         l1876 03D9                         l2686 07C2  
                       l1878 03DF                         l1886 03F4                         l2688 07D4  
                       l1888 0407  _timer0_interrupt_ovfRoutine 0000           __size_of_DIO_Write 00CE  
                       _data 0075                         _main 04A5                         btemp 007E  
                       start 0000  _Timer_Deinit_Configuration0 002A  _Timer_Deinit_Configuration1 0025  
_Timer_Deinit_Configuration2 0020             __end_of_DIO_Read 04A5             __end_of_DIO_init 07DA  
                      ?_main 0076               DIO_Toggle@GPIO 0079                DIO_Write@GPIO 007B  
             DIO_Toggle@pins 0076                DIO_Write@pins 0076          __size_of_DIO_Toggle 003C  
                      _data2 0074          DIO_Toggle@ret_error 007A           DIO_Write@ret_error 007A  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __initialization 07DA                 __end_of_main 055A                       ??_main 007C  
          __end_of_DIO_Write 06E4               DIO_Write@value 0077       DIO_Write@first_powerup 0070  
                 _Timer_Init 055A                ??_Timer_Start 0078                 __pdataCOMMON 007C  
                  ?_DIO_Read 0076      __end_of__initialization 07FC                    ?_DIO_init 0076  
               ??_DIO_Toggle 0077         Timer_Start@ret_error 007B               __pcstackCOMMON 0076  
               __pidataBANK0 03B2           __end_of_DIO_Toggle 0445          __end_of_Timer_Start 0409  
        Timer_Init@Timer_cfg 0079                   __pbssBANK0 0020                   ??_DIO_Read 0078  
                 ??_DIO_init 0076            DIO_Read@ret_error 007B                   __pmaintext 04A5  
                ?_Timer_Init 0076   DIO_init@first_powerup_init 0071                      __ptext1 03D6  
                    __ptext2 055A                      __ptext3 06E4                      __ptext4 0616  
                    __ptext5 0409                      __ptext6 0445                  _Timer_Start 03D6  
                    _is_init 0072          Timer_Init@ret_error 0078                    _DIO_Write 0616  
                    clrloop0 03AB         end_of_initialization 07FC          __size_of_Timer_Init 00BC  
                 ?_DIO_Write 0076            __size_of_DIO_Read 0060            __size_of_DIO_init 00F6  
              _TIMER0OVF_INT 0073                __pidataCOMMON 03A9       Timer_Start@Timer_CH_NO 007A  
        start_initialization 07DA       Timer_Start@Timer_Count 0076            DIO_init@ret_error 0078  
                  _Prescaler 007C                   init_fetch0 03C3          _Dio_configutation_A 0046  
        _Dio_configutation_B 004E          _Dio_configutation_C 004A          _Dio_configutation_D 003D  
        _Dio_configutation_E 0039                 ??_Timer_Init 0076                  __pdataBANK0 0041  
                __pbssCOMMON 0070                    ___latbits 0002                  ??_DIO_Write 0078  
         __end_of_Timer_Init 0616             DIO_init@DIO_info 0079                    __pnvBANK0 0052  
       _Timer_Configuration0 0041         _Timer_Configuration1 0034         _Timer_Configuration2 002F  
               ?_Timer_Start 0076                     _DIO_Read 0445                     _DIO_init 06E4  
                  clear_ram0 03AA                __size_of_main 00B5                   _DIO_Toggle 0409  
       __size_of_Timer_Start 0033                     init_ram0 03C7                 DIO_Read@GPIO 007A  
               DIO_Read@data 0077                 DIO_Read@pins 0076                  ?_DIO_Toggle 0076  
