

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jul 13 19:46:15 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114                           
   115 ;; Function _timer0_interrupt_ovfRoutine is unused but had its address taken
   116  0000                     
   117                           	psect	idataBANK0
   118  0469                     __pidataBANK0:
   119                           
   120                           ;initializer for _Timer_Configuration0
   121  0469  3400               	retlw	0
   122  046A  34C2               	retlw	194
   123  046B  3420               	retlw	32
   124  046C  3400               	retlw	0
   125  046D  3400               	retlw	0
   126                           
   127                           ;initializer for _Dio_configutation_A
   128  046E  3400               	retlw	0
   129  046F  3420               	retlw	32
   130  0470  3400               	retlw	0
   131  0471  34FF               	retlw	255
   132                           
   133                           ;initializer for _Dio_configutation_C
   134  0472  3402               	retlw	2
   135  0473  34FF               	retlw	255
   136  0474  3400               	retlw	0
   137  0475  3400               	retlw	0
   138                           
   139                           ;initializer for _Dio_configutation_B
   140  0476  3401               	retlw	1
   141  0477  34FF               	retlw	255
   142  0478  34FF               	retlw	255
   143  0479  3400               	retlw	0
   144                           
   145                           	psect	nvCOMMON
   146  007C                     __pnvCOMMON:
   147  007C                     _ret:
   148  007C                     	ds	1
   149                           
   150                           	psect	cinit
   151  07E0                     start_initialization:	
   152                           ; #config settings
   153                           
   154  07E0                     __initialization:
   155                           
   156                           ; Initialize objects allocated to BANK0
   157  07E0  1383               	bcf	3,7	;select IRP bank0
   158  07E1  3052               	movlw	low (__pdataBANK0+17)
   159  07E2  00FD               	movwf	btemp+-1
   160  07E3  3004               	movlw	high __pidataBANK0
   161  07E4  00FE               	movwf	btemp
   162  07E5  3069               	movlw	low __pidataBANK0
   163  07E6  00FF               	movwf	btemp+1
   164  07E7  3041               	movlw	low __pdataBANK0
   165  07E8  0084               	movwf	4
   166  07E9  120A  118A  247E  120A  118A  	fcall	init_ram0
   167                           
   168                           ; Clear objects allocated to BANK0
   169  07EE  3020               	movlw	low __pbssBANK0
   170  07EF  0084               	movwf	4
   171  07F0  3041               	movlw	low (__pbssBANK0+33)
   172  07F1  120A  118A  2461  120A  118A  	fcall	clear_ram0
   173                           
   174                           ; Clear objects allocated to COMMON
   175  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   176  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   177  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   178  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   179  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   180  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   181  07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184  07FC                     __end_of__initialization:
   185  07FC  0183               	clrf	3
   186  07FD  120A  118A  2CED   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMMON
   189  0070                     __pbssCOMMON:
   190  0070                     DIO_Write@first_powerup:
   191  0070                     	ds	1
   192  0071                     DIO_init@first_powerup_init:
   193  0071                     	ds	1
   194  0072                     _is_init:
   195  0072                     	ds	1
   196  0073                     _TIMER0OVF_INT:
   197  0073                     	ds	1
   198  0074                     _data2:
   199  0074                     	ds	1
   200  0075                     _data:
   201  0075                     	ds	1
   202                           
   203                           	psect	bssBANK0
   204  0020                     __pbssBANK0:
   205  0020                     _Timer_Deinit_Configuration2:
   206  0020                     	ds	5
   207  0025                     _Timer_Deinit_Configuration1:
   208  0025                     	ds	5
   209  002A                     _Timer_Deinit_Configuration0:
   210  002A                     	ds	5
   211  002F                     _Timer_Configuration2:
   212  002F                     	ds	5
   213  0034                     _Timer_Configuration1:
   214  0034                     	ds	5
   215  0039                     _Dio_configutation_E:
   216  0039                     	ds	4
   217  003D                     _Dio_configutation_D:
   218  003D                     	ds	4
   219                           
   220                           	psect	dataBANK0
   221  0041                     __pdataBANK0:
   222  0041                     _Timer_Configuration0:
   223  0041                     	ds	5
   224  0046                     _Dio_configutation_A:
   225  0046                     	ds	4
   226  004A                     _Dio_configutation_C:
   227  004A                     	ds	4
   228  004E                     _Dio_configutation_B:
   229  004E                     	ds	4
   230                           
   231                           	psect	inittext
   232  047A                     init_fetch0:	
   233                           ;	Called with low address in FSR and high address in W
   234                           
   235  047A  087E               	movf	btemp,w
   236  047B  008A               	movwf	10
   237  047C  087F               	movf	btemp+1,w
   238  047D  0082               	movwf	2
   239  047E                     init_ram0:	
   240                           ;Called with:
   241                           ;	high address of idata address in btemp 
   242                           ;	low address of idata address in btemp+1 
   243                           ;	low address of data in FSR
   244                           ;	high address + 1 of data in btemp-1
   245                           
   246  047E  120A  118A  247A  120A  118A  	fcall	init_fetch0
   247  0483  0080               	movwf	0
   248  0484  0A84               	incf	4,f
   249  0485  0804               	movf	4,w
   250  0486  067D               	xorwf	btemp+-1,w
   251  0487  1903               	btfsc	3,2
   252  0488  3400               	retlw	0
   253  0489  0AFF               	incf	btemp+1,f
   254  048A  1903               	btfsc	3,2
   255  048B  0AFE               	incf	btemp,f
   256  048C  2C7E               	goto	init_ram0
   257                           
   258                           	psect	clrtext
   259  0461                     clear_ram0:	
   260                           ;	Called with FSR containing the base address, and
   261                           ;	W with the last address+1
   262                           
   263  0461  0064               	clrwdt	;clear the watchdog before getting into this loop
   264  0462                     clrloop0:
   265  0462  0180               	clrf	0	;clear RAM location pointed to by FSR
   266  0463  0A84               	incf	4,f	;increment pointer
   267  0464  0604               	xorwf	4,w	;XOR with final address
   268  0465  1903               	btfsc	3,2	;have we reached the end yet?
   269  0466  3400               	retlw	0	;all done for this memory range, return
   270  0467  0604               	xorwf	4,w	;XOR again to restore value
   271  0468  2C62               	goto	clrloop0	;do the next byte
   272                           
   273                           	psect	cstackCOMMON
   274  0076                     __pcstackCOMMON:
   275  0076                     ?_Timer_Init:
   276  0076                     ??_Timer_Init:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0076                     ?_DIO_init:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0076                     ??_DIO_init:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0076                     ?_DIO_Write:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0076                     ?_DIO_Read:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0076                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0076                     DIO_Write@pins:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0076                     DIO_Read@pins:	
   298                           ; 1 bytes @ 0x0
   299                           
   300                           
   301                           ; 1 bytes @ 0x0
   302  0076                     	ds	1
   303  0077                     DIO_Write@value:
   304  0077                     DIO_Read@data:	
   305                           ; 1 bytes @ 0x1
   306                           
   307                           
   308                           ; 1 bytes @ 0x1
   309  0077                     	ds	1
   310  0078                     ??_DIO_Write:
   311  0078                     ??_DIO_Read:	
   312                           ; 1 bytes @ 0x2
   313                           
   314  0078                     Timer_Init@ret_error:	
   315                           ; 1 bytes @ 0x2
   316                           
   317  0078                     DIO_init@ret_error:	
   318                           ; 1 bytes @ 0x2
   319                           
   320                           
   321                           ; 1 bytes @ 0x2
   322  0078                     	ds	1
   323  0079                     Timer_Init@Timer_cfg:
   324  0079                     DIO_init@DIO_info:	
   325                           ; 1 bytes @ 0x3
   326                           
   327                           
   328                           ; 1 bytes @ 0x3
   329  0079                     	ds	1
   330  007A                     DIO_Write@ret_error:
   331  007A                     DIO_Read@GPIO:	
   332                           ; 1 bytes @ 0x4
   333                           
   334                           
   335                           ; 1 bytes @ 0x4
   336  007A                     	ds	1
   337  007B                     DIO_Write@GPIO:
   338  007B                     DIO_Read@ret_error:	
   339                           ; 1 bytes @ 0x5
   340                           
   341                           
   342                           ; 1 bytes @ 0x5
   343  007B                     	ds	1
   344  007C                     ??_main:
   345                           
   346                           	psect	maintext
   347  04ED                     __pmaintext:	
   348                           ; 1 bytes @ 0x6
   349 ;;
   350 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   351 ;;
   352 ;; *************** function _main *****************
   353 ;; Defined at:
   354 ;;		line 13 in file "main.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   363 ;; Tracked objects:
   364 ;;		On entry : B00/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   368 ;;      Params:         0       0       0       0       0
   369 ;;      Locals:         0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0
   371 ;;      Totals:         0       0       0       0       0
   372 ;;Total ram usage:        0 bytes
   373 ;; Hardware stack levels required when called:    1
   374 ;; This function calls:
   375 ;;		_DIO_Read
   376 ;;		_DIO_Write
   377 ;;		_DIO_init
   378 ;;		_Timer_Init
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _main
   386  04ED                     _main:
   387  04ED                     l2596:	
   388                           ;incstack = 0
   389                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   390                           
   391                           
   392                           ;main.c: 15:     ret=Timer_Init(&Timer_Configuration0);
   393  04ED  3041               	movlw	(low (_Timer_Configuration0| 0))& (0+255)
   394  04EE  120A  118A  2561  120A  118A  	fcall	_Timer_Init
   395  04F3  00FF               	movwf	btemp+1
   396  04F4  087F               	movf	btemp+1,w
   397  04F5  00FC               	movwf	_ret
   398                           
   399                           ;main.c: 16:    ret= DIO_init (&Dio_configutation_B);
   400  04F6  304E               	movlw	(low (_Dio_configutation_B| 0))& (0+255)
   401  04F7  120A  118A  26EA  120A  118A  	fcall	_DIO_init
   402  04FC  00FF               	movwf	btemp+1
   403  04FD  087F               	movf	btemp+1,w
   404  04FE  00FC               	movwf	_ret
   405                           
   406                           ;main.c: 17:    ret= DIO_init (&Dio_configutation_C);
   407  04FF  304A               	movlw	(low (_Dio_configutation_C| 0))& (0+255)
   408  0500  120A  118A  26EA  120A  118A  	fcall	_DIO_init
   409  0505  00FF               	movwf	btemp+1
   410  0506  087F               	movf	btemp+1,w
   411  0507  00FC               	movwf	_ret
   412                           
   413                           ;main.c: 18:    ret= DIO_init (&Dio_configutation_A);
   414  0508  3046               	movlw	(low (_Dio_configutation_A| 0))& (0+255)
   415  0509  120A  118A  26EA  120A  118A  	fcall	_DIO_init
   416  050E  00FF               	movwf	btemp+1
   417  050F  087F               	movf	btemp+1,w
   418  0510  00FC               	movwf	_ret
   419  0511                     l192:	
   420                           ;main.c: 20:    while (1)
   421                           
   422                           
   423                           ;main.c: 21:     {;main.c: 23:     ret=DIO_Read (2,0x10, &data);
   424  0511  3010               	movlw	16
   425  0512  00FF               	movwf	btemp+1
   426  0513  087F               	movf	btemp+1,w
   427  0514  00F6               	movwf	DIO_Read@pins
   428  0515  3075               	movlw	(low (_data| 0))& (0+255)
   429  0516  00FF               	movwf	btemp+1
   430  0517  087F               	movf	btemp+1,w
   431  0518  00F7               	movwf	DIO_Read@data
   432  0519  3002               	movlw	2
   433  051A  120A  118A  248D  120A  118A  	fcall	_DIO_Read
   434  051F  00FF               	movwf	btemp+1
   435  0520  087F               	movf	btemp+1,w
   436  0521  00FC               	movwf	_ret
   437                           
   438                           ;main.c: 24:     ret=DIO_Read (0,0x20, &data2);
   439  0522  3020               	movlw	32
   440  0523  00FF               	movwf	btemp+1
   441  0524  087F               	movf	btemp+1,w
   442  0525  00F6               	movwf	DIO_Read@pins
   443  0526  3074               	movlw	(low (_data2| 0))& (0+255)
   444  0527  00FF               	movwf	btemp+1
   445  0528  087F               	movf	btemp+1,w
   446  0529  00F7               	movwf	DIO_Read@data
   447  052A  3000               	movlw	0
   448  052B  120A  118A  248D  120A  118A  	fcall	_DIO_Read
   449  0530  00FF               	movwf	btemp+1
   450  0531  087F               	movf	btemp+1,w
   451  0532  00FC               	movwf	_ret
   452  0533                     l2598:
   453                           
   454                           ;main.c: 25:     if ((data == 1) &&(data2 == 1)) {
   455  0533  0375               	decf	_data,w
   456  0534  1D03               	btfss	3,2
   457  0535  2D37               	goto	u191
   458  0536  2D38               	goto	u190
   459  0537                     u191:
   460  0537  2D4F               	goto	l2604
   461  0538                     u190:
   462  0538                     l2600:
   463  0538  0374               	decf	_data2,w
   464  0539  1D03               	btfss	3,2
   465  053A  2D3C               	goto	u201
   466  053B  2D3D               	goto	u200
   467  053C                     u201:
   468  053C  2D4F               	goto	l2604
   469  053D                     u200:
   470  053D                     l2602:
   471                           
   472                           ;main.c: 26:     ret = DIO_Write (1,0x04|0x08,0xFF);
   473  053D  300C               	movlw	12
   474  053E  00FF               	movwf	btemp+1
   475  053F  087F               	movf	btemp+1,w
   476  0540  00F6               	movwf	DIO_Write@pins
   477  0541  30FF               	movlw	255
   478  0542  00FF               	movwf	btemp+1
   479  0543  087F               	movf	btemp+1,w
   480  0544  00F7               	movwf	DIO_Write@value
   481  0545  3001               	movlw	1
   482  0546  120A  118A  261C  120A  118A  	fcall	_DIO_Write
   483  054B  00FF               	movwf	btemp+1
   484  054C  087F               	movf	btemp+1,w
   485  054D  00FC               	movwf	_ret
   486                           
   487                           ;main.c: 27:     }else{
   488  054E  2D11               	goto	l192
   489  054F                     l2604:
   490                           
   491                           ;main.c: 28:       ret = DIO_Write (1,0x04|0x08,0);
   492  054F  300C               	movlw	12
   493  0550  00FF               	movwf	btemp+1
   494  0551  087F               	movf	btemp+1,w
   495  0552  00F6               	movwf	DIO_Write@pins
   496  0553  01F7               	clrf	DIO_Write@value
   497  0554  3001               	movlw	1
   498  0555  120A  118A  261C  120A  118A  	fcall	_DIO_Write
   499  055A  00FF               	movwf	btemp+1
   500  055B  087F               	movf	btemp+1,w
   501  055C  00FC               	movwf	_ret
   502  055D  2D11               	goto	l192
   503  055E  120A  118A  2800   	ljmp	start
   504  0561                     __end_of_main:
   505                           
   506                           	psect	text1
   507  0561                     __ptext1:	
   508 ;; *************** function _Timer_Init *****************
   509 ;; Defined at:
   510 ;;		line 13 in file "timer.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  Timer_cfg       1    wreg     PTR struct Timer_cfg_s
   513 ;;		 -> Timer_Configuration0(5), 
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  Timer_cfg       1    3[COMMON] PTR struct Timer_cfg_s
   516 ;;		 -> Timer_Configuration0(5), 
   517 ;;  ret_error       1    2[COMMON] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      unsigned char 
   520 ;; Registers used:
   521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         2       0       0       0       0
   529 ;;      Temps:          2       0       0       0       0
   530 ;;      Totals:         4       0       0       0       0
   531 ;;Total ram usage:        4 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           
   541                           ;psect for function _Timer_Init
   542  0561                     _Timer_Init:
   543                           
   544                           ;incstack = 0
   545                           ; Regs used in _Timer_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
   546                           ;Timer_Init@Timer_cfg stored from wreg
   547  0561  00F9               	movwf	Timer_Init@Timer_cfg
   548  0562                     l1666:
   549                           
   550                           ;timer.c: 13: ERROR_STATUS Timer_Init(Timer_cfg_s* Timer_cfg);timer.c: 14: {;timer.c: 15
      +                          : uint8_t ret_error = 0;
   551  0562  01F8               	clrf	Timer_Init@ret_error
   552                           
   553                           ;timer.c: 17: switch (Timer_cfg->Timer_CH_NO)
   554  0563  2E04               	goto	l1704
   555  0564                     l1668:
   556                           
   557                           ;timer.c: 20:     *((reg_type8_t)(0x0081)) &= (Timer_cfg -> Timer_Mode);
   558  0564  0A79               	incf	Timer_Init@Timer_cfg,w
   559  0565  0084               	movwf	4
   560  0566  0800               	movf	0,w
   561  0567  00FF               	movwf	btemp+1
   562  0568  087F               	movf	btemp+1,w
   563  0569  1683               	bsf	3,5	;RP0=1, select bank1
   564  056A  1303               	bcf	3,6	;RP1=0, select bank1
   565  056B  0581               	andwf	1,f	;volatile
   566                           
   567                           ;timer.c: 21:         switch (Timer_cfg->Timer_Polling_Or_Interrupt)
   568  056C  2D81               	goto	l1676
   569  056D                     l8:	
   570                           ;timer.c: 22:         {;timer.c: 23:             case 0x20:
   571                           
   572                           
   573                           ;timer.c: 24:             *((reg_type8_t)(0x000B)) |=0x20;
   574  056D  168B               	bsf	11,5	;volatile
   575                           
   576                           ;timer.c: 25:             *((reg_type8_t)(0x000B)) |= 0x80;
   577  056E  178B               	bsf	11,7	;volatile
   578  056F                     l1670:
   579                           
   580                           ;timer.c: 26:             TIMER0OVF_INT = ( Timer_cfg -> Timer_Cbk_ptr);
   581  056F  0879               	movf	Timer_Init@Timer_cfg,w
   582  0570  3E04               	addlw	4
   583  0571  0084               	movwf	4
   584  0572  0800               	movf	0,w
   585  0573  00FF               	movwf	btemp+1
   586  0574  087F               	movf	btemp+1,w
   587  0575  00F3               	movwf	_TIMER0OVF_INT
   588                           
   589                           ;timer.c: 27:             break;
   590  0576  2E1A               	goto	l1706
   591  0577                     l1672:
   592                           
   593                           ;timer.c: 29:             *((reg_type8_t)(0x000B)) &= 0xDF;
   594  0577  30DF               	movlw	223
   595  0578  00FF               	movwf	btemp+1
   596  0579  087F               	movf	btemp+1,w
   597  057A  058B               	andwf	11,f	;volatile
   598                           
   599                           ;timer.c: 30:             break;
   600  057B  2E1A               	goto	l1706
   601  057C                     l1674:
   602                           
   603                           ;timer.c: 32:             ret_error += 1 +24;
   604  057C  3019               	movlw	25
   605  057D  00FF               	movwf	btemp+1
   606  057E  087F               	movf	btemp+1,w
   607  057F  07F8               	addwf	Timer_Init@ret_error,f
   608                           
   609                           ;timer.c: 34:         }
   610  0580  2E1A               	goto	l1706
   611  0581                     l1676:
   612  0581  0879               	movf	Timer_Init@Timer_cfg,w
   613  0582  3E02               	addlw	2
   614  0583  0084               	movwf	4
   615  0584  0800               	movf	0,w
   616  0585  00F6               	movwf	??_Timer_Init
   617  0586  01F7               	clrf	??_Timer_Init+1
   618                           
   619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   620                           ; Switch size 1, requested type "simple"
   621                           ; Number of cases is 1, Range of values is 0 to 0
   622                           ; switch strategies available:
   623                           ; Name         Instructions Cycles
   624                           ; simple_byte            4     3 (average)
   625                           ; direct_byte           11     8 (fixed)
   626                           ; jumptable            260     6 (fixed)
   627                           ;	Chosen strategy is simple_byte
   628  0587  0877               	movf	??_Timer_Init+1,w
   629  0588  3A00               	xorlw	0	; case 0
   630  0589  1903               	skipnz
   631  058A  2D8C               	goto	l3106
   632  058B  2D7C               	goto	l1674
   633  058C                     l3106:
   634                           
   635                           ; Switch size 1, requested type "simple"
   636                           ; Number of cases is 2, Range of values is 32 to 223
   637                           ; switch strategies available:
   638                           ; Name         Instructions Cycles
   639                           ; simple_byte            7     4 (average)
   640                           ; jumptable            263     9 (fixed)
   641                           ;	Chosen strategy is simple_byte
   642  058C  0876               	movf	??_Timer_Init,w
   643  058D  3A20               	xorlw	32	; case 32
   644  058E  1903               	skipnz
   645  058F  2D6D               	goto	l8
   646  0590  3AFF               	xorlw	255	; case 223
   647  0591  1903               	skipnz
   648  0592  2D77               	goto	l1672
   649  0593  2D7C               	goto	l1674
   650  0594                     l1680:
   651  0594  0879               	movf	Timer_Init@Timer_cfg,w
   652  0595  3E02               	addlw	2
   653  0596  0084               	movwf	4
   654  0597  0800               	movf	0,w
   655  0598  00F6               	movwf	??_Timer_Init
   656  0599  01F7               	clrf	??_Timer_Init+1
   657                           
   658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   659                           ; Switch size 1, requested type "simple"
   660                           ; Number of cases is 1, Range of values is 0 to 0
   661                           ; switch strategies available:
   662                           ; Name         Instructions Cycles
   663                           ; simple_byte            4     3 (average)
   664                           ; direct_byte           11     8 (fixed)
   665                           ; jumptable            260     6 (fixed)
   666                           ;	Chosen strategy is simple_byte
   667  059A  0877               	movf	??_Timer_Init+1,w
   668  059B  3A00               	xorlw	0	; case 0
   669  059C  1903               	skipnz
   670  059D  2D9F               	goto	l3108
   671  059E  2E1A               	goto	l1706
   672  059F                     l3108:
   673                           
   674                           ; Switch size 1, requested type "simple"
   675                           ; Number of cases is 2, Range of values is 32 to 223
   676                           ; switch strategies available:
   677                           ; Name         Instructions Cycles
   678                           ; simple_byte            7     4 (average)
   679                           ; jumptable            263     9 (fixed)
   680                           ;	Chosen strategy is simple_byte
   681  059F  0876               	movf	??_Timer_Init,w
   682  05A0  3A20               	xorlw	32	; case 32
   683  05A1  1903               	skipnz
   684  05A2  2E1A               	goto	l1706
   685  05A3  3AFF               	xorlw	255	; case 223
   686  05A4  1903               	skipnz
   687  05A5  2E1A               	goto	l1706
   688  05A6  2E1A               	goto	l1706
   689  05A7                     l1684:
   690  05A7  0879               	movf	Timer_Init@Timer_cfg,w
   691  05A8  3E02               	addlw	2
   692  05A9  0084               	movwf	4
   693  05AA  0800               	movf	0,w
   694  05AB  00F6               	movwf	??_Timer_Init
   695  05AC  01F7               	clrf	??_Timer_Init+1
   696                           
   697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   698                           ; Switch size 1, requested type "simple"
   699                           ; Number of cases is 1, Range of values is 0 to 0
   700                           ; switch strategies available:
   701                           ; Name         Instructions Cycles
   702                           ; simple_byte            4     3 (average)
   703                           ; direct_byte           11     8 (fixed)
   704                           ; jumptable            260     6 (fixed)
   705                           ;	Chosen strategy is simple_byte
   706  05AD  0877               	movf	??_Timer_Init+1,w
   707  05AE  3A00               	xorlw	0	; case 0
   708  05AF  1903               	skipnz
   709  05B0  2DB2               	goto	l3110
   710  05B1  2E1A               	goto	l1706
   711  05B2                     l3110:
   712                           
   713                           ; Switch size 1, requested type "simple"
   714                           ; Number of cases is 2, Range of values is 32 to 223
   715                           ; switch strategies available:
   716                           ; Name         Instructions Cycles
   717                           ; simple_byte            7     4 (average)
   718                           ; jumptable            263     9 (fixed)
   719                           ;	Chosen strategy is simple_byte
   720  05B2  0876               	movf	??_Timer_Init,w
   721  05B3  3A20               	xorlw	32	; case 32
   722  05B4  1903               	skipnz
   723  05B5  2E1A               	goto	l1706
   724  05B6  3AFF               	xorlw	255	; case 223
   725  05B7  1903               	skipnz
   726  05B8  2E1A               	goto	l1706
   727  05B9  2E1A               	goto	l1706
   728  05BA                     l1688:
   729  05BA  0A79               	incf	Timer_Init@Timer_cfg,w
   730  05BB  0084               	movwf	4
   731  05BC  0800               	movf	0,w
   732  05BD  00F6               	movwf	??_Timer_Init
   733  05BE  01F7               	clrf	??_Timer_Init+1
   734                           
   735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   736                           ; Switch size 1, requested type "simple"
   737                           ; Number of cases is 1, Range of values is 0 to 0
   738                           ; switch strategies available:
   739                           ; Name         Instructions Cycles
   740                           ; simple_byte            4     3 (average)
   741                           ; direct_byte           11     8 (fixed)
   742                           ; jumptable            260     6 (fixed)
   743                           ;	Chosen strategy is simple_byte
   744  05BF  0877               	movf	??_Timer_Init+1,w
   745  05C0  3A00               	xorlw	0	; case 0
   746  05C1  1903               	skipnz
   747  05C2  2DC4               	goto	l3112
   748  05C3  2E1A               	goto	l1706
   749  05C4                     l3112:
   750                           
   751                           ; Switch size 1, requested type "simple"
   752                           ; Number of cases is 2, Range of values is 0 to 1
   753                           ; switch strategies available:
   754                           ; Name         Instructions Cycles
   755                           ; simple_byte            7     4 (average)
   756                           ; direct_byte           14     8 (fixed)
   757                           ; jumptable            260     6 (fixed)
   758                           ;	Chosen strategy is simple_byte
   759  05C4  0876               	movf	??_Timer_Init,w
   760  05C5  3A00               	xorlw	0	; case 0
   761  05C6  1903               	skipnz
   762  05C7  2D94               	goto	l1680
   763  05C8  3A01               	xorlw	1	; case 1
   764  05C9  1903               	skipnz
   765  05CA  2DA7               	goto	l1684
   766  05CB  2E1A               	goto	l1706
   767  05CC                     l1692:
   768  05CC  0879               	movf	Timer_Init@Timer_cfg,w
   769  05CD  3E02               	addlw	2
   770  05CE  0084               	movwf	4
   771  05CF  0800               	movf	0,w
   772  05D0  00F6               	movwf	??_Timer_Init
   773  05D1  01F7               	clrf	??_Timer_Init+1
   774                           
   775                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   776                           ; Switch size 1, requested type "simple"
   777                           ; Number of cases is 1, Range of values is 0 to 0
   778                           ; switch strategies available:
   779                           ; Name         Instructions Cycles
   780                           ; simple_byte            4     3 (average)
   781                           ; direct_byte           11     8 (fixed)
   782                           ; jumptable            260     6 (fixed)
   783                           ;	Chosen strategy is simple_byte
   784  05D2  0877               	movf	??_Timer_Init+1,w
   785  05D3  3A00               	xorlw	0	; case 0
   786  05D4  1903               	skipnz
   787  05D5  2DD7               	goto	l3114
   788  05D6  2E1A               	goto	l1706
   789  05D7                     l3114:
   790                           
   791                           ; Switch size 1, requested type "simple"
   792                           ; Number of cases is 2, Range of values is 32 to 223
   793                           ; switch strategies available:
   794                           ; Name         Instructions Cycles
   795                           ; simple_byte            7     4 (average)
   796                           ; jumptable            263     9 (fixed)
   797                           ;	Chosen strategy is simple_byte
   798  05D7  0876               	movf	??_Timer_Init,w
   799  05D8  3A20               	xorlw	32	; case 32
   800  05D9  1903               	skipnz
   801  05DA  2E1A               	goto	l1706
   802  05DB  3AFF               	xorlw	255	; case 223
   803  05DC  1903               	skipnz
   804  05DD  2E1A               	goto	l1706
   805  05DE  2E1A               	goto	l1706
   806  05DF                     l1696:
   807  05DF  0879               	movf	Timer_Init@Timer_cfg,w
   808  05E0  3E02               	addlw	2
   809  05E1  0084               	movwf	4
   810  05E2  0800               	movf	0,w
   811  05E3  00F6               	movwf	??_Timer_Init
   812  05E4  01F7               	clrf	??_Timer_Init+1
   813                           
   814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   815                           ; Switch size 1, requested type "simple"
   816                           ; Number of cases is 1, Range of values is 0 to 0
   817                           ; switch strategies available:
   818                           ; Name         Instructions Cycles
   819                           ; simple_byte            4     3 (average)
   820                           ; direct_byte           11     8 (fixed)
   821                           ; jumptable            260     6 (fixed)
   822                           ;	Chosen strategy is simple_byte
   823  05E5  0877               	movf	??_Timer_Init+1,w
   824  05E6  3A00               	xorlw	0	; case 0
   825  05E7  1903               	skipnz
   826  05E8  2DEA               	goto	l3116
   827  05E9  2E1A               	goto	l1706
   828  05EA                     l3116:
   829                           
   830                           ; Switch size 1, requested type "simple"
   831                           ; Number of cases is 2, Range of values is 32 to 223
   832                           ; switch strategies available:
   833                           ; Name         Instructions Cycles
   834                           ; simple_byte            7     4 (average)
   835                           ; jumptable            263     9 (fixed)
   836                           ;	Chosen strategy is simple_byte
   837  05EA  0876               	movf	??_Timer_Init,w
   838  05EB  3A20               	xorlw	32	; case 32
   839  05EC  1903               	skipnz
   840  05ED  2E1A               	goto	l1706
   841  05EE  3AFF               	xorlw	255	; case 223
   842  05EF  1903               	skipnz
   843  05F0  2E1A               	goto	l1706
   844  05F1  2E1A               	goto	l1706
   845  05F2                     l1700:
   846  05F2  0A79               	incf	Timer_Init@Timer_cfg,w
   847  05F3  0084               	movwf	4
   848  05F4  0800               	movf	0,w
   849  05F5  00F6               	movwf	??_Timer_Init
   850  05F6  01F7               	clrf	??_Timer_Init+1
   851                           
   852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   853                           ; Switch size 1, requested type "simple"
   854                           ; Number of cases is 1, Range of values is 0 to 0
   855                           ; switch strategies available:
   856                           ; Name         Instructions Cycles
   857                           ; simple_byte            4     3 (average)
   858                           ; direct_byte           11     8 (fixed)
   859                           ; jumptable            260     6 (fixed)
   860                           ;	Chosen strategy is simple_byte
   861  05F7  0877               	movf	??_Timer_Init+1,w
   862  05F8  3A00               	xorlw	0	; case 0
   863  05F9  1903               	skipnz
   864  05FA  2DFC               	goto	l3118
   865  05FB  2E1A               	goto	l1706
   866  05FC                     l3118:
   867                           
   868                           ; Switch size 1, requested type "simple"
   869                           ; Number of cases is 2, Range of values is 0 to 1
   870                           ; switch strategies available:
   871                           ; Name         Instructions Cycles
   872                           ; simple_byte            7     4 (average)
   873                           ; direct_byte           14     8 (fixed)
   874                           ; jumptable            260     6 (fixed)
   875                           ;	Chosen strategy is simple_byte
   876  05FC  0876               	movf	??_Timer_Init,w
   877  05FD  3A00               	xorlw	0	; case 0
   878  05FE  1903               	skipnz
   879  05FF  2DCC               	goto	l1692
   880  0600  3A01               	xorlw	1	; case 1
   881  0601  1903               	skipnz
   882  0602  2DDF               	goto	l1696
   883  0603  2E1A               	goto	l1706
   884  0604                     l1704:
   885  0604  0879               	movf	Timer_Init@Timer_cfg,w
   886  0605  0084               	movwf	4
   887  0606  1383               	bcf	3,7	;select IRP bank0
   888  0607  0800               	movf	0,w
   889  0608  00F6               	movwf	??_Timer_Init
   890  0609  01F7               	clrf	??_Timer_Init+1
   891                           
   892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   893                           ; Switch size 1, requested type "simple"
   894                           ; Number of cases is 1, Range of values is 0 to 0
   895                           ; switch strategies available:
   896                           ; Name         Instructions Cycles
   897                           ; simple_byte            4     3 (average)
   898                           ; direct_byte           11     8 (fixed)
   899                           ; jumptable            260     6 (fixed)
   900                           ;	Chosen strategy is simple_byte
   901  060A  0877               	movf	??_Timer_Init+1,w
   902  060B  3A00               	xorlw	0	; case 0
   903  060C  1903               	skipnz
   904  060D  2E0F               	goto	l3120
   905  060E  2E1A               	goto	l1706
   906  060F                     l3120:
   907                           
   908                           ; Switch size 1, requested type "simple"
   909                           ; Number of cases is 3, Range of values is 0 to 2
   910                           ; switch strategies available:
   911                           ; Name         Instructions Cycles
   912                           ; simple_byte           10     6 (average)
   913                           ; direct_byte           17     8 (fixed)
   914                           ; jumptable            260     6 (fixed)
   915                           ;	Chosen strategy is simple_byte
   916  060F  0876               	movf	??_Timer_Init,w
   917  0610  3A00               	xorlw	0	; case 0
   918  0611  1903               	skipnz
   919  0612  2D64               	goto	l1668
   920  0613  3A01               	xorlw	1	; case 1
   921  0614  1903               	skipnz
   922  0615  2DBA               	goto	l1688
   923  0616  3A03               	xorlw	3	; case 2
   924  0617  1903               	skipnz
   925  0618  2DF2               	goto	l1700
   926  0619  2E1A               	goto	l1706
   927  061A                     l1706:
   928                           
   929                           ;timer.c: 108: return ret_error;
   930  061A  0878               	movf	Timer_Init@ret_error,w
   931  061B                     l42:
   932  061B  0008               	return
   933  061C                     __end_of_Timer_Init:
   934                           
   935                           	psect	text2
   936  06EA                     __ptext2:	
   937 ;; *************** function _DIO_init *****************
   938 ;; Defined at:
   939 ;;		line 11 in file "DIO.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  DIO_info        1    wreg     PTR struct DIO_Cfg_s
   942 ;;		 -> Dio_configutation_A(4), Dio_configutation_C(4), Dio_configutation_B(4), 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  DIO_info        1    3[COMMON] PTR struct DIO_Cfg_s
   945 ;;		 -> Dio_configutation_A(4), Dio_configutation_C(4), Dio_configutation_B(4), 
   946 ;;  ret_error       1    2[COMMON] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      unsigned char 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         2       0       0       0       0
   958 ;;      Temps:          2       0       0       0       0
   959 ;;      Totals:         4       0       0       0       0
   960 ;;Total ram usage:        4 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _DIO_init
   971  06EA                     _DIO_init:
   972                           
   973                           ;incstack = 0
   974                           ; Regs used in _DIO_init: [wreg-fsr0h+status,2+status,0+btemp+1]
   975                           ;DIO_init@DIO_info stored from wreg
   976  06EA  00F9               	movwf	DIO_init@DIO_info
   977  06EB                     l2490:
   978                           
   979                           ;DIO.c: 11: ERROR_STATUS DIO_init (DIO_Cfg_s *DIO_info);DIO.c: 12: {;DIO.c: 13: uint8_t 
      +                          ret_error=0;
   980  06EB  01F8               	clrf	DIO_init@ret_error
   981  06EC                     l2492:
   982                           
   983                           ;DIO.c: 14: static uint8_t first_powerup_init = 0;;DIO.c: 15: is_init=1;
   984  06EC  01F2               	clrf	_is_init
   985  06ED  0AF2               	incf	_is_init,f
   986  06EE                     l2494:
   987                           
   988                           ;DIO.c: 16:  if (first_powerup_init == 0) {
   989  06EE  0871               	movf	DIO_init@first_powerup_init,w
   990  06EF  1D03               	btfss	3,2
   991  06F0  2EF2               	goto	u171
   992  06F1  2EF3               	goto	u170
   993  06F2                     u171:
   994  06F2  2F28               	goto	l2514
   995  06F3                     u170:
   996  06F3  2F08               	goto	l2510
   997  06F4                     l2498:
   998                           
   999                           ;DIO.c: 20:   *((reg_type8_t)(0x0085))=0x00;
  1000  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  1001  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  1002  06F6  0185               	clrf	5	;volatile
  1003                           
  1004                           ;DIO.c: 21:       break;
  1005  06F7  2F24               	goto	l2512
  1006  06F8                     l2500:
  1007                           
  1008                           ;DIO.c: 23:   *((reg_type8_t)(0x0086))=0x00;
  1009  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  1010  06F9  1303               	bcf	3,6	;RP1=0, select bank1
  1011  06FA  0186               	clrf	6	;volatile
  1012                           
  1013                           ;DIO.c: 24:       break;
  1014  06FB  2F24               	goto	l2512
  1015  06FC                     l2502:
  1016                           
  1017                           ;DIO.c: 26:   *((reg_type8_t)(0x0087))=0x00;
  1018  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  1019  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  1020  06FE  0187               	clrf	7	;volatile
  1021                           
  1022                           ;DIO.c: 27:       break;
  1023  06FF  2F24               	goto	l2512
  1024  0700                     l2504:
  1025                           
  1026                           ;DIO.c: 29:   *((reg_type8_t)(0x0088))=0x00;
  1027  0700  1683               	bsf	3,5	;RP0=1, select bank1
  1028  0701  1303               	bcf	3,6	;RP1=0, select bank1
  1029  0702  0188               	clrf	8	;volatile
  1030                           
  1031                           ;DIO.c: 30:       break;
  1032  0703  2F24               	goto	l2512
  1033  0704                     l2506:
  1034                           
  1035                           ;DIO.c: 32:   *((reg_type8_t)(0x0089))=0x00;
  1036  0704  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0705  1303               	bcf	3,6	;RP1=0, select bank1
  1038  0706  0189               	clrf	9	;volatile
  1039                           
  1040                           ;DIO.c: 33:       break;
  1041  0707  2F24               	goto	l2512
  1042  0708                     l2510:
  1043  0708  0879               	movf	DIO_init@DIO_info,w
  1044  0709  0084               	movwf	4
  1045  070A  1383               	bcf	3,7	;select IRP bank0
  1046  070B  0800               	movf	0,w
  1047  070C  00F6               	movwf	??_DIO_init
  1048  070D  01F7               	clrf	??_DIO_init+1
  1049                           
  1050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 1, Range of values is 0 to 0
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte            4     3 (average)
  1056                           ; direct_byte           11     8 (fixed)
  1057                           ; jumptable            260     6 (fixed)
  1058                           ;	Chosen strategy is simple_byte
  1059  070E  0877               	movf	??_DIO_init+1,w
  1060  070F  3A00               	xorlw	0	; case 0
  1061  0710  1903               	skipnz
  1062  0711  2F13               	goto	l3122
  1063  0712  2F24               	goto	l2512
  1064  0713                     l3122:
  1065                           
  1066                           ; Switch size 1, requested type "simple"
  1067                           ; Number of cases is 5, Range of values is 0 to 4
  1068                           ; switch strategies available:
  1069                           ; Name         Instructions Cycles
  1070                           ; simple_byte           16     9 (average)
  1071                           ; direct_byte           23     8 (fixed)
  1072                           ; jumptable            260     6 (fixed)
  1073                           ;	Chosen strategy is simple_byte
  1074  0713  0876               	movf	??_DIO_init,w
  1075  0714  3A00               	xorlw	0	; case 0
  1076  0715  1903               	skipnz
  1077  0716  2EF4               	goto	l2498
  1078  0717  3A01               	xorlw	1	; case 1
  1079  0718  1903               	skipnz
  1080  0719  2EF8               	goto	l2500
  1081  071A  3A03               	xorlw	3	; case 2
  1082  071B  1903               	skipnz
  1083  071C  2EFC               	goto	l2502
  1084  071D  3A01               	xorlw	1	; case 3
  1085  071E  1903               	skipnz
  1086  071F  2F00               	goto	l2504
  1087  0720  3A07               	xorlw	7	; case 4
  1088  0721  1903               	skipnz
  1089  0722  2F04               	goto	l2506
  1090  0723  2F24               	goto	l2512
  1091  0724                     l2512:
  1092                           
  1093                           ;DIO.c: 35:   first_powerup_init++;
  1094  0724  3001               	movlw	1
  1095  0725  00FF               	movwf	btemp+1
  1096  0726  087F               	movf	btemp+1,w
  1097  0727  07F1               	addwf	DIO_init@first_powerup_init,f
  1098  0728                     l2514:
  1099                           
  1100                           ;DIO.c: 37:  *((reg_type8_t)(0x009F)) =( DIO_info -> operation_mode) ;
  1101  0728  0879               	movf	DIO_init@DIO_info,w
  1102  0729  3E03               	addlw	3
  1103  072A  0084               	movwf	4
  1104  072B  1383               	bcf	3,7	;select IRP bank0
  1105  072C  0800               	movf	0,w
  1106  072D  00FF               	movwf	btemp+1
  1107  072E  087F               	movf	btemp+1,w
  1108  072F  1683               	bsf	3,5	;RP0=1, select bank1
  1109  0730  1303               	bcf	3,6	;RP1=0, select bank1
  1110  0731  009F               	movwf	31	;volatile
  1111  0732                     l2516:
  1112                           
  1113                           ;DIO.c: 38: if(DIO_info != ((void *)0)){
  1114  0732  0879               	movf	DIO_init@DIO_info,w
  1115  0733  1903               	btfsc	3,2
  1116  0734  2F36               	goto	u181
  1117  0735  2F37               	goto	u180
  1118  0736                     u181:
  1119  0736  2FDA               	goto	l2558
  1120  0737                     u180:
  1121  0737  2FC8               	goto	l2556
  1122  0738                     l2520:
  1123                           
  1124                           ;DIO.c: 47:            *((reg_type8_t)(0x0085)) |=(DIO_info-> pin) ;
  1125  0738  0879               	movf	DIO_init@DIO_info,w
  1126  0739  3E02               	addlw	2
  1127  073A  0084               	movwf	4
  1128  073B  0800               	movf	0,w
  1129  073C  00FF               	movwf	btemp+1
  1130  073D  087F               	movf	btemp+1,w
  1131  073E  0485               	iorwf	5,f	;volatile
  1132                           
  1133                           ;DIO.c: 48:             break;
  1134  073F  2FDE               	goto	l2560
  1135  0740                     l2522:
  1136                           
  1137                           ;DIO.c: 51:                 *((reg_type8_t)(0x0086)) |=(DIO_info->pin) ;
  1138  0740  0879               	movf	DIO_init@DIO_info,w
  1139  0741  3E02               	addlw	2
  1140  0742  0084               	movwf	4
  1141  0743  0800               	movf	0,w
  1142  0744  00FF               	movwf	btemp+1
  1143  0745  087F               	movf	btemp+1,w
  1144  0746  0486               	iorwf	6,f	;volatile
  1145                           
  1146                           ;DIO.c: 52:             break;
  1147  0747  2FDE               	goto	l2560
  1148  0748                     l2524:
  1149                           
  1150                           ;DIO.c: 55:                 *((reg_type8_t)(0x0087)) |=(DIO_info->pin) ;
  1151  0748  0879               	movf	DIO_init@DIO_info,w
  1152  0749  3E02               	addlw	2
  1153  074A  0084               	movwf	4
  1154  074B  0800               	movf	0,w
  1155  074C  00FF               	movwf	btemp+1
  1156  074D  087F               	movf	btemp+1,w
  1157  074E  0487               	iorwf	7,f	;volatile
  1158                           
  1159                           ;DIO.c: 56:             break;
  1160  074F  2FDE               	goto	l2560
  1161  0750                     l2526:
  1162                           
  1163                           ;DIO.c: 59:                 *((reg_type8_t)(0x0088)) |=(DIO_info->pin) ;
  1164  0750  0879               	movf	DIO_init@DIO_info,w
  1165  0751  3E02               	addlw	2
  1166  0752  0084               	movwf	4
  1167  0753  0800               	movf	0,w
  1168  0754  00FF               	movwf	btemp+1
  1169  0755  087F               	movf	btemp+1,w
  1170  0756  0488               	iorwf	8,f	;volatile
  1171                           
  1172                           ;DIO.c: 60:             break;
  1173  0757  2FDE               	goto	l2560
  1174  0758                     l2528:
  1175                           
  1176                           ;DIO.c: 63:             *((reg_type8_t)(0x0089)) |=(DIO_info->pin) ;
  1177  0758  0879               	movf	DIO_init@DIO_info,w
  1178  0759  3E02               	addlw	2
  1179  075A  0084               	movwf	4
  1180  075B  0800               	movf	0,w
  1181  075C  00FF               	movwf	btemp+1
  1182  075D  087F               	movf	btemp+1,w
  1183  075E  0489               	iorwf	9,f	;volatile
  1184                           
  1185                           ;DIO.c: 64:             break;
  1186  075F  2FDE               	goto	l2560
  1187  0760                     l2530:
  1188                           
  1189                           ;DIO.c: 66:             ret_error += 1 +14;
  1190  0760  300F               	movlw	15
  1191  0761  00FF               	movwf	btemp+1
  1192  0762  087F               	movf	btemp+1,w
  1193  0763  07F8               	addwf	DIO_init@ret_error,f
  1194                           
  1195                           ;DIO.c: 67:             break;
  1196  0764  2FDE               	goto	l2560
  1197  0765                     l2534:
  1198  0765  0879               	movf	DIO_init@DIO_info,w
  1199  0766  0084               	movwf	4
  1200  0767  0800               	movf	0,w
  1201  0768  00F6               	movwf	??_DIO_init
  1202  0769  01F7               	clrf	??_DIO_init+1
  1203                           
  1204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1205                           ; Switch size 1, requested type "simple"
  1206                           ; Number of cases is 1, Range of values is 0 to 0
  1207                           ; switch strategies available:
  1208                           ; Name         Instructions Cycles
  1209                           ; simple_byte            4     3 (average)
  1210                           ; direct_byte           11     8 (fixed)
  1211                           ; jumptable            260     6 (fixed)
  1212                           ;	Chosen strategy is simple_byte
  1213  076A  0877               	movf	??_DIO_init+1,w
  1214  076B  3A00               	xorlw	0	; case 0
  1215  076C  1903               	skipnz
  1216  076D  2F6F               	goto	l3124
  1217  076E  2F60               	goto	l2530
  1218  076F                     l3124:
  1219                           
  1220                           ; Switch size 1, requested type "simple"
  1221                           ; Number of cases is 5, Range of values is 0 to 4
  1222                           ; switch strategies available:
  1223                           ; Name         Instructions Cycles
  1224                           ; simple_byte           16     9 (average)
  1225                           ; direct_byte           23     8 (fixed)
  1226                           ; jumptable            260     6 (fixed)
  1227                           ;	Chosen strategy is simple_byte
  1228  076F  0876               	movf	??_DIO_init,w
  1229  0770  3A00               	xorlw	0	; case 0
  1230  0771  1903               	skipnz
  1231  0772  2F38               	goto	l2520
  1232  0773  3A01               	xorlw	1	; case 1
  1233  0774  1903               	skipnz
  1234  0775  2F40               	goto	l2522
  1235  0776  3A03               	xorlw	3	; case 2
  1236  0777  1903               	skipnz
  1237  0778  2F48               	goto	l2524
  1238  0779  3A01               	xorlw	1	; case 3
  1239  077A  1903               	skipnz
  1240  077B  2F50               	goto	l2526
  1241  077C  3A07               	xorlw	7	; case 4
  1242  077D  1903               	skipnz
  1243  077E  2F58               	goto	l2528
  1244  077F  2F60               	goto	l2530
  1245  0780                     l2536:
  1246                           
  1247                           ;DIO.c: 74:         *((reg_type8_t)(0x0085)) &=(~(DIO_info->pin)) ;
  1248  0780  0879               	movf	DIO_init@DIO_info,w
  1249  0781  3E02               	addlw	2
  1250  0782  0084               	movwf	4
  1251  0783  0900               	comf	0,w
  1252  0784  00FF               	movwf	btemp+1
  1253  0785  087F               	movf	btemp+1,w
  1254  0786  0585               	andwf	5,f	;volatile
  1255                           
  1256                           ;DIO.c: 75:       break;
  1257  0787  2FDE               	goto	l2560
  1258  0788                     l2538:
  1259                           
  1260                           ;DIO.c: 77:         *((reg_type8_t)(0x0086)) &=(~(DIO_info->pin)) ;
  1261  0788  0879               	movf	DIO_init@DIO_info,w
  1262  0789  3E02               	addlw	2
  1263  078A  0084               	movwf	4
  1264  078B  0900               	comf	0,w
  1265  078C  00FF               	movwf	btemp+1
  1266  078D  087F               	movf	btemp+1,w
  1267  078E  0586               	andwf	6,f	;volatile
  1268                           
  1269                           ;DIO.c: 78:       break;
  1270  078F  2FDE               	goto	l2560
  1271  0790                     l2540:
  1272                           
  1273                           ;DIO.c: 80:         *((reg_type8_t)(0x0087)) &=(~(DIO_info->pin)) ;
  1274  0790  0879               	movf	DIO_init@DIO_info,w
  1275  0791  3E02               	addlw	2
  1276  0792  0084               	movwf	4
  1277  0793  0900               	comf	0,w
  1278  0794  00FF               	movwf	btemp+1
  1279  0795  087F               	movf	btemp+1,w
  1280  0796  0587               	andwf	7,f	;volatile
  1281                           
  1282                           ;DIO.c: 81:       break;
  1283  0797  2FDE               	goto	l2560
  1284  0798                     l2542:
  1285                           
  1286                           ;DIO.c: 83:         *((reg_type8_t)(0x0088)) &=(~(DIO_info->pin)) ;
  1287  0798  0879               	movf	DIO_init@DIO_info,w
  1288  0799  3E02               	addlw	2
  1289  079A  0084               	movwf	4
  1290  079B  0900               	comf	0,w
  1291  079C  00FF               	movwf	btemp+1
  1292  079D  087F               	movf	btemp+1,w
  1293  079E  0588               	andwf	8,f	;volatile
  1294                           
  1295                           ;DIO.c: 84:       break;
  1296  079F  2FDE               	goto	l2560
  1297  07A0                     l2544:
  1298                           
  1299                           ;DIO.c: 86:         *((reg_type8_t)(0x0089)) &=(~(DIO_info->pin)) ;
  1300  07A0  0879               	movf	DIO_init@DIO_info,w
  1301  07A1  3E02               	addlw	2
  1302  07A2  0084               	movwf	4
  1303  07A3  0900               	comf	0,w
  1304  07A4  00FF               	movwf	btemp+1
  1305  07A5  087F               	movf	btemp+1,w
  1306  07A6  0589               	andwf	9,f	;volatile
  1307                           
  1308                           ;DIO.c: 87:       break;
  1309  07A7  2FDE               	goto	l2560
  1310  07A8                     l2550:
  1311  07A8  0879               	movf	DIO_init@DIO_info,w
  1312  07A9  0084               	movwf	4
  1313  07AA  0800               	movf	0,w
  1314  07AB  00F6               	movwf	??_DIO_init
  1315  07AC  01F7               	clrf	??_DIO_init+1
  1316                           
  1317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1318                           ; Switch size 1, requested type "simple"
  1319                           ; Number of cases is 1, Range of values is 0 to 0
  1320                           ; switch strategies available:
  1321                           ; Name         Instructions Cycles
  1322                           ; simple_byte            4     3 (average)
  1323                           ; direct_byte           11     8 (fixed)
  1324                           ; jumptable            260     6 (fixed)
  1325                           ;	Chosen strategy is simple_byte
  1326  07AD  0877               	movf	??_DIO_init+1,w
  1327  07AE  3A00               	xorlw	0	; case 0
  1328  07AF  1903               	skipnz
  1329  07B0  2FB2               	goto	l3126
  1330  07B1  2F60               	goto	l2530
  1331  07B2                     l3126:
  1332                           
  1333                           ; Switch size 1, requested type "simple"
  1334                           ; Number of cases is 5, Range of values is 0 to 4
  1335                           ; switch strategies available:
  1336                           ; Name         Instructions Cycles
  1337                           ; simple_byte           16     9 (average)
  1338                           ; direct_byte           23     8 (fixed)
  1339                           ; jumptable            260     6 (fixed)
  1340                           ;	Chosen strategy is simple_byte
  1341  07B2  0876               	movf	??_DIO_init,w
  1342  07B3  3A00               	xorlw	0	; case 0
  1343  07B4  1903               	skipnz
  1344  07B5  2F80               	goto	l2536
  1345  07B6  3A01               	xorlw	1	; case 1
  1346  07B7  1903               	skipnz
  1347  07B8  2F88               	goto	l2538
  1348  07B9  3A03               	xorlw	3	; case 2
  1349  07BA  1903               	skipnz
  1350  07BB  2F90               	goto	l2540
  1351  07BC  3A01               	xorlw	1	; case 3
  1352  07BD  1903               	skipnz
  1353  07BE  2F98               	goto	l2542
  1354  07BF  3A07               	xorlw	7	; case 4
  1355  07C0  1903               	skipnz
  1356  07C1  2FA0               	goto	l2544
  1357  07C2  2F60               	goto	l2530
  1358  07C3                     l2552:
  1359                           
  1360                           ;DIO.c: 94: ret_error +=1 + 18;
  1361  07C3  3013               	movlw	19
  1362  07C4  00FF               	movwf	btemp+1
  1363  07C5  087F               	movf	btemp+1,w
  1364  07C6  07F8               	addwf	DIO_init@ret_error,f
  1365                           
  1366                           ;DIO.c: 95: break;
  1367  07C7  2FDE               	goto	l2560
  1368  07C8                     l2556:
  1369  07C8  0A79               	incf	DIO_init@DIO_info,w
  1370  07C9  0084               	movwf	4
  1371  07CA  0800               	movf	0,w
  1372  07CB  00F6               	movwf	??_DIO_init
  1373  07CC  01F7               	clrf	??_DIO_init+1
  1374                           
  1375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1376                           ; Switch size 1, requested type "simple"
  1377                           ; Number of cases is 1, Range of values is 0 to 0
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte            4     3 (average)
  1381                           ; direct_byte           11     8 (fixed)
  1382                           ; jumptable            260     6 (fixed)
  1383                           ;	Chosen strategy is simple_byte
  1384  07CD  0877               	movf	??_DIO_init+1,w
  1385  07CE  3A00               	xorlw	0	; case 0
  1386  07CF  1903               	skipnz
  1387  07D0  2FD2               	goto	l3128
  1388  07D1  2FC3               	goto	l2552
  1389  07D2                     l3128:
  1390                           
  1391                           ; Switch size 1, requested type "simple"
  1392                           ; Number of cases is 2, Range of values is 0 to 255
  1393                           ; switch strategies available:
  1394                           ; Name         Instructions Cycles
  1395                           ; simple_byte            7     4 (average)
  1396                           ; jumptable            260     6 (fixed)
  1397                           ;	Chosen strategy is simple_byte
  1398  07D2  0876               	movf	??_DIO_init,w
  1399  07D3  3A00               	xorlw	0	; case 0
  1400  07D4  1903               	skipnz
  1401  07D5  2F65               	goto	l2534
  1402  07D6  3AFF               	xorlw	255	; case 255
  1403  07D7  1903               	skipnz
  1404  07D8  2FA8               	goto	l2550
  1405  07D9  2FC3               	goto	l2552
  1406  07DA                     l2558:
  1407                           
  1408                           ;DIO.c: 98: {;DIO.c: 99: ret_error +=1 +16;
  1409  07DA  3011               	movlw	17
  1410  07DB  00FF               	movwf	btemp+1
  1411  07DC  087F               	movf	btemp+1,w
  1412  07DD  07F8               	addwf	DIO_init@ret_error,f
  1413  07DE                     l2560:
  1414                           
  1415                           ;DIO.c: 101: return ret_error;
  1416  07DE  0878               	movf	DIO_init@ret_error,w
  1417  07DF                     l109:
  1418  07DF  0008               	return
  1419  07E0                     __end_of_DIO_init:
  1420                           
  1421                           	psect	text3
  1422  061C                     __ptext3:	
  1423 ;; *************** function _DIO_Write *****************
  1424 ;; Defined at:
  1425 ;;		line 131 in file "DIO.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  GPIO            1    wreg     unsigned char 
  1428 ;;  pins            1    0[COMMON] unsigned char 
  1429 ;;  value           1    1[COMMON] unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  GPIO            1    5[COMMON] unsigned char 
  1432 ;;  ret_error       1    4[COMMON] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      unsigned char 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         2       0       0       0       0
  1443 ;;      Locals:         2       0       0       0       0
  1444 ;;      Temps:          2       0       0       0       0
  1445 ;;      Totals:         6       0       0       0       0
  1446 ;;Total ram usage:        6 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function _DIO_Write
  1457  061C                     _DIO_Write:
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in _DIO_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  1461                           ;DIO_Write@GPIO stored from wreg
  1462  061C  00FB               	movwf	DIO_Write@GPIO
  1463  061D                     l1864:
  1464                           
  1465                           ;DIO.c: 131: ERROR_STATUS DIO_Write (uint8_t GPIO, uint8_t pins, uint8_t value);DIO.c: 1
      +                          32: { uint8_t ret_error=0;
  1466  061D  01FA               	clrf	DIO_Write@ret_error
  1467  061E                     l1866:
  1468                           
  1469                           ;DIO.c: 134:   static uint8_t first_powerup = 0;;DIO.c: 135: if (first_powerup == 0) {
  1470  061E  0870               	movf	DIO_Write@first_powerup,w
  1471  061F  1D03               	btfss	3,2
  1472  0620  2E22               	goto	u111
  1473  0621  2E23               	goto	u110
  1474  0622                     u111:
  1475  0622  2ED8               	goto	l1922
  1476  0623                     u110:
  1477  0623  2E38               	goto	l1882
  1478  0624                     l1870:
  1479                           
  1480                           ;DIO.c: 138:   *((reg_type8_t)(0x0005))=0x00;
  1481  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1482  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1483  0626  0185               	clrf	5	;volatile
  1484                           
  1485                           ;DIO.c: 139:   break;
  1486  0627  2E51               	goto	l1884
  1487  0628                     l1872:
  1488                           
  1489                           ;DIO.c: 141:   *((reg_type8_t)(0x0006))=0x00;
  1490  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1492  062A  0186               	clrf	6	;volatile
  1493                           
  1494                           ;DIO.c: 142:   break;
  1495  062B  2E51               	goto	l1884
  1496  062C                     l1874:
  1497                           
  1498                           ;DIO.c: 144:   *((reg_type8_t)(0x0007))=0x00;
  1499  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1500  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1501  062E  0187               	clrf	7	;volatile
  1502                           
  1503                           ;DIO.c: 145:   break;
  1504  062F  2E51               	goto	l1884
  1505  0630                     l1876:
  1506                           
  1507                           ;DIO.c: 147:   *((reg_type8_t)(0x0008))=0x00;
  1508  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0632  0188               	clrf	8	;volatile
  1511                           
  1512                           ;DIO.c: 148:   break;
  1513  0633  2E51               	goto	l1884
  1514  0634                     l1878:
  1515                           
  1516                           ;DIO.c: 150:   *((reg_type8_t)(0x0009))=0x00;
  1517  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0636  0189               	clrf	9	;volatile
  1520                           
  1521                           ;DIO.c: 151:   break;
  1522  0637  2E51               	goto	l1884
  1523  0638                     l1882:
  1524  0638  087B               	movf	DIO_Write@GPIO,w
  1525  0639  00F8               	movwf	??_DIO_Write
  1526  063A  01F9               	clrf	??_DIO_Write+1
  1527                           
  1528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1529                           ; Switch size 1, requested type "simple"
  1530                           ; Number of cases is 1, Range of values is 0 to 0
  1531                           ; switch strategies available:
  1532                           ; Name         Instructions Cycles
  1533                           ; simple_byte            4     3 (average)
  1534                           ; direct_byte           11     8 (fixed)
  1535                           ; jumptable            260     6 (fixed)
  1536                           ;	Chosen strategy is simple_byte
  1537  063B  0879               	movf	??_DIO_Write+1,w
  1538  063C  3A00               	xorlw	0	; case 0
  1539  063D  1903               	skipnz
  1540  063E  2E40               	goto	l3130
  1541  063F  2E51               	goto	l1884
  1542  0640                     l3130:
  1543                           
  1544                           ; Switch size 1, requested type "simple"
  1545                           ; Number of cases is 5, Range of values is 0 to 4
  1546                           ; switch strategies available:
  1547                           ; Name         Instructions Cycles
  1548                           ; simple_byte           16     9 (average)
  1549                           ; direct_byte           23     8 (fixed)
  1550                           ; jumptable            260     6 (fixed)
  1551                           ;	Chosen strategy is simple_byte
  1552  0640  0878               	movf	??_DIO_Write,w
  1553  0641  3A00               	xorlw	0	; case 0
  1554  0642  1903               	skipnz
  1555  0643  2E24               	goto	l1870
  1556  0644  3A01               	xorlw	1	; case 1
  1557  0645  1903               	skipnz
  1558  0646  2E28               	goto	l1872
  1559  0647  3A03               	xorlw	3	; case 2
  1560  0648  1903               	skipnz
  1561  0649  2E2C               	goto	l1874
  1562  064A  3A01               	xorlw	1	; case 3
  1563  064B  1903               	skipnz
  1564  064C  2E30               	goto	l1876
  1565  064D  3A07               	xorlw	7	; case 4
  1566  064E  1903               	skipnz
  1567  064F  2E34               	goto	l1878
  1568  0650  2E51               	goto	l1884
  1569  0651                     l1884:
  1570                           
  1571                           ;DIO.c: 153:   first_powerup++;
  1572  0651  3001               	movlw	1
  1573  0652  00FF               	movwf	btemp+1
  1574  0653  087F               	movf	btemp+1,w
  1575  0654  07F0               	addwf	DIO_Write@first_powerup,f
  1576  0655  2ED8               	goto	l1922
  1577  0656                     l1886:
  1578                           
  1579                           ;DIO.c: 159:       *((reg_type8_t)(0x0005)) |= pins;
  1580  0656  0876               	movf	DIO_Write@pins,w
  1581  0657  00FF               	movwf	btemp+1
  1582  0658  087F               	movf	btemp+1,w
  1583  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1584  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1585  065B  0485               	iorwf	5,f	;volatile
  1586                           
  1587                           ;DIO.c: 160:       break;
  1588  065C  2EE8               	goto	l1924
  1589  065D                     l1888:
  1590                           
  1591                           ;DIO.c: 162:       *((reg_type8_t)(0x0006)) |= pins;
  1592  065D  0876               	movf	DIO_Write@pins,w
  1593  065E  00FF               	movwf	btemp+1
  1594  065F  087F               	movf	btemp+1,w
  1595  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0662  0486               	iorwf	6,f	;volatile
  1598                           
  1599                           ;DIO.c: 163:       break;
  1600  0663  2EE8               	goto	l1924
  1601  0664                     l1890:
  1602                           
  1603                           ;DIO.c: 165:       *((reg_type8_t)(0x0007)) |= pins;
  1604  0664  0876               	movf	DIO_Write@pins,w
  1605  0665  00FF               	movwf	btemp+1
  1606  0666  087F               	movf	btemp+1,w
  1607  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0669  0487               	iorwf	7,f	;volatile
  1610                           
  1611                           ;DIO.c: 166:       break;
  1612  066A  2EE8               	goto	l1924
  1613  066B                     l1892:
  1614                           
  1615                           ;DIO.c: 168:       *((reg_type8_t)(0x0008)) |= pins;
  1616  066B  0876               	movf	DIO_Write@pins,w
  1617  066C  00FF               	movwf	btemp+1
  1618  066D  087F               	movf	btemp+1,w
  1619  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1620  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0670  0488               	iorwf	8,f	;volatile
  1622                           
  1623                           ;DIO.c: 169:       break;
  1624  0671  2EE8               	goto	l1924
  1625  0672                     l1894:
  1626                           
  1627                           ;DIO.c: 171:       *((reg_type8_t)(0x0009)) |= pins;
  1628  0672  0876               	movf	DIO_Write@pins,w
  1629  0673  00FF               	movwf	btemp+1
  1630  0674  087F               	movf	btemp+1,w
  1631  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0677  0489               	iorwf	9,f	;volatile
  1634                           
  1635                           ;DIO.c: 172:       break;
  1636  0678  2EE8               	goto	l1924
  1637  0679                     l1896:
  1638                           
  1639                           ;DIO.c: 174:       ret_error +=1 +14;
  1640  0679  300F               	movlw	15
  1641  067A  00FF               	movwf	btemp+1
  1642  067B  087F               	movf	btemp+1,w
  1643  067C  07FA               	addwf	DIO_Write@ret_error,f
  1644                           
  1645                           ;DIO.c: 175:       break;
  1646  067D  2EE8               	goto	l1924
  1647  067E                     l1900:
  1648  067E  087B               	movf	DIO_Write@GPIO,w
  1649  067F  00F8               	movwf	??_DIO_Write
  1650  0680  01F9               	clrf	??_DIO_Write+1
  1651                           
  1652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1653                           ; Switch size 1, requested type "simple"
  1654                           ; Number of cases is 1, Range of values is 0 to 0
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte            4     3 (average)
  1658                           ; direct_byte           11     8 (fixed)
  1659                           ; jumptable            260     6 (fixed)
  1660                           ;	Chosen strategy is simple_byte
  1661  0681  0879               	movf	??_DIO_Write+1,w
  1662  0682  3A00               	xorlw	0	; case 0
  1663  0683  1903               	skipnz
  1664  0684  2E86               	goto	l3132
  1665  0685  2E79               	goto	l1896
  1666  0686                     l3132:
  1667                           
  1668                           ; Switch size 1, requested type "simple"
  1669                           ; Number of cases is 5, Range of values is 0 to 4
  1670                           ; switch strategies available:
  1671                           ; Name         Instructions Cycles
  1672                           ; simple_byte           16     9 (average)
  1673                           ; direct_byte           23     8 (fixed)
  1674                           ; jumptable            260     6 (fixed)
  1675                           ;	Chosen strategy is simple_byte
  1676  0686  0878               	movf	??_DIO_Write,w
  1677  0687  3A00               	xorlw	0	; case 0
  1678  0688  1903               	skipnz
  1679  0689  2E56               	goto	l1886
  1680  068A  3A01               	xorlw	1	; case 1
  1681  068B  1903               	skipnz
  1682  068C  2E5D               	goto	l1888
  1683  068D  3A03               	xorlw	3	; case 2
  1684  068E  1903               	skipnz
  1685  068F  2E64               	goto	l1890
  1686  0690  3A01               	xorlw	1	; case 3
  1687  0691  1903               	skipnz
  1688  0692  2E6B               	goto	l1892
  1689  0693  3A07               	xorlw	7	; case 4
  1690  0694  1903               	skipnz
  1691  0695  2E72               	goto	l1894
  1692  0696  2E79               	goto	l1896
  1693  0697                     l1902:
  1694                           
  1695                           ;DIO.c: 182:       *((reg_type8_t)(0x0005)) &= (~pins);
  1696  0697  0976               	comf	DIO_Write@pins,w
  1697  0698  00FF               	movwf	btemp+1
  1698  0699  087F               	movf	btemp+1,w
  1699  069A  1283               	bcf	3,5	;RP0=0, select bank0
  1700  069B  1303               	bcf	3,6	;RP1=0, select bank0
  1701  069C  0585               	andwf	5,f	;volatile
  1702                           
  1703                           ;DIO.c: 183:       break;
  1704  069D  2EE8               	goto	l1924
  1705  069E                     l1904:
  1706                           
  1707                           ;DIO.c: 185:       *((reg_type8_t)(0x0006)) &= (~pins);
  1708  069E  0976               	comf	DIO_Write@pins,w
  1709  069F  00FF               	movwf	btemp+1
  1710  06A0  087F               	movf	btemp+1,w
  1711  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1712  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1713  06A3  0586               	andwf	6,f	;volatile
  1714                           
  1715                           ;DIO.c: 186:       break;
  1716  06A4  2EE8               	goto	l1924
  1717  06A5                     l1906:
  1718                           
  1719                           ;DIO.c: 188:       *((reg_type8_t)(0x0007)) &= (~pins);
  1720  06A5  0976               	comf	DIO_Write@pins,w
  1721  06A6  00FF               	movwf	btemp+1
  1722  06A7  087F               	movf	btemp+1,w
  1723  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1724  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1725  06AA  0587               	andwf	7,f	;volatile
  1726                           
  1727                           ;DIO.c: 189:       break;
  1728  06AB  2EE8               	goto	l1924
  1729  06AC                     l1908:
  1730                           
  1731                           ;DIO.c: 191:       *((reg_type8_t)(0x0008)) &= (~pins);
  1732  06AC  0976               	comf	DIO_Write@pins,w
  1733  06AD  00FF               	movwf	btemp+1
  1734  06AE  087F               	movf	btemp+1,w
  1735  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1736  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1737  06B1  0588               	andwf	8,f	;volatile
  1738                           
  1739                           ;DIO.c: 192:       break;
  1740  06B2  2EE8               	goto	l1924
  1741  06B3                     l1910:
  1742                           
  1743                           ;DIO.c: 194:       *((reg_type8_t)(0x0009)) &= (~pins);
  1744  06B3  0976               	comf	DIO_Write@pins,w
  1745  06B4  00FF               	movwf	btemp+1
  1746  06B5  087F               	movf	btemp+1,w
  1747  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1748  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1749  06B8  0589               	andwf	9,f	;volatile
  1750                           
  1751                           ;DIO.c: 195:       break;
  1752  06B9  2EE8               	goto	l1924
  1753  06BA                     l1916:
  1754  06BA  087B               	movf	DIO_Write@GPIO,w
  1755  06BB  00F8               	movwf	??_DIO_Write
  1756  06BC  01F9               	clrf	??_DIO_Write+1
  1757                           
  1758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1759                           ; Switch size 1, requested type "simple"
  1760                           ; Number of cases is 1, Range of values is 0 to 0
  1761                           ; switch strategies available:
  1762                           ; Name         Instructions Cycles
  1763                           ; simple_byte            4     3 (average)
  1764                           ; direct_byte           11     8 (fixed)
  1765                           ; jumptable            260     6 (fixed)
  1766                           ;	Chosen strategy is simple_byte
  1767  06BD  0879               	movf	??_DIO_Write+1,w
  1768  06BE  3A00               	xorlw	0	; case 0
  1769  06BF  1903               	skipnz
  1770  06C0  2EC2               	goto	l3134
  1771  06C1  2E79               	goto	l1896
  1772  06C2                     l3134:
  1773                           
  1774                           ; Switch size 1, requested type "simple"
  1775                           ; Number of cases is 5, Range of values is 0 to 4
  1776                           ; switch strategies available:
  1777                           ; Name         Instructions Cycles
  1778                           ; simple_byte           16     9 (average)
  1779                           ; direct_byte           23     8 (fixed)
  1780                           ; jumptable            260     6 (fixed)
  1781                           ;	Chosen strategy is simple_byte
  1782  06C2  0878               	movf	??_DIO_Write,w
  1783  06C3  3A00               	xorlw	0	; case 0
  1784  06C4  1903               	skipnz
  1785  06C5  2E97               	goto	l1902
  1786  06C6  3A01               	xorlw	1	; case 1
  1787  06C7  1903               	skipnz
  1788  06C8  2E9E               	goto	l1904
  1789  06C9  3A03               	xorlw	3	; case 2
  1790  06CA  1903               	skipnz
  1791  06CB  2EA5               	goto	l1906
  1792  06CC  3A01               	xorlw	1	; case 3
  1793  06CD  1903               	skipnz
  1794  06CE  2EAC               	goto	l1908
  1795  06CF  3A07               	xorlw	7	; case 4
  1796  06D0  1903               	skipnz
  1797  06D1  2EB3               	goto	l1910
  1798  06D2  2E79               	goto	l1896
  1799  06D3                     l1918:
  1800                           
  1801                           ;DIO.c: 203: ret_error +=1 +18;
  1802  06D3  3013               	movlw	19
  1803  06D4  00FF               	movwf	btemp+1
  1804  06D5  087F               	movf	btemp+1,w
  1805  06D6  07FA               	addwf	DIO_Write@ret_error,f
  1806                           
  1807                           ;DIO.c: 204:   break;
  1808  06D7  2EE8               	goto	l1924
  1809  06D8                     l1922:
  1810  06D8  0877               	movf	DIO_Write@value,w
  1811  06D9  00F8               	movwf	??_DIO_Write
  1812  06DA  01F9               	clrf	??_DIO_Write+1
  1813                           
  1814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1815                           ; Switch size 1, requested type "simple"
  1816                           ; Number of cases is 1, Range of values is 0 to 0
  1817                           ; switch strategies available:
  1818                           ; Name         Instructions Cycles
  1819                           ; simple_byte            4     3 (average)
  1820                           ; direct_byte           11     8 (fixed)
  1821                           ; jumptable            260     6 (fixed)
  1822                           ;	Chosen strategy is simple_byte
  1823  06DB  0879               	movf	??_DIO_Write+1,w
  1824  06DC  3A00               	xorlw	0	; case 0
  1825  06DD  1903               	skipnz
  1826  06DE  2EE0               	goto	l3136
  1827  06DF  2ED3               	goto	l1918
  1828  06E0                     l3136:
  1829                           
  1830                           ; Switch size 1, requested type "simple"
  1831                           ; Number of cases is 2, Range of values is 0 to 255
  1832                           ; switch strategies available:
  1833                           ; Name         Instructions Cycles
  1834                           ; simple_byte            7     4 (average)
  1835                           ; jumptable            260     6 (fixed)
  1836                           ;	Chosen strategy is simple_byte
  1837  06E0  0878               	movf	??_DIO_Write,w
  1838  06E1  3A00               	xorlw	0	; case 0
  1839  06E2  1903               	skipnz
  1840  06E3  2EBA               	goto	l1916
  1841  06E4  3AFF               	xorlw	255	; case 255
  1842  06E5  1903               	skipnz
  1843  06E6  2E7E               	goto	l1900
  1844  06E7  2ED3               	goto	l1918
  1845  06E8                     l1924:
  1846                           
  1847                           ;DIO.c: 206: return ret_error;
  1848  06E8  087A               	movf	DIO_Write@ret_error,w
  1849  06E9                     l143:
  1850  06E9  0008               	return
  1851  06EA                     __end_of_DIO_Write:
  1852                           
  1853                           	psect	text4
  1854  048D                     __ptext4:	
  1855 ;; *************** function _DIO_Read *****************
  1856 ;; Defined at:
  1857 ;;		line 235 in file "DIO.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  GPIO            1    wreg     unsigned char 
  1860 ;;  pins            1    0[COMMON] unsigned char 
  1861 ;;  data            1    1[COMMON] PTR unsigned char 
  1862 ;;		 -> data2(1), data(1), 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  GPIO            1    4[COMMON] unsigned char 
  1865 ;;  ret_error       1    5[COMMON] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      unsigned char 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         2       0       0       0       0
  1876 ;;      Locals:         2       0       0       0       0
  1877 ;;      Temps:          2       0       0       0       0
  1878 ;;      Totals:         6       0       0       0       0
  1879 ;;Total ram usage:        6 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function _DIO_Read
  1890  048D                     _DIO_Read:
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _DIO_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  1894                           ;DIO_Read@GPIO stored from wreg
  1895  048D  00FA               	movwf	DIO_Read@GPIO
  1896  048E                     l1944:
  1897                           
  1898                           ;DIO.c: 235: ERROR_STATUS DIO_Read (uint8_t GPIO,uint8_t pins, uint8_t *data);DIO.c: 236
      +                          : {;DIO.c: 237:   uint8_t ret_error=0;
  1899  048E  01FB               	clrf	DIO_Read@ret_error
  1900                           
  1901                           ;DIO.c: 238:   switch (GPIO)
  1902  048F  2CC7               	goto	l1960
  1903  0490                     l1946:
  1904                           
  1905                           ;DIO.c: 240:     *data=(*((reg_type8_t)(0x0005)) & pins);
  1906  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0492  0805               	movf	5,w	;volatile
  1909  0493  0576               	andwf	DIO_Read@pins,w
  1910  0494  00FF               	movwf	btemp+1
  1911  0495  0877               	movf	DIO_Read@data,w
  1912  0496  0084               	movwf	4
  1913  0497  087F               	movf	btemp+1,w
  1914  0498  0080               	movwf	0
  1915                           
  1916                           ;DIO.c: 241:     break;
  1917  0499  2CE0               	goto	l1962
  1918  049A                     l1948:
  1919                           
  1920                           ;DIO.c: 243:     *data=(*((reg_type8_t)(0x0006)) & pins);
  1921  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1922  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1923  049C  0806               	movf	6,w	;volatile
  1924  049D  0576               	andwf	DIO_Read@pins,w
  1925  049E  00FF               	movwf	btemp+1
  1926  049F  0877               	movf	DIO_Read@data,w
  1927  04A0  0084               	movwf	4
  1928  04A1  087F               	movf	btemp+1,w
  1929  04A2  0080               	movwf	0
  1930                           
  1931                           ;DIO.c: 244:     break;
  1932  04A3  2CE0               	goto	l1962
  1933  04A4                     l1950:
  1934                           
  1935                           ;DIO.c: 246:     *data=(*((reg_type8_t)(0x0007)) & pins);
  1936  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1937  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1938  04A6  0807               	movf	7,w	;volatile
  1939  04A7  0576               	andwf	DIO_Read@pins,w
  1940  04A8  00FF               	movwf	btemp+1
  1941  04A9  0877               	movf	DIO_Read@data,w
  1942  04AA  0084               	movwf	4
  1943  04AB  087F               	movf	btemp+1,w
  1944  04AC  0080               	movwf	0
  1945                           
  1946                           ;DIO.c: 247:     break;
  1947  04AD  2CE0               	goto	l1962
  1948  04AE                     l1952:
  1949                           
  1950                           ;DIO.c: 249:     *data=(*((reg_type8_t)(0x0008)) & pins);
  1951  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1952  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1953  04B0  0808               	movf	8,w	;volatile
  1954  04B1  0576               	andwf	DIO_Read@pins,w
  1955  04B2  00FF               	movwf	btemp+1
  1956  04B3  0877               	movf	DIO_Read@data,w
  1957  04B4  0084               	movwf	4
  1958  04B5  087F               	movf	btemp+1,w
  1959  04B6  0080               	movwf	0
  1960                           
  1961                           ;DIO.c: 250:                 break;
  1962  04B7  2CE0               	goto	l1962
  1963  04B8                     l1954:
  1964                           
  1965                           ;DIO.c: 252:     *data=(*((reg_type8_t)(0x0009)) & pins);
  1966  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1967  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1968  04BA  0809               	movf	9,w	;volatile
  1969  04BB  0576               	andwf	DIO_Read@pins,w
  1970  04BC  00FF               	movwf	btemp+1
  1971  04BD  0877               	movf	DIO_Read@data,w
  1972  04BE  0084               	movwf	4
  1973  04BF  087F               	movf	btemp+1,w
  1974  04C0  0080               	movwf	0
  1975                           
  1976                           ;DIO.c: 253:     break;
  1977  04C1  2CE0               	goto	l1962
  1978  04C2                     l1956:
  1979                           
  1980                           ;DIO.c: 255:     ret_error += 14;
  1981  04C2  300E               	movlw	14
  1982  04C3  00FF               	movwf	btemp+1
  1983  04C4  087F               	movf	btemp+1,w
  1984  04C5  07FB               	addwf	DIO_Read@ret_error,f
  1985                           
  1986                           ;DIO.c: 256:     break;
  1987  04C6  2CE0               	goto	l1962
  1988  04C7                     l1960:
  1989  04C7  087A               	movf	DIO_Read@GPIO,w
  1990  04C8  00F8               	movwf	??_DIO_Read
  1991  04C9  01F9               	clrf	??_DIO_Read+1
  1992                           
  1993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1994                           ; Switch size 1, requested type "simple"
  1995                           ; Number of cases is 1, Range of values is 0 to 0
  1996                           ; switch strategies available:
  1997                           ; Name         Instructions Cycles
  1998                           ; simple_byte            4     3 (average)
  1999                           ; direct_byte           11     8 (fixed)
  2000                           ; jumptable            260     6 (fixed)
  2001                           ;	Chosen strategy is simple_byte
  2002  04CA  0879               	movf	??_DIO_Read+1,w
  2003  04CB  3A00               	xorlw	0	; case 0
  2004  04CC  1903               	skipnz
  2005  04CD  2CCF               	goto	l3138
  2006  04CE  2CC2               	goto	l1956
  2007  04CF                     l3138:
  2008                           
  2009                           ; Switch size 1, requested type "simple"
  2010                           ; Number of cases is 5, Range of values is 0 to 4
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte           16     9 (average)
  2014                           ; direct_byte           23     8 (fixed)
  2015                           ; jumptable            260     6 (fixed)
  2016                           ;	Chosen strategy is simple_byte
  2017  04CF  0878               	movf	??_DIO_Read,w
  2018  04D0  3A00               	xorlw	0	; case 0
  2019  04D1  1903               	skipnz
  2020  04D2  2C90               	goto	l1946
  2021  04D3  3A01               	xorlw	1	; case 1
  2022  04D4  1903               	skipnz
  2023  04D5  2C9A               	goto	l1948
  2024  04D6  3A03               	xorlw	3	; case 2
  2025  04D7  1903               	skipnz
  2026  04D8  2CA4               	goto	l1950
  2027  04D9  3A01               	xorlw	1	; case 3
  2028  04DA  1903               	skipnz
  2029  04DB  2CAE               	goto	l1952
  2030  04DC  3A07               	xorlw	7	; case 4
  2031  04DD  1903               	skipnz
  2032  04DE  2CB8               	goto	l1954
  2033  04DF  2CC2               	goto	l1956
  2034  04E0                     l1962:
  2035                           
  2036                           ;DIO.c: 258:    if(*data > 0)
  2037  04E0  0877               	movf	DIO_Read@data,w
  2038  04E1  0084               	movwf	4
  2039  04E2  0800               	movf	0,w
  2040  04E3  1903               	btfsc	3,2
  2041  04E4  2CE6               	goto	u121
  2042  04E5  2CE7               	goto	u120
  2043  04E6                     u121:
  2044  04E6  2CEB               	goto	l1966
  2045  04E7                     u120:
  2046  04E7                     l1964:
  2047                           
  2048                           ;DIO.c: 259:    {;DIO.c: 260:     *data = 1;
  2049  04E7  0877               	movf	DIO_Read@data,w
  2050  04E8  0084               	movwf	4
  2051  04E9  0180               	clrf	0
  2052  04EA  0A80               	incf	0,f
  2053  04EB                     l1966:
  2054                           
  2055                           ;DIO.c: 263:   return ret_error;
  2056  04EB  087B               	movf	DIO_Read@ret_error,w
  2057  04EC                     l155:
  2058  04EC  0008               	return
  2059  04ED                     __end_of_DIO_Read:
  2060  007E                     btemp	set	126	;btemp
  2061  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         39
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    DIO_Read@data	PTR unsigned char  size(1) Largest target is 1
		 -> data2(COMMON[1]), data(COMMON[1]), 

    DIO_init@DIO_info	PTR struct DIO_Cfg_s size(1) Largest target is 4
		 -> Dio_configutation_A(BANK0[4]), Dio_configutation_C(BANK0[4]), Dio_configutation_B(BANK0[4]), 

    Timer_Deinit_Configuration2.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Deinit_Configuration1.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Deinit_Configuration0.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Configuration2.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Configuration1.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Configuration0.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    TIMER0OVF_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), timer0_interrupt_ovfRoutine(), 

    S23Timer_cfg_s$Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Init@Timer_cfg.Timer_Cbk_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> timer0_interrupt_ovfRoutine(), 

    Timer_Init@Timer_cfg	PTR struct Timer_cfg_s size(1) Largest target is 5
		 -> Timer_Configuration0(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_DIO_Read
    _main->_DIO_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2329
                           _DIO_Read
                          _DIO_Write
                           _DIO_init
                         _Timer_Init
 ---------------------------------------------------------------------------------
 (1) _Timer_Init                                           4     4      0     277
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DIO_init                                             4     4      0     800
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DIO_Write                                            6     4      2     638
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DIO_Read                                             6     4      2     614
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DIO_Read
   _DIO_Write
   _DIO_init
   _Timer_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3F      12        0.0%
ABS                  0      0      3F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jul 13 19:46:15 2020

                          l8 056D                            pc 0002                           l42 061B  
                         fsr 0004                          l109 07DF                          l143 06E9  
                        l155 04EC                          l192 0511                          u110 0623  
                        u111 0622                          u120 04E7                          u200 053D  
                        u121 04E6                          u201 053C                          u170 06F3  
                        u171 06F2                          u180 0737                          u181 0736  
                        u190 0538                          u191 0537                          _ret 007C  
                        fsr0 0004                          indf 0000                         l3110 05B2  
                       l3120 060F                         l3112 05C4                         l3130 0640  
                       l3122 0713                         l3114 05D7                         l3106 058C  
                       l3132 0686                         l3124 076F                         l2500 06F8  
                       l1700 05F2                         l3116 05EA                         l3108 059F  
                       l3134 06C2                         l3126 07B2                         l2502 06FC  
                       l2510 0708                         l3118 05FC                         l3136 06E0  
                       l3128 07D2                         l2520 0738                         l2504 0700  
                       l2512 0724                         l1704 0604                         l2600 0538  
                       l3138 04CF                         l2530 0760                         l2522 0740  
                       l2506 0704                         l2514 0728                         l1706 061A  
                       l2602 053D                         l1900 067E                         l2540 0790  
                       l2524 0748                         l2516 0732                         l2604 054F  
                       l1910 06B3                         l1902 0697                         l2550 07A8  
                       l2542 0798                         l2534 0765                         l2526 0750  
                       l1670 056F                         l1904 069E                         l2552 07C3  
                       l2544 07A0                         l2536 0780                         l2528 0758  
                       l2560 07DE                         l1680 0594                         l1672 0577  
                       l1906 06A5                         l1922 06D8                         l2538 0788  
                       l2490 06EB                         l1674 057C                         l1666 0562  
                       l1916 06BA                         l1908 06AC                         l1924 06E8  
                       l2556 07C8                         l2492 06EC                         l1692 05CC  
                       l1684 05A7                         l1676 0581                         l1668 0564  
                       l1950 04A4                         l1918 06D3                         l1870 0624  
                       l2558 07DA                         l2494 06EE                         l1952 04AE  
                       l1960 04C7                         l1944 048E                         l1872 0628  
                       l1864 061D                         l1696 05DF                         l1688 05BA  
                       l1954 04B8                         l1962 04E0                         l1946 0490  
                       l1890 0664                         l1874 062C                         l1882 0638  
                       l1866 061E                         l2498 06F4                         l1964 04E7  
                       l1956 04C2                         l1948 049A                         l1892 066B  
                       l1876 0630                         l1884 0651                         l2596 04ED  
                       l1966 04EB                         l1894 0672                         l1886 0656  
                       l1878 0634                         l2598 0533                         l1896 0679  
                       l1888 065D  _timer0_interrupt_ovfRoutine 0000           __size_of_DIO_Write 00CE  
                       _data 0075                         _main 04ED                         btemp 007E  
                       start 0000  _Timer_Deinit_Configuration0 002A  _Timer_Deinit_Configuration1 0025  
_Timer_Deinit_Configuration2 0020             __end_of_DIO_Read 04ED             __end_of_DIO_init 07E0  
                      ?_main 0076                DIO_Write@GPIO 007B                DIO_Write@pins 0076  
                      _data2 0074           DIO_Write@ret_error 007A                        pclath 000A  
                      status 0003                        wtemp0 007E              __initialization 07E0  
               __end_of_main 0561                       ??_main 007C            __end_of_DIO_Write 06EA  
             DIO_Write@value 0077       DIO_Write@first_powerup 0070                   _Timer_Init 0561  
                  ?_DIO_Read 0076      __end_of__initialization 07FC                    ?_DIO_init 0076  
             __pcstackCOMMON 0076                 __pidataBANK0 0469          Timer_Init@Timer_cfg 0079  
                 __pbssBANK0 0020                   ??_DIO_Read 0078                   ??_DIO_init 0076  
                 __pnvCOMMON 007C            DIO_Read@ret_error 007B                   __pmaintext 04ED  
                ?_Timer_Init 0076   DIO_init@first_powerup_init 0071                      __ptext1 0561  
                    __ptext2 06EA                      __ptext3 061C                      __ptext4 048D  
                    _is_init 0072          Timer_Init@ret_error 0078                    _DIO_Write 061C  
                    clrloop0 0462         end_of_initialization 07FC          __size_of_Timer_Init 00BB  
                 ?_DIO_Write 0076            __size_of_DIO_Read 0060            __size_of_DIO_init 00F6  
              _TIMER0OVF_INT 0073          start_initialization 07E0            DIO_init@ret_error 0078  
                 init_fetch0 047A          _Dio_configutation_A 0046          _Dio_configutation_B 004E  
        _Dio_configutation_C 004A          _Dio_configutation_D 003D          _Dio_configutation_E 0039  
               ??_Timer_Init 0076                  __pdataBANK0 0041                  __pbssCOMMON 0070  
                  ___latbits 0002                  ??_DIO_Write 0078           __end_of_Timer_Init 061C  
           DIO_init@DIO_info 0079         _Timer_Configuration0 0041         _Timer_Configuration1 0034  
       _Timer_Configuration2 002F                     _DIO_Read 048D                     _DIO_init 06EA  
                  clear_ram0 0461                __size_of_main 0074                     init_ram0 047E  
               DIO_Read@GPIO 007A                 DIO_Read@data 0077                 DIO_Read@pins 0076  
